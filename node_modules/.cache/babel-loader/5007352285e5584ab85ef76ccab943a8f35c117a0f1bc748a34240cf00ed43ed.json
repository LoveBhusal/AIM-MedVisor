{"ast":null,"code":"\"use strict\";\n\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  return node => {\n    refs.forEach(ref => {\n      assignRef(ref, node);\n    });\n  };\n}\nexport { assignRef, mergeRefs };","map":{"version":3,"names":["assignRef","ref","value","current","error","Error","mergeRefs","_len","arguments","length","refs","Array","_key","node","forEach"],"sources":["/Users/rishil/AIM-MedVisor/node_modules/@chakra-ui/react/dist/esm/merge-refs.js"],"sourcesContent":["\"use strict\";\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\n\nexport { assignRef, mergeRefs };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,SAASA,CAACC,GAAG,EAAEC,KAAK,EAAE;EAC7B,IAAID,GAAG,IAAI,IAAI,EAAE;EACjB,IAAI,OAAOA,GAAG,KAAK,UAAU,EAAE;IAC7BA,GAAG,CAACC,KAAK,CAAC;IACV;EACF;EACA,IAAI;IACFD,GAAG,CAACE,OAAO,GAAGD,KAAK;EACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,wBAAwBH,KAAK,aAAaD,GAAG,GAAG,CAAC;EACnE;AACF;AACA,SAASK,SAASA,CAAA,EAAU;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAI,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAAJF,IAAI,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EACxB,OAAQC,IAAI,IAAK;IACfH,IAAI,CAACI,OAAO,CAAEb,GAAG,IAAK;MACpBD,SAAS,CAACC,GAAG,EAAEY,IAAI,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC;AACH;AAEA,SAASb,SAAS,EAAEM,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}