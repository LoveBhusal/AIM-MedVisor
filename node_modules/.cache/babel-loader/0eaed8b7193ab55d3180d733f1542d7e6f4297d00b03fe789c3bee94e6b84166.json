{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { isLeftClick, getEventPoint, getRelativePoint, getEventKey } from '@zag-js/dom-event';\nimport { createScope, query, dataAttr, ariaAttr, raf } from '@zag-js/dom-query';\nimport { dispatchInputValueEvent, trackFormControl } from '@zag-js/form-utils';\nimport { createMachine } from '@zag-js/core';\nimport { createSplitProps, compact, isEqual } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/rating-group.anatomy.ts\nvar anatomy = createAnatomy(\"rating-group\").parts(\"root\", \"label\", \"item\", \"control\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: ctx => ctx.ids?.root ?? `rating:${ctx.id}`,\n  getLabelId: ctx => ctx.ids?.label ?? `rating:${ctx.id}:label`,\n  getHiddenInputId: ctx => ctx.ids?.hiddenInput ?? `rating:${ctx.id}:input`,\n  getControlId: ctx => ctx.ids?.control ?? `rating:${ctx.id}:control`,\n  getItemId: (ctx, id) => ctx.ids?.item?.(id) ?? `rating:${ctx.id}:item:${id}`,\n  getRootEl: ctx => dom.getById(ctx, dom.getRootId(ctx)),\n  getControlEl: ctx => dom.getById(ctx, dom.getControlId(ctx)),\n  getRadioEl: function (ctx) {\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ctx.value;\n    const selector = `[role=radio][aria-posinset='${Math.ceil(value)}']`;\n    return query(dom.getControlEl(ctx), selector);\n  },\n  getHiddenInputEl: ctx => dom.getById(ctx, dom.getHiddenInputId(ctx)),\n  dispatchChangeEvent: ctx => {\n    const inputEl = dom.getHiddenInputEl(ctx);\n    if (!inputEl) return;\n    dispatchInputValueEvent(inputEl, {\n      value: ctx.value\n    });\n  }\n});\n\n// src/rating-group.connect.ts\nfunction connect(state, send, normalize) {\n  const interactive = state.context.isInteractive;\n  const disabled = state.context.isDisabled;\n  const value = state.context.value;\n  const hoveredValue = state.context.hoveredValue;\n  const translations = state.context.translations;\n  function getItemState(props2) {\n    const value2 = state.context.isHovering ? state.context.hoveredValue : state.context.value;\n    const equal = Math.ceil(value2) === props2.index;\n    const highlighted = props2.index <= value2 || equal;\n    const half = equal && Math.abs(value2 - props2.index) === 0.5;\n    return {\n      highlighted,\n      half,\n      checked: equal || state.context.value === -1 && props2.index === 1\n    };\n  }\n  return {\n    hovering: state.context.isHovering,\n    value,\n    hoveredValue,\n    count: state.context.count,\n    items: Array.from({\n      length: state.context.count\n    }).map((_, index) => index + 1),\n    setValue(value2) {\n      send({\n        type: \"SET_VALUE\",\n        value: value2\n      });\n    },\n    clearValue() {\n      send(\"CLEAR_VALUE\");\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context)\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        name: state.context.name,\n        form: state.context.form,\n        type: \"text\",\n        hidden: true,\n        disabled,\n        readOnly: state.context.readOnly,\n        required: state.context.required,\n        id: dom.getHiddenInputId(state.context),\n        defaultValue: state.context.value\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        \"data-disabled\": dataAttr(disabled),\n        htmlFor: dom.getHiddenInputId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          event.preventDefault();\n          const radioEl = dom.getRadioEl(state.context, 1);\n          radioEl?.focus({\n            preventScroll: true\n          });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        id: dom.getControlId(state.context),\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        role: \"radiogroup\",\n        \"aria-orientation\": \"horizontal\",\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"aria-readonly\": ariaAttr(state.context.readOnly),\n        \"data-readonly\": dataAttr(state.context.readOnly),\n        tabIndex: state.context.readOnly ? 0 : -1,\n        \"data-disabled\": dataAttr(disabled),\n        onPointerMove(event) {\n          if (!interactive) return;\n          if (event.pointerType === \"touch\") return;\n          send(\"GROUP_POINTER_OVER\");\n        },\n        onPointerLeave(event) {\n          if (!interactive) return;\n          if (event.pointerType === \"touch\") return;\n          send(\"GROUP_POINTER_LEAVE\");\n        }\n      });\n    },\n    getItemState,\n    getItemProps(props2) {\n      const {\n        index\n      } = props2;\n      const itemState = getItemState(props2);\n      const valueText = translations.ratingValueText(index);\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        id: dom.getItemId(state.context, index.toString()),\n        role: \"radio\",\n        tabIndex: disabled ? void 0 : itemState.checked ? 0 : -1,\n        \"aria-roledescription\": \"rating\",\n        \"aria-label\": valueText,\n        \"aria-disabled\": disabled,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-readonly\": dataAttr(state.context.readOnly),\n        \"aria-setsize\": state.context.count,\n        \"aria-checked\": itemState.checked,\n        \"data-checked\": dataAttr(itemState.checked),\n        \"aria-posinset\": index,\n        \"data-highlighted\": dataAttr(itemState.highlighted),\n        \"data-half\": dataAttr(itemState.half),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!isLeftClick(event)) return;\n          event.preventDefault();\n        },\n        onPointerMove(event) {\n          if (!interactive) return;\n          const point = getEventPoint(event);\n          const relativePoint = getRelativePoint(point, event.currentTarget);\n          const percentX = relativePoint.getPercentValue({\n            orientation: \"horizontal\",\n            dir: state.context.dir\n          });\n          const isMidway = percentX < 0.5;\n          send({\n            type: \"POINTER_OVER\",\n            index,\n            isMidway\n          });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const keyMap = {\n            ArrowLeft() {\n              send(\"ARROW_LEFT\");\n            },\n            ArrowRight() {\n              send(\"ARROW_RIGHT\");\n            },\n            ArrowUp() {\n              send(\"ARROW_LEFT\");\n            },\n            ArrowDown() {\n              send(\"ARROW_RIGHT\");\n            },\n            Space() {\n              send({\n                type: \"SPACE\",\n                value: index\n              });\n            },\n            Home() {\n              send(\"HOME\");\n            },\n            End() {\n              send(\"END\");\n            }\n          };\n          const key = getEventKey(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        },\n        onClick() {\n          if (!interactive) return;\n          send({\n            type: \"CLICK\",\n            value: index\n          });\n        },\n        onFocus() {\n          if (!interactive) return;\n          send(\"FOCUS\");\n        },\n        onBlur() {\n          if (!interactive) return;\n          send(\"BLUR\");\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"rating\",\n    initial: \"idle\",\n    context: {\n      name: \"rating\",\n      count: 5,\n      dir: \"ltr\",\n      value: -1,\n      readOnly: false,\n      disabled: false,\n      ...ctx,\n      hoveredValue: -1,\n      fieldsetDisabled: false,\n      translations: {\n        ratingValueText: index => `${index} stars`,\n        ...ctx.translations\n      }\n    },\n    created: [\"roundValueIfNeeded\"],\n    watch: {\n      allowHalf: [\"roundValueIfNeeded\"]\n    },\n    computed: {\n      isDisabled: ctx2 => !!ctx2.disabled || ctx2.fieldsetDisabled,\n      isInteractive: ctx2 => !(ctx2.isDisabled || ctx2.readOnly),\n      isHovering: ctx2 => ctx2.hoveredValue > -1\n    },\n    activities: [\"trackFormControlState\"],\n    on: {\n      SET_VALUE: {\n        actions: [\"setValue\"]\n      },\n      CLEAR_VALUE: {\n        actions: [\"clearValue\"]\n      }\n    },\n    states: {\n      idle: {\n        entry: \"clearHoveredValue\",\n        on: {\n          GROUP_POINTER_OVER: \"hover\",\n          FOCUS: \"focus\",\n          CLICK: {\n            actions: [\"setValue\", \"focusActiveRadio\"]\n          }\n        }\n      },\n      focus: {\n        on: {\n          POINTER_OVER: {\n            actions: \"setHoveredValue\"\n          },\n          GROUP_POINTER_LEAVE: {\n            actions: \"clearHoveredValue\"\n          },\n          BLUR: \"idle\",\n          SPACE: {\n            guard: \"isValueEmpty\",\n            actions: [\"setValue\"]\n          },\n          CLICK: {\n            actions: [\"setValue\", \"focusActiveRadio\"]\n          },\n          ARROW_LEFT: {\n            actions: [\"setPrevValue\", \"focusActiveRadio\"]\n          },\n          ARROW_RIGHT: {\n            actions: [\"setNextValue\", \"focusActiveRadio\"]\n          },\n          HOME: {\n            actions: [\"setValueToMin\", \"focusActiveRadio\"]\n          },\n          END: {\n            actions: [\"setValueToMax\", \"focusActiveRadio\"]\n          }\n        }\n      },\n      hover: {\n        on: {\n          POINTER_OVER: {\n            actions: \"setHoveredValue\"\n          },\n          GROUP_POINTER_LEAVE: [{\n            guard: \"isRadioFocused\",\n            target: \"focus\",\n            actions: \"clearHoveredValue\"\n          }, {\n            target: \"idle\",\n            actions: \"clearHoveredValue\"\n          }],\n          CLICK: {\n            actions: [\"setValue\", \"focusActiveRadio\"]\n          }\n        }\n      }\n    }\n  }, {\n    guards: {\n      isInteractive: ctx2 => !(ctx2.disabled || ctx2.readOnly),\n      isHoveredValueEmpty: ctx2 => ctx2.hoveredValue === -1,\n      isValueEmpty: ctx2 => ctx2.value <= 0,\n      isRadioFocused: ctx2 => !!dom.getControlEl(ctx2)?.contains(dom.getActiveElement(ctx2))\n    },\n    activities: {\n      trackFormControlState(ctx2, _evt, _ref) {\n        let {\n          initialContext\n        } = _ref;\n        return trackFormControl(dom.getHiddenInputEl(ctx2), {\n          onFieldsetDisabledChange(disabled) {\n            ctx2.fieldsetDisabled = disabled;\n          },\n          onFormReset() {\n            set.value(ctx2, initialContext.value);\n          }\n        });\n      }\n    },\n    actions: {\n      clearHoveredValue(ctx2) {\n        set.hoveredValue(ctx2, -1);\n      },\n      focusActiveRadio(ctx2) {\n        raf(() => dom.getRadioEl(ctx2)?.focus());\n      },\n      setPrevValue(ctx2) {\n        const factor = ctx2.allowHalf ? 0.5 : 1;\n        set.value(ctx2, Math.max(0, ctx2.value - factor));\n      },\n      setNextValue(ctx2) {\n        const factor = ctx2.allowHalf ? 0.5 : 1;\n        const value = ctx2.value === -1 ? 0 : ctx2.value;\n        set.value(ctx2, Math.min(ctx2.count, value + factor));\n      },\n      setValueToMin(ctx2) {\n        set.value(ctx2, 1);\n      },\n      setValueToMax(ctx2) {\n        set.value(ctx2, ctx2.count);\n      },\n      setValue(ctx2, evt) {\n        const value = ctx2.hoveredValue === -1 ? evt.value : ctx2.hoveredValue;\n        set.value(ctx2, value);\n      },\n      clearValue(ctx2) {\n        set.value(ctx2, -1);\n      },\n      setHoveredValue(ctx2, evt) {\n        const half = ctx2.allowHalf && evt.isMidway;\n        const factor = half ? 0.5 : 0;\n        set.hoveredValue(ctx2, evt.index - factor);\n      },\n      roundValueIfNeeded(ctx2) {\n        if (ctx2.allowHalf) return;\n        ctx2.value = Math.round(ctx2.value);\n      }\n    }\n  });\n}\nvar invoke = {\n  change: ctx => {\n    ctx.onValueChange?.({\n      value: ctx.value\n    });\n    dom.dispatchChangeEvent(ctx);\n  },\n  hoverChange: ctx => {\n    ctx.onHoverChange?.({\n      hoveredValue: ctx.hoveredValue\n    });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if (isEqual(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  },\n  hoveredValue: (ctx, value) => {\n    if (isEqual(ctx.hoveredValue, value)) return;\n    ctx.hoveredValue = value;\n    invoke.hoverChange(ctx);\n  }\n};\nvar props = createProps()([\"allowHalf\", \"autoFocus\", \"count\", \"dir\", \"disabled\", \"form\", \"getRootNode\", \"id\", \"ids\", \"name\", \"onHoverChange\", \"onValueChange\", \"required\", \"readOnly\", \"translations\", \"value\"]);\nvar splitProps = createSplitProps(props);\nvar itemProps = createProps()([\"index\"]);\nvar splitItemProps = createSplitProps(itemProps);\nexport { anatomy, connect, itemProps, machine, props, splitItemProps, splitProps };","map":{"version":3,"names":["createAnatomy","isLeftClick","getEventPoint","getRelativePoint","getEventKey","createScope","query","dataAttr","ariaAttr","raf","dispatchInputValueEvent","trackFormControl","createMachine","createSplitProps","compact","isEqual","createProps","anatomy","parts","build","dom","getRootId","ctx","ids","root","id","getLabelId","label","getHiddenInputId","hiddenInput","getControlId","control","getItemId","item","getRootEl","getById","getControlEl","getRadioEl","value","arguments","length","undefined","selector","Math","ceil","getHiddenInputEl","dispatchChangeEvent","inputEl","connect","state","send","normalize","interactive","context","isInteractive","disabled","isDisabled","hoveredValue","translations","getItemState","props2","value2","isHovering","equal","index","highlighted","half","abs","checked","hovering","count","items","Array","from","map","_","setValue","type","clearValue","getRootProps","element","attrs","dir","getHiddenInputProps","input","name","form","hidden","readOnly","required","defaultValue","getLabelProps","htmlFor","onClick","event","defaultPrevented","preventDefault","radioEl","focus","preventScroll","getControlProps","role","tabIndex","onPointerMove","pointerType","onPointerLeave","getItemProps","itemState","valueText","ratingValueText","toString","onPointerDown","point","relativePoint","currentTarget","percentX","getPercentValue","orientation","isMidway","onKeyDown","keyMap","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","Space","Home","End","key","exec","onFocus","onBlur","machine","userContext","initial","fieldsetDisabled","created","watch","allowHalf","computed","ctx2","activities","on","SET_VALUE","actions","CLEAR_VALUE","states","idle","entry","GROUP_POINTER_OVER","FOCUS","CLICK","POINTER_OVER","GROUP_POINTER_LEAVE","BLUR","SPACE","guard","ARROW_LEFT","ARROW_RIGHT","HOME","END","hover","target","guards","isHoveredValueEmpty","isValueEmpty","isRadioFocused","contains","getActiveElement","trackFormControlState","_evt","_ref","initialContext","onFieldsetDisabledChange","onFormReset","set","clearHoveredValue","focusActiveRadio","setPrevValue","factor","max","setNextValue","min","setValueToMin","setValueToMax","evt","setHoveredValue","roundValueIfNeeded","round","invoke","change","onValueChange","hoverChange","onHoverChange","props","splitProps","itemProps","splitItemProps"],"sources":["/Users/rishil/AIM-MedVisor/node_modules/@ark-ui/react/node_modules/@zag-js/rating-group/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { isLeftClick, getEventPoint, getRelativePoint, getEventKey } from '@zag-js/dom-event';\nimport { createScope, query, dataAttr, ariaAttr, raf } from '@zag-js/dom-query';\nimport { dispatchInputValueEvent, trackFormControl } from '@zag-js/form-utils';\nimport { createMachine } from '@zag-js/core';\nimport { createSplitProps, compact, isEqual } from '@zag-js/utils';\nimport { createProps } from '@zag-js/types';\n\n// src/rating-group.anatomy.ts\nvar anatomy = createAnatomy(\"rating-group\").parts(\"root\", \"label\", \"item\", \"control\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: (ctx) => ctx.ids?.root ?? `rating:${ctx.id}`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `rating:${ctx.id}:label`,\n  getHiddenInputId: (ctx) => ctx.ids?.hiddenInput ?? `rating:${ctx.id}:input`,\n  getControlId: (ctx) => ctx.ids?.control ?? `rating:${ctx.id}:control`,\n  getItemId: (ctx, id) => ctx.ids?.item?.(id) ?? `rating:${ctx.id}:item:${id}`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getControlEl: (ctx) => dom.getById(ctx, dom.getControlId(ctx)),\n  getRadioEl: (ctx, value = ctx.value) => {\n    const selector = `[role=radio][aria-posinset='${Math.ceil(value)}']`;\n    return query(dom.getControlEl(ctx), selector);\n  },\n  getHiddenInputEl: (ctx) => dom.getById(ctx, dom.getHiddenInputId(ctx)),\n  dispatchChangeEvent: (ctx) => {\n    const inputEl = dom.getHiddenInputEl(ctx);\n    if (!inputEl) return;\n    dispatchInputValueEvent(inputEl, { value: ctx.value });\n  }\n});\n\n// src/rating-group.connect.ts\nfunction connect(state, send, normalize) {\n  const interactive = state.context.isInteractive;\n  const disabled = state.context.isDisabled;\n  const value = state.context.value;\n  const hoveredValue = state.context.hoveredValue;\n  const translations = state.context.translations;\n  function getItemState(props2) {\n    const value2 = state.context.isHovering ? state.context.hoveredValue : state.context.value;\n    const equal = Math.ceil(value2) === props2.index;\n    const highlighted = props2.index <= value2 || equal;\n    const half = equal && Math.abs(value2 - props2.index) === 0.5;\n    return {\n      highlighted,\n      half,\n      checked: equal || state.context.value === -1 && props2.index === 1\n    };\n  }\n  return {\n    hovering: state.context.isHovering,\n    value,\n    hoveredValue,\n    count: state.context.count,\n    items: Array.from({ length: state.context.count }).map((_, index) => index + 1),\n    setValue(value2) {\n      send({ type: \"SET_VALUE\", value: value2 });\n    },\n    clearValue() {\n      send(\"CLEAR_VALUE\");\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context)\n      });\n    },\n    getHiddenInputProps() {\n      return normalize.input({\n        name: state.context.name,\n        form: state.context.form,\n        type: \"text\",\n        hidden: true,\n        disabled,\n        readOnly: state.context.readOnly,\n        required: state.context.required,\n        id: dom.getHiddenInputId(state.context),\n        defaultValue: state.context.value\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        id: dom.getLabelId(state.context),\n        \"data-disabled\": dataAttr(disabled),\n        htmlFor: dom.getHiddenInputId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          event.preventDefault();\n          const radioEl = dom.getRadioEl(state.context, 1);\n          radioEl?.focus({ preventScroll: true });\n        }\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        id: dom.getControlId(state.context),\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        role: \"radiogroup\",\n        \"aria-orientation\": \"horizontal\",\n        \"aria-labelledby\": dom.getLabelId(state.context),\n        \"aria-readonly\": ariaAttr(state.context.readOnly),\n        \"data-readonly\": dataAttr(state.context.readOnly),\n        tabIndex: state.context.readOnly ? 0 : -1,\n        \"data-disabled\": dataAttr(disabled),\n        onPointerMove(event) {\n          if (!interactive) return;\n          if (event.pointerType === \"touch\") return;\n          send(\"GROUP_POINTER_OVER\");\n        },\n        onPointerLeave(event) {\n          if (!interactive) return;\n          if (event.pointerType === \"touch\") return;\n          send(\"GROUP_POINTER_LEAVE\");\n        }\n      });\n    },\n    getItemState,\n    getItemProps(props2) {\n      const { index } = props2;\n      const itemState = getItemState(props2);\n      const valueText = translations.ratingValueText(index);\n      return normalize.element({\n        ...parts.item.attrs,\n        dir: state.context.dir,\n        id: dom.getItemId(state.context, index.toString()),\n        role: \"radio\",\n        tabIndex: disabled ? void 0 : itemState.checked ? 0 : -1,\n        \"aria-roledescription\": \"rating\",\n        \"aria-label\": valueText,\n        \"aria-disabled\": disabled,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-readonly\": dataAttr(state.context.readOnly),\n        \"aria-setsize\": state.context.count,\n        \"aria-checked\": itemState.checked,\n        \"data-checked\": dataAttr(itemState.checked),\n        \"aria-posinset\": index,\n        \"data-highlighted\": dataAttr(itemState.highlighted),\n        \"data-half\": dataAttr(itemState.half),\n        onPointerDown(event) {\n          if (!interactive) return;\n          if (!isLeftClick(event)) return;\n          event.preventDefault();\n        },\n        onPointerMove(event) {\n          if (!interactive) return;\n          const point = getEventPoint(event);\n          const relativePoint = getRelativePoint(point, event.currentTarget);\n          const percentX = relativePoint.getPercentValue({\n            orientation: \"horizontal\",\n            dir: state.context.dir\n          });\n          const isMidway = percentX < 0.5;\n          send({ type: \"POINTER_OVER\", index, isMidway });\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (!interactive) return;\n          const keyMap = {\n            ArrowLeft() {\n              send(\"ARROW_LEFT\");\n            },\n            ArrowRight() {\n              send(\"ARROW_RIGHT\");\n            },\n            ArrowUp() {\n              send(\"ARROW_LEFT\");\n            },\n            ArrowDown() {\n              send(\"ARROW_RIGHT\");\n            },\n            Space() {\n              send({ type: \"SPACE\", value: index });\n            },\n            Home() {\n              send(\"HOME\");\n            },\n            End() {\n              send(\"END\");\n            }\n          };\n          const key = getEventKey(event, state.context);\n          const exec = keyMap[key];\n          if (exec) {\n            event.preventDefault();\n            exec(event);\n          }\n        },\n        onClick() {\n          if (!interactive) return;\n          send({ type: \"CLICK\", value: index });\n        },\n        onFocus() {\n          if (!interactive) return;\n          send(\"FOCUS\");\n        },\n        onBlur() {\n          if (!interactive) return;\n          send(\"BLUR\");\n        }\n      });\n    }\n  };\n}\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine(\n    {\n      id: \"rating\",\n      initial: \"idle\",\n      context: {\n        name: \"rating\",\n        count: 5,\n        dir: \"ltr\",\n        value: -1,\n        readOnly: false,\n        disabled: false,\n        ...ctx,\n        hoveredValue: -1,\n        fieldsetDisabled: false,\n        translations: {\n          ratingValueText: (index) => `${index} stars`,\n          ...ctx.translations\n        }\n      },\n      created: [\"roundValueIfNeeded\"],\n      watch: {\n        allowHalf: [\"roundValueIfNeeded\"]\n      },\n      computed: {\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled,\n        isInteractive: (ctx2) => !(ctx2.isDisabled || ctx2.readOnly),\n        isHovering: (ctx2) => ctx2.hoveredValue > -1\n      },\n      activities: [\"trackFormControlState\"],\n      on: {\n        SET_VALUE: {\n          actions: [\"setValue\"]\n        },\n        CLEAR_VALUE: {\n          actions: [\"clearValue\"]\n        }\n      },\n      states: {\n        idle: {\n          entry: \"clearHoveredValue\",\n          on: {\n            GROUP_POINTER_OVER: \"hover\",\n            FOCUS: \"focus\",\n            CLICK: {\n              actions: [\"setValue\", \"focusActiveRadio\"]\n            }\n          }\n        },\n        focus: {\n          on: {\n            POINTER_OVER: {\n              actions: \"setHoveredValue\"\n            },\n            GROUP_POINTER_LEAVE: {\n              actions: \"clearHoveredValue\"\n            },\n            BLUR: \"idle\",\n            SPACE: {\n              guard: \"isValueEmpty\",\n              actions: [\"setValue\"]\n            },\n            CLICK: {\n              actions: [\"setValue\", \"focusActiveRadio\"]\n            },\n            ARROW_LEFT: {\n              actions: [\"setPrevValue\", \"focusActiveRadio\"]\n            },\n            ARROW_RIGHT: {\n              actions: [\"setNextValue\", \"focusActiveRadio\"]\n            },\n            HOME: {\n              actions: [\"setValueToMin\", \"focusActiveRadio\"]\n            },\n            END: {\n              actions: [\"setValueToMax\", \"focusActiveRadio\"]\n            }\n          }\n        },\n        hover: {\n          on: {\n            POINTER_OVER: {\n              actions: \"setHoveredValue\"\n            },\n            GROUP_POINTER_LEAVE: [\n              {\n                guard: \"isRadioFocused\",\n                target: \"focus\",\n                actions: \"clearHoveredValue\"\n              },\n              {\n                target: \"idle\",\n                actions: \"clearHoveredValue\"\n              }\n            ],\n            CLICK: {\n              actions: [\"setValue\", \"focusActiveRadio\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        isInteractive: (ctx2) => !(ctx2.disabled || ctx2.readOnly),\n        isHoveredValueEmpty: (ctx2) => ctx2.hoveredValue === -1,\n        isValueEmpty: (ctx2) => ctx2.value <= 0,\n        isRadioFocused: (ctx2) => !!dom.getControlEl(ctx2)?.contains(dom.getActiveElement(ctx2))\n      },\n      activities: {\n        trackFormControlState(ctx2, _evt, { initialContext }) {\n          return trackFormControl(dom.getHiddenInputEl(ctx2), {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              set.value(ctx2, initialContext.value);\n            }\n          });\n        }\n      },\n      actions: {\n        clearHoveredValue(ctx2) {\n          set.hoveredValue(ctx2, -1);\n        },\n        focusActiveRadio(ctx2) {\n          raf(() => dom.getRadioEl(ctx2)?.focus());\n        },\n        setPrevValue(ctx2) {\n          const factor = ctx2.allowHalf ? 0.5 : 1;\n          set.value(ctx2, Math.max(0, ctx2.value - factor));\n        },\n        setNextValue(ctx2) {\n          const factor = ctx2.allowHalf ? 0.5 : 1;\n          const value = ctx2.value === -1 ? 0 : ctx2.value;\n          set.value(ctx2, Math.min(ctx2.count, value + factor));\n        },\n        setValueToMin(ctx2) {\n          set.value(ctx2, 1);\n        },\n        setValueToMax(ctx2) {\n          set.value(ctx2, ctx2.count);\n        },\n        setValue(ctx2, evt) {\n          const value = ctx2.hoveredValue === -1 ? evt.value : ctx2.hoveredValue;\n          set.value(ctx2, value);\n        },\n        clearValue(ctx2) {\n          set.value(ctx2, -1);\n        },\n        setHoveredValue(ctx2, evt) {\n          const half = ctx2.allowHalf && evt.isMidway;\n          const factor = half ? 0.5 : 0;\n          set.hoveredValue(ctx2, evt.index - factor);\n        },\n        roundValueIfNeeded(ctx2) {\n          if (ctx2.allowHalf) return;\n          ctx2.value = Math.round(ctx2.value);\n        }\n      }\n    }\n  );\n}\nvar invoke = {\n  change: (ctx) => {\n    ctx.onValueChange?.({ value: ctx.value });\n    dom.dispatchChangeEvent(ctx);\n  },\n  hoverChange: (ctx) => {\n    ctx.onHoverChange?.({ hoveredValue: ctx.hoveredValue });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if (isEqual(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.change(ctx);\n  },\n  hoveredValue: (ctx, value) => {\n    if (isEqual(ctx.hoveredValue, value)) return;\n    ctx.hoveredValue = value;\n    invoke.hoverChange(ctx);\n  }\n};\nvar props = createProps()([\n  \"allowHalf\",\n  \"autoFocus\",\n  \"count\",\n  \"dir\",\n  \"disabled\",\n  \"form\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"name\",\n  \"onHoverChange\",\n  \"onValueChange\",\n  \"required\",\n  \"readOnly\",\n  \"translations\",\n  \"value\"\n]);\nvar splitProps = createSplitProps(props);\nvar itemProps = createProps()([\"index\"]);\nvar splitItemProps = createSplitProps(itemProps);\n\nexport { anatomy, connect, itemProps, machine, props, splitItemProps, splitProps };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,WAAW,EAAEC,aAAa,EAAEC,gBAAgB,EAAEC,WAAW,QAAQ,mBAAmB;AAC7F,SAASC,WAAW,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,GAAG,QAAQ,mBAAmB;AAC/E,SAASC,uBAAuB,EAAEC,gBAAgB,QAAQ,oBAAoB;AAC9E,SAASC,aAAa,QAAQ,cAAc;AAC5C,SAASC,gBAAgB,EAAEC,OAAO,EAAEC,OAAO,QAAQ,eAAe;AAClE,SAASC,WAAW,QAAQ,eAAe;;AAE3C;AACA,IAAIC,OAAO,GAAGjB,aAAa,CAAC,cAAc,CAAC,CAACkB,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,SAAS,CAAC;AACrF,IAAIA,KAAK,GAAGD,OAAO,CAACE,KAAK,CAAC,CAAC;AAC3B,IAAIC,GAAG,GAAGf,WAAW,CAAC;EACpBgB,SAAS,EAAGC,GAAG,IAAKA,GAAG,CAACC,GAAG,EAAEC,IAAI,IAAI,UAAUF,GAAG,CAACG,EAAE,EAAE;EACvDC,UAAU,EAAGJ,GAAG,IAAKA,GAAG,CAACC,GAAG,EAAEI,KAAK,IAAI,UAAUL,GAAG,CAACG,EAAE,QAAQ;EAC/DG,gBAAgB,EAAGN,GAAG,IAAKA,GAAG,CAACC,GAAG,EAAEM,WAAW,IAAI,UAAUP,GAAG,CAACG,EAAE,QAAQ;EAC3EK,YAAY,EAAGR,GAAG,IAAKA,GAAG,CAACC,GAAG,EAAEQ,OAAO,IAAI,UAAUT,GAAG,CAACG,EAAE,UAAU;EACrEO,SAAS,EAAEA,CAACV,GAAG,EAAEG,EAAE,KAAKH,GAAG,CAACC,GAAG,EAAEU,IAAI,GAAGR,EAAE,CAAC,IAAI,UAAUH,GAAG,CAACG,EAAE,SAASA,EAAE,EAAE;EAC5ES,SAAS,EAAGZ,GAAG,IAAKF,GAAG,CAACe,OAAO,CAACb,GAAG,EAAEF,GAAG,CAACC,SAAS,CAACC,GAAG,CAAC,CAAC;EACxDc,YAAY,EAAGd,GAAG,IAAKF,GAAG,CAACe,OAAO,CAACb,GAAG,EAAEF,GAAG,CAACU,YAAY,CAACR,GAAG,CAAC,CAAC;EAC9De,UAAU,EAAE,SAAAA,CAACf,GAAG,EAAwB;IAAA,IAAtBgB,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGjB,GAAG,CAACgB,KAAK;IACjC,MAAMI,QAAQ,GAAG,+BAA+BC,IAAI,CAACC,IAAI,CAACN,KAAK,CAAC,IAAI;IACpE,OAAOhC,KAAK,CAACc,GAAG,CAACgB,YAAY,CAACd,GAAG,CAAC,EAAEoB,QAAQ,CAAC;EAC/C,CAAC;EACDG,gBAAgB,EAAGvB,GAAG,IAAKF,GAAG,CAACe,OAAO,CAACb,GAAG,EAAEF,GAAG,CAACQ,gBAAgB,CAACN,GAAG,CAAC,CAAC;EACtEwB,mBAAmB,EAAGxB,GAAG,IAAK;IAC5B,MAAMyB,OAAO,GAAG3B,GAAG,CAACyB,gBAAgB,CAACvB,GAAG,CAAC;IACzC,IAAI,CAACyB,OAAO,EAAE;IACdrC,uBAAuB,CAACqC,OAAO,EAAE;MAAET,KAAK,EAAEhB,GAAG,CAACgB;IAAM,CAAC,CAAC;EACxD;AACF,CAAC,CAAC;;AAEF;AACA,SAASU,OAAOA,CAACC,KAAK,EAAEC,IAAI,EAAEC,SAAS,EAAE;EACvC,MAAMC,WAAW,GAAGH,KAAK,CAACI,OAAO,CAACC,aAAa;EAC/C,MAAMC,QAAQ,GAAGN,KAAK,CAACI,OAAO,CAACG,UAAU;EACzC,MAAMlB,KAAK,GAAGW,KAAK,CAACI,OAAO,CAACf,KAAK;EACjC,MAAMmB,YAAY,GAAGR,KAAK,CAACI,OAAO,CAACI,YAAY;EAC/C,MAAMC,YAAY,GAAGT,KAAK,CAACI,OAAO,CAACK,YAAY;EAC/C,SAASC,YAAYA,CAACC,MAAM,EAAE;IAC5B,MAAMC,MAAM,GAAGZ,KAAK,CAACI,OAAO,CAACS,UAAU,GAAGb,KAAK,CAACI,OAAO,CAACI,YAAY,GAAGR,KAAK,CAACI,OAAO,CAACf,KAAK;IAC1F,MAAMyB,KAAK,GAAGpB,IAAI,CAACC,IAAI,CAACiB,MAAM,CAAC,KAAKD,MAAM,CAACI,KAAK;IAChD,MAAMC,WAAW,GAAGL,MAAM,CAACI,KAAK,IAAIH,MAAM,IAAIE,KAAK;IACnD,MAAMG,IAAI,GAAGH,KAAK,IAAIpB,IAAI,CAACwB,GAAG,CAACN,MAAM,GAAGD,MAAM,CAACI,KAAK,CAAC,KAAK,GAAG;IAC7D,OAAO;MACLC,WAAW;MACXC,IAAI;MACJE,OAAO,EAAEL,KAAK,IAAId,KAAK,CAACI,OAAO,CAACf,KAAK,KAAK,CAAC,CAAC,IAAIsB,MAAM,CAACI,KAAK,KAAK;IACnE,CAAC;EACH;EACA,OAAO;IACLK,QAAQ,EAAEpB,KAAK,CAACI,OAAO,CAACS,UAAU;IAClCxB,KAAK;IACLmB,YAAY;IACZa,KAAK,EAAErB,KAAK,CAACI,OAAO,CAACiB,KAAK;IAC1BC,KAAK,EAAEC,KAAK,CAACC,IAAI,CAAC;MAAEjC,MAAM,EAAES,KAAK,CAACI,OAAO,CAACiB;IAAM,CAAC,CAAC,CAACI,GAAG,CAAC,CAACC,CAAC,EAAEX,KAAK,KAAKA,KAAK,GAAG,CAAC,CAAC;IAC/EY,QAAQA,CAACf,MAAM,EAAE;MACfX,IAAI,CAAC;QAAE2B,IAAI,EAAE,WAAW;QAAEvC,KAAK,EAAEuB;MAAO,CAAC,CAAC;IAC5C,CAAC;IACDiB,UAAUA,CAAA,EAAG;MACX5B,IAAI,CAAC,aAAa,CAAC;IACrB,CAAC;IACD6B,YAAYA,CAAA,EAAG;MACb,OAAO5B,SAAS,CAAC6B,OAAO,CAAC;QACvB,GAAG9D,KAAK,CAACM,IAAI,CAACyD,KAAK;QACnBC,GAAG,EAAEjC,KAAK,CAACI,OAAO,CAAC6B,GAAG;QACtBzD,EAAE,EAAEL,GAAG,CAACC,SAAS,CAAC4B,KAAK,CAACI,OAAO;MACjC,CAAC,CAAC;IACJ,CAAC;IACD8B,mBAAmBA,CAAA,EAAG;MACpB,OAAOhC,SAAS,CAACiC,KAAK,CAAC;QACrBC,IAAI,EAAEpC,KAAK,CAACI,OAAO,CAACgC,IAAI;QACxBC,IAAI,EAAErC,KAAK,CAACI,OAAO,CAACiC,IAAI;QACxBT,IAAI,EAAE,MAAM;QACZU,MAAM,EAAE,IAAI;QACZhC,QAAQ;QACRiC,QAAQ,EAAEvC,KAAK,CAACI,OAAO,CAACmC,QAAQ;QAChCC,QAAQ,EAAExC,KAAK,CAACI,OAAO,CAACoC,QAAQ;QAChChE,EAAE,EAAEL,GAAG,CAACQ,gBAAgB,CAACqB,KAAK,CAACI,OAAO,CAAC;QACvCqC,YAAY,EAAEzC,KAAK,CAACI,OAAO,CAACf;MAC9B,CAAC,CAAC;IACJ,CAAC;IACDqD,aAAaA,CAAA,EAAG;MACd,OAAOxC,SAAS,CAACxB,KAAK,CAAC;QACrB,GAAGT,KAAK,CAACS,KAAK,CAACsD,KAAK;QACpBC,GAAG,EAAEjC,KAAK,CAACI,OAAO,CAAC6B,GAAG;QACtBzD,EAAE,EAAEL,GAAG,CAACM,UAAU,CAACuB,KAAK,CAACI,OAAO,CAAC;QACjC,eAAe,EAAE9C,QAAQ,CAACgD,QAAQ,CAAC;QACnCqC,OAAO,EAAExE,GAAG,CAACQ,gBAAgB,CAACqB,KAAK,CAACI,OAAO,CAAC;QAC5CwC,OAAOA,CAACC,KAAK,EAAE;UACb,IAAIA,KAAK,CAACC,gBAAgB,EAAE;UAC5B,IAAI,CAAC3C,WAAW,EAAE;UAClB0C,KAAK,CAACE,cAAc,CAAC,CAAC;UACtB,MAAMC,OAAO,GAAG7E,GAAG,CAACiB,UAAU,CAACY,KAAK,CAACI,OAAO,EAAE,CAAC,CAAC;UAChD4C,OAAO,EAAEC,KAAK,CAAC;YAAEC,aAAa,EAAE;UAAK,CAAC,CAAC;QACzC;MACF,CAAC,CAAC;IACJ,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,OAAOjD,SAAS,CAAC6B,OAAO,CAAC;QACvBvD,EAAE,EAAEL,GAAG,CAACU,YAAY,CAACmB,KAAK,CAACI,OAAO,CAAC;QACnC,GAAGnC,KAAK,CAACa,OAAO,CAACkD,KAAK;QACtBC,GAAG,EAAEjC,KAAK,CAACI,OAAO,CAAC6B,GAAG;QACtBmB,IAAI,EAAE,YAAY;QAClB,kBAAkB,EAAE,YAAY;QAChC,iBAAiB,EAAEjF,GAAG,CAACM,UAAU,CAACuB,KAAK,CAACI,OAAO,CAAC;QAChD,eAAe,EAAE7C,QAAQ,CAACyC,KAAK,CAACI,OAAO,CAACmC,QAAQ,CAAC;QACjD,eAAe,EAAEjF,QAAQ,CAAC0C,KAAK,CAACI,OAAO,CAACmC,QAAQ,CAAC;QACjDc,QAAQ,EAAErD,KAAK,CAACI,OAAO,CAACmC,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;QACzC,eAAe,EAAEjF,QAAQ,CAACgD,QAAQ,CAAC;QACnCgD,aAAaA,CAACT,KAAK,EAAE;UACnB,IAAI,CAAC1C,WAAW,EAAE;UAClB,IAAI0C,KAAK,CAACU,WAAW,KAAK,OAAO,EAAE;UACnCtD,IAAI,CAAC,oBAAoB,CAAC;QAC5B,CAAC;QACDuD,cAAcA,CAACX,KAAK,EAAE;UACpB,IAAI,CAAC1C,WAAW,EAAE;UAClB,IAAI0C,KAAK,CAACU,WAAW,KAAK,OAAO,EAAE;UACnCtD,IAAI,CAAC,qBAAqB,CAAC;QAC7B;MACF,CAAC,CAAC;IACJ,CAAC;IACDS,YAAY;IACZ+C,YAAYA,CAAC9C,MAAM,EAAE;MACnB,MAAM;QAAEI;MAAM,CAAC,GAAGJ,MAAM;MACxB,MAAM+C,SAAS,GAAGhD,YAAY,CAACC,MAAM,CAAC;MACtC,MAAMgD,SAAS,GAAGlD,YAAY,CAACmD,eAAe,CAAC7C,KAAK,CAAC;MACrD,OAAOb,SAAS,CAAC6B,OAAO,CAAC;QACvB,GAAG9D,KAAK,CAACe,IAAI,CAACgD,KAAK;QACnBC,GAAG,EAAEjC,KAAK,CAACI,OAAO,CAAC6B,GAAG;QACtBzD,EAAE,EAAEL,GAAG,CAACY,SAAS,CAACiB,KAAK,CAACI,OAAO,EAAEW,KAAK,CAAC8C,QAAQ,CAAC,CAAC,CAAC;QAClDT,IAAI,EAAE,OAAO;QACbC,QAAQ,EAAE/C,QAAQ,GAAG,KAAK,CAAC,GAAGoD,SAAS,CAACvC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;QACxD,sBAAsB,EAAE,QAAQ;QAChC,YAAY,EAAEwC,SAAS;QACvB,eAAe,EAAErD,QAAQ;QACzB,eAAe,EAAEhD,QAAQ,CAACgD,QAAQ,CAAC;QACnC,eAAe,EAAEhD,QAAQ,CAAC0C,KAAK,CAACI,OAAO,CAACmC,QAAQ,CAAC;QACjD,cAAc,EAAEvC,KAAK,CAACI,OAAO,CAACiB,KAAK;QACnC,cAAc,EAAEqC,SAAS,CAACvC,OAAO;QACjC,cAAc,EAAE7D,QAAQ,CAACoG,SAAS,CAACvC,OAAO,CAAC;QAC3C,eAAe,EAAEJ,KAAK;QACtB,kBAAkB,EAAEzD,QAAQ,CAACoG,SAAS,CAAC1C,WAAW,CAAC;QACnD,WAAW,EAAE1D,QAAQ,CAACoG,SAAS,CAACzC,IAAI,CAAC;QACrC6C,aAAaA,CAACjB,KAAK,EAAE;UACnB,IAAI,CAAC1C,WAAW,EAAE;UAClB,IAAI,CAACnD,WAAW,CAAC6F,KAAK,CAAC,EAAE;UACzBA,KAAK,CAACE,cAAc,CAAC,CAAC;QACxB,CAAC;QACDO,aAAaA,CAACT,KAAK,EAAE;UACnB,IAAI,CAAC1C,WAAW,EAAE;UAClB,MAAM4D,KAAK,GAAG9G,aAAa,CAAC4F,KAAK,CAAC;UAClC,MAAMmB,aAAa,GAAG9G,gBAAgB,CAAC6G,KAAK,EAAElB,KAAK,CAACoB,aAAa,CAAC;UAClE,MAAMC,QAAQ,GAAGF,aAAa,CAACG,eAAe,CAAC;YAC7CC,WAAW,EAAE,YAAY;YACzBnC,GAAG,EAAEjC,KAAK,CAACI,OAAO,CAAC6B;UACrB,CAAC,CAAC;UACF,MAAMoC,QAAQ,GAAGH,QAAQ,GAAG,GAAG;UAC/BjE,IAAI,CAAC;YAAE2B,IAAI,EAAE,cAAc;YAAEb,KAAK;YAAEsD;UAAS,CAAC,CAAC;QACjD,CAAC;QACDC,SAASA,CAACzB,KAAK,EAAE;UACf,IAAIA,KAAK,CAACC,gBAAgB,EAAE;UAC5B,IAAI,CAAC3C,WAAW,EAAE;UAClB,MAAMoE,MAAM,GAAG;YACbC,SAASA,CAAA,EAAG;cACVvE,IAAI,CAAC,YAAY,CAAC;YACpB,CAAC;YACDwE,UAAUA,CAAA,EAAG;cACXxE,IAAI,CAAC,aAAa,CAAC;YACrB,CAAC;YACDyE,OAAOA,CAAA,EAAG;cACRzE,IAAI,CAAC,YAAY,CAAC;YACpB,CAAC;YACD0E,SAASA,CAAA,EAAG;cACV1E,IAAI,CAAC,aAAa,CAAC;YACrB,CAAC;YACD2E,KAAKA,CAAA,EAAG;cACN3E,IAAI,CAAC;gBAAE2B,IAAI,EAAE,OAAO;gBAAEvC,KAAK,EAAE0B;cAAM,CAAC,CAAC;YACvC,CAAC;YACD8D,IAAIA,CAAA,EAAG;cACL5E,IAAI,CAAC,MAAM,CAAC;YACd,CAAC;YACD6E,GAAGA,CAAA,EAAG;cACJ7E,IAAI,CAAC,KAAK,CAAC;YACb;UACF,CAAC;UACD,MAAM8E,GAAG,GAAG5H,WAAW,CAAC0F,KAAK,EAAE7C,KAAK,CAACI,OAAO,CAAC;UAC7C,MAAM4E,IAAI,GAAGT,MAAM,CAACQ,GAAG,CAAC;UACxB,IAAIC,IAAI,EAAE;YACRnC,KAAK,CAACE,cAAc,CAAC,CAAC;YACtBiC,IAAI,CAACnC,KAAK,CAAC;UACb;QACF,CAAC;QACDD,OAAOA,CAAA,EAAG;UACR,IAAI,CAACzC,WAAW,EAAE;UAClBF,IAAI,CAAC;YAAE2B,IAAI,EAAE,OAAO;YAAEvC,KAAK,EAAE0B;UAAM,CAAC,CAAC;QACvC,CAAC;QACDkE,OAAOA,CAAA,EAAG;UACR,IAAI,CAAC9E,WAAW,EAAE;UAClBF,IAAI,CAAC,OAAO,CAAC;QACf,CAAC;QACDiF,MAAMA,CAAA,EAAG;UACP,IAAI,CAAC/E,WAAW,EAAE;UAClBF,IAAI,CAAC,MAAM,CAAC;QACd;MACF,CAAC,CAAC;IACJ;EACF,CAAC;AACH;AACA,SAASkF,OAAOA,CAACC,WAAW,EAAE;EAC5B,MAAM/G,GAAG,GAAGR,OAAO,CAACuH,WAAW,CAAC;EAChC,OAAOzH,aAAa,CAClB;IACEa,EAAE,EAAE,QAAQ;IACZ6G,OAAO,EAAE,MAAM;IACfjF,OAAO,EAAE;MACPgC,IAAI,EAAE,QAAQ;MACdf,KAAK,EAAE,CAAC;MACRY,GAAG,EAAE,KAAK;MACV5C,KAAK,EAAE,CAAC,CAAC;MACTkD,QAAQ,EAAE,KAAK;MACfjC,QAAQ,EAAE,KAAK;MACf,GAAGjC,GAAG;MACNmC,YAAY,EAAE,CAAC,CAAC;MAChB8E,gBAAgB,EAAE,KAAK;MACvB7E,YAAY,EAAE;QACZmD,eAAe,EAAG7C,KAAK,IAAK,GAAGA,KAAK,QAAQ;QAC5C,GAAG1C,GAAG,CAACoC;MACT;IACF,CAAC;IACD8E,OAAO,EAAE,CAAC,oBAAoB,CAAC;IAC/BC,KAAK,EAAE;MACLC,SAAS,EAAE,CAAC,oBAAoB;IAClC,CAAC;IACDC,QAAQ,EAAE;MACRnF,UAAU,EAAGoF,IAAI,IAAK,CAAC,CAACA,IAAI,CAACrF,QAAQ,IAAIqF,IAAI,CAACL,gBAAgB;MAC9DjF,aAAa,EAAGsF,IAAI,IAAK,EAAEA,IAAI,CAACpF,UAAU,IAAIoF,IAAI,CAACpD,QAAQ,CAAC;MAC5D1B,UAAU,EAAG8E,IAAI,IAAKA,IAAI,CAACnF,YAAY,GAAG,CAAC;IAC7C,CAAC;IACDoF,UAAU,EAAE,CAAC,uBAAuB,CAAC;IACrCC,EAAE,EAAE;MACFC,SAAS,EAAE;QACTC,OAAO,EAAE,CAAC,UAAU;MACtB,CAAC;MACDC,WAAW,EAAE;QACXD,OAAO,EAAE,CAAC,YAAY;MACxB;IACF,CAAC;IACDE,MAAM,EAAE;MACNC,IAAI,EAAE;QACJC,KAAK,EAAE,mBAAmB;QAC1BN,EAAE,EAAE;UACFO,kBAAkB,EAAE,OAAO;UAC3BC,KAAK,EAAE,OAAO;UACdC,KAAK,EAAE;YACLP,OAAO,EAAE,CAAC,UAAU,EAAE,kBAAkB;UAC1C;QACF;MACF,CAAC;MACD9C,KAAK,EAAE;QACL4C,EAAE,EAAE;UACFU,YAAY,EAAE;YACZR,OAAO,EAAE;UACX,CAAC;UACDS,mBAAmB,EAAE;YACnBT,OAAO,EAAE;UACX,CAAC;UACDU,IAAI,EAAE,MAAM;UACZC,KAAK,EAAE;YACLC,KAAK,EAAE,cAAc;YACrBZ,OAAO,EAAE,CAAC,UAAU;UACtB,CAAC;UACDO,KAAK,EAAE;YACLP,OAAO,EAAE,CAAC,UAAU,EAAE,kBAAkB;UAC1C,CAAC;UACDa,UAAU,EAAE;YACVb,OAAO,EAAE,CAAC,cAAc,EAAE,kBAAkB;UAC9C,CAAC;UACDc,WAAW,EAAE;YACXd,OAAO,EAAE,CAAC,cAAc,EAAE,kBAAkB;UAC9C,CAAC;UACDe,IAAI,EAAE;YACJf,OAAO,EAAE,CAAC,eAAe,EAAE,kBAAkB;UAC/C,CAAC;UACDgB,GAAG,EAAE;YACHhB,OAAO,EAAE,CAAC,eAAe,EAAE,kBAAkB;UAC/C;QACF;MACF,CAAC;MACDiB,KAAK,EAAE;QACLnB,EAAE,EAAE;UACFU,YAAY,EAAE;YACZR,OAAO,EAAE;UACX,CAAC;UACDS,mBAAmB,EAAE,CACnB;YACEG,KAAK,EAAE,gBAAgB;YACvBM,MAAM,EAAE,OAAO;YACflB,OAAO,EAAE;UACX,CAAC,EACD;YACEkB,MAAM,EAAE,MAAM;YACdlB,OAAO,EAAE;UACX,CAAC,CACF;UACDO,KAAK,EAAE;YACLP,OAAO,EAAE,CAAC,UAAU,EAAE,kBAAkB;UAC1C;QACF;MACF;IACF;EACF,CAAC,EACD;IACEmB,MAAM,EAAE;MACN7G,aAAa,EAAGsF,IAAI,IAAK,EAAEA,IAAI,CAACrF,QAAQ,IAAIqF,IAAI,CAACpD,QAAQ,CAAC;MAC1D4E,mBAAmB,EAAGxB,IAAI,IAAKA,IAAI,CAACnF,YAAY,KAAK,CAAC,CAAC;MACvD4G,YAAY,EAAGzB,IAAI,IAAKA,IAAI,CAACtG,KAAK,IAAI,CAAC;MACvCgI,cAAc,EAAG1B,IAAI,IAAK,CAAC,CAACxH,GAAG,CAACgB,YAAY,CAACwG,IAAI,CAAC,EAAE2B,QAAQ,CAACnJ,GAAG,CAACoJ,gBAAgB,CAAC5B,IAAI,CAAC;IACzF,CAAC;IACDC,UAAU,EAAE;MACV4B,qBAAqBA,CAAC7B,IAAI,EAAE8B,IAAI,EAAAC,IAAA,EAAsB;QAAA,IAApB;UAAEC;QAAe,CAAC,GAAAD,IAAA;QAClD,OAAOhK,gBAAgB,CAACS,GAAG,CAACyB,gBAAgB,CAAC+F,IAAI,CAAC,EAAE;UAClDiC,wBAAwBA,CAACtH,QAAQ,EAAE;YACjCqF,IAAI,CAACL,gBAAgB,GAAGhF,QAAQ;UAClC,CAAC;UACDuH,WAAWA,CAAA,EAAG;YACZC,GAAG,CAACzI,KAAK,CAACsG,IAAI,EAAEgC,cAAc,CAACtI,KAAK,CAAC;UACvC;QACF,CAAC,CAAC;MACJ;IACF,CAAC;IACD0G,OAAO,EAAE;MACPgC,iBAAiBA,CAACpC,IAAI,EAAE;QACtBmC,GAAG,CAACtH,YAAY,CAACmF,IAAI,EAAE,CAAC,CAAC,CAAC;MAC5B,CAAC;MACDqC,gBAAgBA,CAACrC,IAAI,EAAE;QACrBnI,GAAG,CAAC,MAAMW,GAAG,CAACiB,UAAU,CAACuG,IAAI,CAAC,EAAE1C,KAAK,CAAC,CAAC,CAAC;MAC1C,CAAC;MACDgF,YAAYA,CAACtC,IAAI,EAAE;QACjB,MAAMuC,MAAM,GAAGvC,IAAI,CAACF,SAAS,GAAG,GAAG,GAAG,CAAC;QACvCqC,GAAG,CAACzI,KAAK,CAACsG,IAAI,EAAEjG,IAAI,CAACyI,GAAG,CAAC,CAAC,EAAExC,IAAI,CAACtG,KAAK,GAAG6I,MAAM,CAAC,CAAC;MACnD,CAAC;MACDE,YAAYA,CAACzC,IAAI,EAAE;QACjB,MAAMuC,MAAM,GAAGvC,IAAI,CAACF,SAAS,GAAG,GAAG,GAAG,CAAC;QACvC,MAAMpG,KAAK,GAAGsG,IAAI,CAACtG,KAAK,KAAK,CAAC,CAAC,GAAG,CAAC,GAAGsG,IAAI,CAACtG,KAAK;QAChDyI,GAAG,CAACzI,KAAK,CAACsG,IAAI,EAAEjG,IAAI,CAAC2I,GAAG,CAAC1C,IAAI,CAACtE,KAAK,EAAEhC,KAAK,GAAG6I,MAAM,CAAC,CAAC;MACvD,CAAC;MACDI,aAAaA,CAAC3C,IAAI,EAAE;QAClBmC,GAAG,CAACzI,KAAK,CAACsG,IAAI,EAAE,CAAC,CAAC;MACpB,CAAC;MACD4C,aAAaA,CAAC5C,IAAI,EAAE;QAClBmC,GAAG,CAACzI,KAAK,CAACsG,IAAI,EAAEA,IAAI,CAACtE,KAAK,CAAC;MAC7B,CAAC;MACDM,QAAQA,CAACgE,IAAI,EAAE6C,GAAG,EAAE;QAClB,MAAMnJ,KAAK,GAAGsG,IAAI,CAACnF,YAAY,KAAK,CAAC,CAAC,GAAGgI,GAAG,CAACnJ,KAAK,GAAGsG,IAAI,CAACnF,YAAY;QACtEsH,GAAG,CAACzI,KAAK,CAACsG,IAAI,EAAEtG,KAAK,CAAC;MACxB,CAAC;MACDwC,UAAUA,CAAC8D,IAAI,EAAE;QACfmC,GAAG,CAACzI,KAAK,CAACsG,IAAI,EAAE,CAAC,CAAC,CAAC;MACrB,CAAC;MACD8C,eAAeA,CAAC9C,IAAI,EAAE6C,GAAG,EAAE;QACzB,MAAMvH,IAAI,GAAG0E,IAAI,CAACF,SAAS,IAAI+C,GAAG,CAACnE,QAAQ;QAC3C,MAAM6D,MAAM,GAAGjH,IAAI,GAAG,GAAG,GAAG,CAAC;QAC7B6G,GAAG,CAACtH,YAAY,CAACmF,IAAI,EAAE6C,GAAG,CAACzH,KAAK,GAAGmH,MAAM,CAAC;MAC5C,CAAC;MACDQ,kBAAkBA,CAAC/C,IAAI,EAAE;QACvB,IAAIA,IAAI,CAACF,SAAS,EAAE;QACpBE,IAAI,CAACtG,KAAK,GAAGK,IAAI,CAACiJ,KAAK,CAAChD,IAAI,CAACtG,KAAK,CAAC;MACrC;IACF;EACF,CACF,CAAC;AACH;AACA,IAAIuJ,MAAM,GAAG;EACXC,MAAM,EAAGxK,GAAG,IAAK;IACfA,GAAG,CAACyK,aAAa,GAAG;MAAEzJ,KAAK,EAAEhB,GAAG,CAACgB;IAAM,CAAC,CAAC;IACzClB,GAAG,CAAC0B,mBAAmB,CAACxB,GAAG,CAAC;EAC9B,CAAC;EACD0K,WAAW,EAAG1K,GAAG,IAAK;IACpBA,GAAG,CAAC2K,aAAa,GAAG;MAAExI,YAAY,EAAEnC,GAAG,CAACmC;IAAa,CAAC,CAAC;EACzD;AACF,CAAC;AACD,IAAIsH,GAAG,GAAG;EACRzI,KAAK,EAAEA,CAAChB,GAAG,EAAEgB,KAAK,KAAK;IACrB,IAAIvB,OAAO,CAACO,GAAG,CAACgB,KAAK,EAAEA,KAAK,CAAC,EAAE;IAC/BhB,GAAG,CAACgB,KAAK,GAAGA,KAAK;IACjBuJ,MAAM,CAACC,MAAM,CAACxK,GAAG,CAAC;EACpB,CAAC;EACDmC,YAAY,EAAEA,CAACnC,GAAG,EAAEgB,KAAK,KAAK;IAC5B,IAAIvB,OAAO,CAACO,GAAG,CAACmC,YAAY,EAAEnB,KAAK,CAAC,EAAE;IACtChB,GAAG,CAACmC,YAAY,GAAGnB,KAAK;IACxBuJ,MAAM,CAACG,WAAW,CAAC1K,GAAG,CAAC;EACzB;AACF,CAAC;AACD,IAAI4K,KAAK,GAAGlL,WAAW,CAAC,CAAC,CAAC,CACxB,WAAW,EACX,WAAW,EACX,OAAO,EACP,KAAK,EACL,UAAU,EACV,MAAM,EACN,aAAa,EACb,IAAI,EACJ,KAAK,EACL,MAAM,EACN,eAAe,EACf,eAAe,EACf,UAAU,EACV,UAAU,EACV,cAAc,EACd,OAAO,CACR,CAAC;AACF,IAAImL,UAAU,GAAGtL,gBAAgB,CAACqL,KAAK,CAAC;AACxC,IAAIE,SAAS,GAAGpL,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;AACxC,IAAIqL,cAAc,GAAGxL,gBAAgB,CAACuL,SAAS,CAAC;AAEhD,SAASnL,OAAO,EAAE+B,OAAO,EAAEoJ,SAAS,EAAEhE,OAAO,EAAE8D,KAAK,EAAEG,cAAc,EAAEF,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}