{"ast":null,"code":"'use client';\n\nimport * as progress from '@zag-js/progress';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nconst useProgress = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const {\n    dir\n  } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    getRootNode,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    value: props.value\n  };\n  const [state, send] = useMachine(progress.machine(initialContext), {\n    context\n  });\n  return progress.connect(state, send, normalizeProps);\n};\nexport { useProgress };","map":{"version":3,"names":["progress","useMachine","normalizeProps","useId","useEnvironmentContext","useLocaleContext","useProgress","props","arguments","length","undefined","getRootNode","dir","initialContext","id","context","value","state","send","machine","connect"],"sources":["/Users/rishil/AIM-MedVisor/node_modules/@ark-ui/react/dist/components/progress/use-progress.js"],"sourcesContent":["'use client';\nimport * as progress from '@zag-js/progress';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\n\nconst useProgress = (props = {}) => {\n  const { getRootNode } = useEnvironmentContext();\n  const { dir } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    getRootNode,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    value: props.value\n  };\n  const [state, send] = useMachine(progress.machine(initialContext), { context });\n  return progress.connect(state, send, normalizeProps);\n};\n\nexport { useProgress };\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,QAAQ,MAAM,kBAAkB;AAC5C,SAASC,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAE/E,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAgB;EAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC7B,MAAM;IAAEG;EAAY,CAAC,GAAGP,qBAAqB,CAAC,CAAC;EAC/C,MAAM;IAAEQ;EAAI,CAAC,GAAGP,gBAAgB,CAAC,CAAC;EAClC,MAAMQ,cAAc,GAAG;IACrBC,EAAE,EAAEX,KAAK,CAAC,CAAC;IACXS,GAAG;IACHD,WAAW;IACX,GAAGJ;EACL,CAAC;EACD,MAAMQ,OAAO,GAAG;IACd,GAAGF,cAAc;IACjBG,KAAK,EAAET,KAAK,CAACS;EACf,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGjB,UAAU,CAACD,QAAQ,CAACmB,OAAO,CAACN,cAAc,CAAC,EAAE;IAAEE;EAAQ,CAAC,CAAC;EAC/E,OAAOf,QAAQ,CAACoB,OAAO,CAACH,KAAK,EAAEC,IAAI,EAAEhB,cAAc,CAAC;AACtD,CAAC;AAED,SAASI,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}