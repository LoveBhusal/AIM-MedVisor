{"ast":null,"code":"// src/dismissable-layer.ts\nimport { contains as contains2, getEventTarget, isHTMLElement, raf } from \"@zag-js/dom-query\";\nimport { trackInteractOutside } from \"@zag-js/interact-outside\";\nimport { isFunction, warn } from \"@zag-js/utils\";\n\n// src/escape-keydown.ts\nimport { addDomEvent } from \"@zag-js/dom-event\";\nimport { getDocument } from \"@zag-js/dom-query\";\nfunction trackEscapeKeydown(node, fn) {\n  const handleKeyDown = event => {\n    if (event.key !== \"Escape\") return;\n    if (event.isComposing) return;\n    fn?.(event);\n  };\n  return addDomEvent(getDocument(node), \"keydown\", handleKeyDown, {\n    capture: true\n  });\n}\n\n// src/layer-stack.ts\nimport { contains } from \"@zag-js/dom-query\";\nvar layerStack = {\n  layers: [],\n  branches: [],\n  count() {\n    return this.layers.length;\n  },\n  pointerBlockingLayers() {\n    return this.layers.filter(layer => layer.pointerBlocking);\n  },\n  topMostPointerBlockingLayer() {\n    return [...this.pointerBlockingLayers()].slice(-1)[0];\n  },\n  hasPointerBlockingLayer() {\n    return this.pointerBlockingLayers().length > 0;\n  },\n  isBelowPointerBlockingLayer(node) {\n    const index = this.indexOf(node);\n    const highestBlockingIndex = this.topMostPointerBlockingLayer() ? this.indexOf(this.topMostPointerBlockingLayer()?.node) : -1;\n    return index < highestBlockingIndex;\n  },\n  isTopMost(node) {\n    const layer = this.layers[this.count() - 1];\n    return layer?.node === node;\n  },\n  getNestedLayers(node) {\n    return Array.from(this.layers).slice(this.indexOf(node) + 1);\n  },\n  isInNestedLayer(node, target) {\n    return this.getNestedLayers(node).some(layer => contains(layer.node, target));\n  },\n  isInBranch(target) {\n    return Array.from(this.branches).some(branch => contains(branch, target));\n  },\n  add(layer) {\n    const num = this.layers.push(layer);\n    layer.node.style.setProperty(\"--layer-index\", `${num}`);\n  },\n  addBranch(node) {\n    this.branches.push(node);\n  },\n  remove(node) {\n    const index = this.indexOf(node);\n    if (index < 0) return;\n    if (index < this.count() - 1) {\n      const _layers = this.getNestedLayers(node);\n      _layers.forEach(layer => layer.dismiss());\n    }\n    this.layers.splice(index, 1);\n    node.style.removeProperty(\"--layer-index\");\n  },\n  removeBranch(node) {\n    const index = this.branches.indexOf(node);\n    if (index >= 0) this.branches.splice(index, 1);\n  },\n  indexOf(node) {\n    return this.layers.findIndex(layer => layer.node === node);\n  },\n  dismiss(node) {\n    this.layers[this.indexOf(node)]?.dismiss();\n  },\n  clear() {\n    this.remove(this.layers[0].node);\n  }\n};\n\n// src/pointer-event-outside.ts\nimport { getDocument as getDocument2, setStyle, waitForElements } from \"@zag-js/dom-query\";\nvar originalBodyPointerEvents;\nfunction assignPointerEventToLayers() {\n  layerStack.layers.forEach(_ref => {\n    let {\n      node\n    } = _ref;\n    node.style.pointerEvents = layerStack.isBelowPointerBlockingLayer(node) ? \"none\" : \"auto\";\n  });\n}\nfunction clearPointerEvent(node) {\n  node.style.pointerEvents = \"\";\n}\nfunction disablePointerEventsOutside(node, peristentElements) {\n  const doc = getDocument2(node);\n  const cleanups = [];\n  if (layerStack.hasPointerBlockingLayer() && !doc.body.hasAttribute(\"data-inert\")) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    queueMicrotask(() => {\n      doc.body.style.pointerEvents = \"none\";\n      doc.body.setAttribute(\"data-inert\", \"\");\n    });\n  }\n  if (peristentElements) {\n    const persistedCleanup = waitForElements(peristentElements, el => {\n      cleanups.push(setStyle(el, {\n        pointerEvents: \"auto\"\n      }));\n    });\n    cleanups.push(persistedCleanup);\n  }\n  return () => {\n    if (layerStack.hasPointerBlockingLayer()) return;\n    queueMicrotask(() => {\n      doc.body.style.pointerEvents = originalBodyPointerEvents;\n      doc.body.removeAttribute(\"data-inert\");\n      if (doc.body.style.length === 0) doc.body.removeAttribute(\"style\");\n    });\n    cleanups.forEach(fn => fn());\n  };\n}\n\n// src/dismissable-layer.ts\nfunction trackDismissableElementImpl(node, options) {\n  if (!node) {\n    warn(\"[@zag-js/dismissable] node is `null` or `undefined`\");\n    return;\n  }\n  const {\n    onDismiss,\n    pointerBlocking,\n    exclude: excludeContainers,\n    debug\n  } = options;\n  const layer = {\n    dismiss: onDismiss,\n    node,\n    pointerBlocking\n  };\n  layerStack.add(layer);\n  assignPointerEventToLayers();\n  function onPointerDownOutside(event) {\n    const target = getEventTarget(event.detail.originalEvent);\n    if (layerStack.isBelowPointerBlockingLayer(node) || layerStack.isInBranch(target)) return;\n    options.onPointerDownOutside?.(event);\n    options.onInteractOutside?.(event);\n    if (event.defaultPrevented) return;\n    if (debug) {\n      console.log(\"onPointerDownOutside:\", event.detail.originalEvent);\n    }\n    onDismiss?.();\n  }\n  function onFocusOutside(event) {\n    const target = getEventTarget(event.detail.originalEvent);\n    if (layerStack.isInBranch(target)) return;\n    options.onFocusOutside?.(event);\n    options.onInteractOutside?.(event);\n    if (event.defaultPrevented) return;\n    if (debug) {\n      console.log(\"onFocusOutside:\", event.detail.originalEvent);\n    }\n    onDismiss?.();\n  }\n  function onEscapeKeyDown(event) {\n    if (!layerStack.isTopMost(node)) return;\n    options.onEscapeKeyDown?.(event);\n    if (!event.defaultPrevented && onDismiss) {\n      event.preventDefault();\n      onDismiss();\n    }\n  }\n  function exclude(target) {\n    if (!node) return false;\n    const containers = typeof excludeContainers === \"function\" ? excludeContainers() : excludeContainers;\n    const _containers = Array.isArray(containers) ? containers : [containers];\n    const persistentElements = options.persistentElements?.map(fn => fn()).filter(isHTMLElement);\n    if (persistentElements) _containers.push(...persistentElements);\n    return _containers.some(node2 => contains2(node2, target)) || layerStack.isInNestedLayer(node, target);\n  }\n  const cleanups = [pointerBlocking ? disablePointerEventsOutside(node, options.persistentElements) : void 0, trackEscapeKeydown(node, onEscapeKeyDown), trackInteractOutside(node, {\n    exclude,\n    onFocusOutside,\n    onPointerDownOutside,\n    defer: options.defer\n  })];\n  return () => {\n    layerStack.remove(node);\n    assignPointerEventToLayers();\n    clearPointerEvent(node);\n    cleanups.forEach(fn => fn?.());\n  };\n}\nfunction trackDismissableElement(nodeOrFn, options) {\n  const {\n    defer\n  } = options;\n  const func = defer ? raf : v => v();\n  const cleanups = [];\n  cleanups.push(func(() => {\n    const node = isFunction(nodeOrFn) ? nodeOrFn() : nodeOrFn;\n    cleanups.push(trackDismissableElementImpl(node, options));\n  }));\n  return () => {\n    cleanups.forEach(fn => fn?.());\n  };\n}\nfunction trackDismissableBranch(nodeOrFn) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    defer\n  } = options;\n  const func = defer ? raf : v => v();\n  const cleanups = [];\n  cleanups.push(func(() => {\n    const node = isFunction(nodeOrFn) ? nodeOrFn() : nodeOrFn;\n    if (!node) {\n      warn(\"[@zag-js/dismissable] branch node is `null` or `undefined`\");\n      return;\n    }\n    layerStack.addBranch(node);\n    cleanups.push(() => {\n      layerStack.removeBranch(node);\n    });\n  }));\n  return () => {\n    cleanups.forEach(fn => fn?.());\n  };\n}\nexport { trackDismissableBranch, trackDismissableElement };","map":{"version":3,"names":["contains","contains2","getEventTarget","isHTMLElement","raf","trackInteractOutside","isFunction","warn","addDomEvent","getDocument","trackEscapeKeydown","node","fn","handleKeyDown","event","key","isComposing","capture","layerStack","layers","branches","count","length","pointerBlockingLayers","filter","layer","pointerBlocking","topMostPointerBlockingLayer","slice","hasPointerBlockingLayer","isBelowPointerBlockingLayer","index","indexOf","highestBlockingIndex","isTopMost","getNestedLayers","Array","from","isInNestedLayer","target","some","isInBranch","branch","add","num","push","style","setProperty","addBranch","remove","_layers","forEach","dismiss","splice","removeProperty","removeBranch","findIndex","clear","getDocument2","setStyle","waitForElements","originalBodyPointerEvents","assignPointerEventToLayers","_ref","pointerEvents","clearPointerEvent","disablePointerEventsOutside","peristentElements","doc","cleanups","body","hasAttribute","document","queueMicrotask","setAttribute","persistedCleanup","el","removeAttribute","trackDismissableElementImpl","options","onDismiss","exclude","excludeContainers","debug","onPointerDownOutside","detail","originalEvent","onInteractOutside","defaultPrevented","console","log","onFocusOutside","onEscapeKeyDown","preventDefault","containers","_containers","isArray","persistentElements","map","node2","defer","trackDismissableElement","nodeOrFn","func","v","trackDismissableBranch","arguments","undefined"],"sources":["/Users/rishil/AIM-MedVisor/node_modules/@zag-js/dismissable/src/dismissable-layer.ts","/Users/rishil/AIM-MedVisor/node_modules/@zag-js/dismissable/src/escape-keydown.ts","/Users/rishil/AIM-MedVisor/node_modules/@zag-js/dismissable/src/layer-stack.ts","/Users/rishil/AIM-MedVisor/node_modules/@zag-js/dismissable/src/pointer-event-outside.ts"],"sourcesContent":["import { contains, getEventTarget, isHTMLElement, raf } from \"@zag-js/dom-query\"\nimport {\n  trackInteractOutside,\n  type FocusOutsideEvent,\n  type InteractOutsideHandlers,\n  type PointerDownOutsideEvent,\n} from \"@zag-js/interact-outside\"\nimport { isFunction, warn, type MaybeFunction } from \"@zag-js/utils\"\nimport { trackEscapeKeydown } from \"./escape-keydown\"\nimport { layerStack, type Layer } from \"./layer-stack\"\nimport { assignPointerEventToLayers, clearPointerEvent, disablePointerEventsOutside } from \"./pointer-event-outside\"\n\ntype MaybeElement = HTMLElement | null\ntype Container = MaybeElement | Array<MaybeElement>\ntype NodeOrFn = MaybeFunction<MaybeElement>\n\nexport interface DismissableElementHandlers extends InteractOutsideHandlers {\n  /**\n   * Function called when the escape key is pressed\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void\n}\n\nexport interface PersistentElementOptions {\n  /**\n   * Returns the persistent elements that:\n   * - should not have pointer-events disabled\n   * - should not trigger the dismiss event\n   */\n  persistentElements?: Array<() => Element | null>\n}\n\nexport interface DismissableElementOptions extends DismissableElementHandlers, PersistentElementOptions {\n  /**\n   * Whether to log debug information\n   */\n  debug?: boolean\n  /**\n   * Whether to block pointer events outside the dismissable element\n   */\n  pointerBlocking?: boolean\n  /**\n   * Function called when the dismissable element is dismissed\n   */\n  onDismiss: VoidFunction\n  /**\n   * Exclude containers from the interact outside event\n   */\n  exclude?: MaybeFunction<Container>\n  /**\n   * Defer the interact outside event to the next frame\n   */\n  defer?: boolean\n}\n\nfunction trackDismissableElementImpl(node: MaybeElement, options: DismissableElementOptions) {\n  if (!node) {\n    warn(\"[@zag-js/dismissable] node is `null` or `undefined`\")\n    return\n  }\n\n  const { onDismiss, pointerBlocking, exclude: excludeContainers, debug } = options\n\n  const layer: Layer = { dismiss: onDismiss, node, pointerBlocking }\n\n  layerStack.add(layer)\n  assignPointerEventToLayers()\n\n  function onPointerDownOutside(event: PointerDownOutsideEvent) {\n    const target = getEventTarget(event.detail.originalEvent)\n    if (layerStack.isBelowPointerBlockingLayer(node!) || layerStack.isInBranch(target)) return\n    options.onPointerDownOutside?.(event)\n    options.onInteractOutside?.(event)\n    if (event.defaultPrevented) return\n    if (debug) {\n      console.log(\"onPointerDownOutside:\", event.detail.originalEvent)\n    }\n    onDismiss?.()\n  }\n\n  function onFocusOutside(event: FocusOutsideEvent) {\n    const target = getEventTarget(event.detail.originalEvent)\n    if (layerStack.isInBranch(target)) return\n    options.onFocusOutside?.(event)\n    options.onInteractOutside?.(event)\n    if (event.defaultPrevented) return\n    if (debug) {\n      console.log(\"onFocusOutside:\", event.detail.originalEvent)\n    }\n    onDismiss?.()\n  }\n\n  function onEscapeKeyDown(event: KeyboardEvent) {\n    if (!layerStack.isTopMost(node!)) return\n    options.onEscapeKeyDown?.(event)\n    if (!event.defaultPrevented && onDismiss) {\n      event.preventDefault()\n      onDismiss()\n    }\n  }\n\n  function exclude(target: Element) {\n    if (!node) return false\n    const containers = typeof excludeContainers === \"function\" ? excludeContainers() : excludeContainers\n    const _containers = Array.isArray(containers) ? containers : [containers]\n    const persistentElements = options.persistentElements?.map((fn) => fn()).filter(isHTMLElement)\n    if (persistentElements) _containers.push(...persistentElements)\n    return _containers.some((node) => contains(node, target)) || layerStack.isInNestedLayer(node, target)\n  }\n\n  const cleanups = [\n    pointerBlocking ? disablePointerEventsOutside(node, options.persistentElements) : undefined,\n    trackEscapeKeydown(node, onEscapeKeyDown),\n    trackInteractOutside(node, { exclude, onFocusOutside, onPointerDownOutside, defer: options.defer }),\n  ]\n\n  return () => {\n    layerStack.remove(node!)\n    // re-assign pointer event to remaining layers\n    assignPointerEventToLayers()\n    // remove pointer event from removed layer\n    clearPointerEvent(node!)\n    cleanups.forEach((fn) => fn?.())\n  }\n}\n\nexport function trackDismissableElement(nodeOrFn: NodeOrFn, options: DismissableElementOptions) {\n  const { defer } = options\n  const func = defer ? raf : (v: any) => v()\n  const cleanups: (VoidFunction | undefined)[] = []\n  cleanups.push(\n    func(() => {\n      const node = isFunction(nodeOrFn) ? nodeOrFn() : nodeOrFn\n      cleanups.push(trackDismissableElementImpl(node, options))\n    }),\n  )\n  return () => {\n    cleanups.forEach((fn) => fn?.())\n  }\n}\n\nexport function trackDismissableBranch(nodeOrFn: NodeOrFn, options: { defer?: boolean } = {}) {\n  const { defer } = options\n  const func = defer ? raf : (v: any) => v()\n  const cleanups: (VoidFunction | undefined)[] = []\n\n  cleanups.push(\n    func(() => {\n      const node = isFunction(nodeOrFn) ? nodeOrFn() : nodeOrFn\n      if (!node) {\n        warn(\"[@zag-js/dismissable] branch node is `null` or `undefined`\")\n        return\n      }\n      layerStack.addBranch(node)\n      cleanups.push(() => {\n        layerStack.removeBranch(node)\n      })\n    }),\n  )\n\n  return () => {\n    cleanups.forEach((fn) => fn?.())\n  }\n}\n","import { addDomEvent } from \"@zag-js/dom-event\"\nimport { getDocument } from \"@zag-js/dom-query\"\n\nexport function trackEscapeKeydown(node: HTMLElement, fn?: (event: KeyboardEvent) => void) {\n  const handleKeyDown = (event: KeyboardEvent) => {\n    if (event.key !== \"Escape\") return\n    if (event.isComposing) return\n    fn?.(event)\n  }\n\n  return addDomEvent(getDocument(node), \"keydown\", handleKeyDown, { capture: true })\n}\n","import { contains } from \"@zag-js/dom-query\"\n\nexport interface Layer {\n  dismiss: VoidFunction\n  node: HTMLElement\n  pointerBlocking?: boolean\n}\n\nexport const layerStack = {\n  layers: [] as Layer[],\n  branches: [] as HTMLElement[],\n  count(): number {\n    return this.layers.length\n  },\n  pointerBlockingLayers(): Layer[] {\n    return this.layers.filter((layer) => layer.pointerBlocking)\n  },\n  topMostPointerBlockingLayer(): Layer | undefined {\n    return [...this.pointerBlockingLayers()].slice(-1)[0]\n  },\n  hasPointerBlockingLayer(): boolean {\n    return this.pointerBlockingLayers().length > 0\n  },\n  isBelowPointerBlockingLayer(node: HTMLElement) {\n    const index = this.indexOf(node)\n    const highestBlockingIndex = this.topMostPointerBlockingLayer()\n      ? this.indexOf(this.topMostPointerBlockingLayer()?.node)\n      : -1\n    return index < highestBlockingIndex\n  },\n  isTopMost(node: HTMLElement | null) {\n    const layer = this.layers[this.count() - 1]\n    return layer?.node === node\n  },\n  getNestedLayers(node: HTMLElement) {\n    return Array.from(this.layers).slice(this.indexOf(node) + 1)\n  },\n  isInNestedLayer(node: HTMLElement, target: HTMLElement | EventTarget | null) {\n    return this.getNestedLayers(node).some((layer) => contains(layer.node, target))\n  },\n  isInBranch(target: HTMLElement | EventTarget | null) {\n    return Array.from(this.branches).some((branch) => contains(branch, target))\n  },\n  add(layer: Layer) {\n    const num = this.layers.push(layer)\n    layer.node.style.setProperty(\"--layer-index\", `${num}`)\n  },\n  addBranch(node: HTMLElement) {\n    this.branches.push(node)\n  },\n  remove(node: HTMLElement) {\n    const index = this.indexOf(node)\n    if (index < 0) return\n\n    // dismiss nested layers\n    if (index < this.count() - 1) {\n      const _layers = this.getNestedLayers(node)\n      _layers.forEach((layer) => layer.dismiss())\n    }\n    // remove this layer\n    this.layers.splice(index, 1)\n    node.style.removeProperty(\"--layer-index\")\n  },\n  removeBranch(node: HTMLElement) {\n    const index = this.branches.indexOf(node)\n    if (index >= 0) this.branches.splice(index, 1)\n  },\n  indexOf(node: HTMLElement | undefined) {\n    return this.layers.findIndex((layer) => layer.node === node)\n  },\n  dismiss(node: HTMLElement) {\n    this.layers[this.indexOf(node)]?.dismiss()\n  },\n  clear() {\n    this.remove(this.layers[0].node)\n  },\n}\n","import { getDocument, setStyle, waitForElements } from \"@zag-js/dom-query\"\nimport { layerStack } from \"./layer-stack\"\n\nlet originalBodyPointerEvents: string\n\nexport function assignPointerEventToLayers() {\n  layerStack.layers.forEach(({ node }) => {\n    node.style.pointerEvents = layerStack.isBelowPointerBlockingLayer(node) ? \"none\" : \"auto\"\n  })\n}\n\nexport function clearPointerEvent(node: HTMLElement) {\n  node.style.pointerEvents = \"\"\n}\n\nexport function disablePointerEventsOutside(node: HTMLElement, peristentElements?: Array<() => Element | null>) {\n  const doc = getDocument(node)\n\n  const cleanups: VoidFunction[] = []\n\n  if (layerStack.hasPointerBlockingLayer() && !doc.body.hasAttribute(\"data-inert\")) {\n    originalBodyPointerEvents = document.body.style.pointerEvents\n    queueMicrotask(() => {\n      doc.body.style.pointerEvents = \"none\"\n      doc.body.setAttribute(\"data-inert\", \"\")\n    })\n  }\n\n  if (peristentElements) {\n    const persistedCleanup = waitForElements(peristentElements, (el) => {\n      cleanups.push(setStyle(el, { pointerEvents: \"auto\" }))\n    })\n    cleanups.push(persistedCleanup)\n  }\n\n  return () => {\n    if (layerStack.hasPointerBlockingLayer()) return\n    queueMicrotask(() => {\n      doc.body.style.pointerEvents = originalBodyPointerEvents\n      doc.body.removeAttribute(\"data-inert\")\n      if (doc.body.style.length === 0) doc.body.removeAttribute(\"style\")\n    })\n    cleanups.forEach((fn) => fn())\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}