{"ast":null,"code":"// src/index.ts\nimport { isIos, nextTick, raf } from \"@zag-js/dom-query\";\nvar state = \"default\";\nvar userSelect = \"\";\nvar elementMap = /* @__PURE__ */new WeakMap();\nfunction disableTextSelectionImpl() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    target,\n    doc\n  } = options;\n  const docNode = doc ?? document;\n  const rootEl = docNode.documentElement;\n  if (isIos()) {\n    if (state === \"default\") {\n      userSelect = rootEl.style.webkitUserSelect;\n      rootEl.style.webkitUserSelect = \"none\";\n    }\n    state = \"disabled\";\n  } else if (target) {\n    elementMap.set(target, target.style.userSelect);\n    target.style.userSelect = \"none\";\n  }\n  return () => restoreTextSelection({\n    target,\n    doc: docNode\n  });\n}\nfunction restoreTextSelection() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    target,\n    doc\n  } = options;\n  const docNode = doc ?? document;\n  const rootEl = docNode.documentElement;\n  if (isIos()) {\n    if (state !== \"disabled\") return;\n    state = \"restoring\";\n    setTimeout(() => {\n      nextTick(() => {\n        if (state === \"restoring\") {\n          if (rootEl.style.webkitUserSelect === \"none\") {\n            rootEl.style.webkitUserSelect = userSelect || \"\";\n          }\n          userSelect = \"\";\n          state = \"default\";\n        }\n      });\n    }, 300);\n  } else {\n    if (target && elementMap.has(target)) {\n      const prevUserSelect = elementMap.get(target);\n      if (target.style.userSelect === \"none\") {\n        target.style.userSelect = prevUserSelect ?? \"\";\n      }\n      if (target.getAttribute(\"style\") === \"\") {\n        target.removeAttribute(\"style\");\n      }\n      elementMap.delete(target);\n    }\n  }\n}\nfunction disableTextSelection() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    defer,\n    target,\n    ...restOptions\n  } = options;\n  const func = defer ? raf : v => v();\n  const cleanups = [];\n  cleanups.push(func(() => {\n    const node = typeof target === \"function\" ? target() : target;\n    cleanups.push(disableTextSelectionImpl({\n      ...restOptions,\n      target: node\n    }));\n  }));\n  return () => {\n    cleanups.forEach(fn => fn?.());\n  };\n}\nexport { disableTextSelection, restoreTextSelection };","map":{"version":3,"names":["isIos","nextTick","raf","state","userSelect","elementMap","WeakMap","disableTextSelectionImpl","options","arguments","length","undefined","target","doc","docNode","document","rootEl","documentElement","style","webkitUserSelect","set","restoreTextSelection","setTimeout","has","prevUserSelect","get","getAttribute","removeAttribute","delete","disableTextSelection","defer","restOptions","func","v","cleanups","push","node","forEach","fn"],"sources":["/Users/rishil/AIM-MedVisor/node_modules/@zag-js/text-selection/src/index.ts"],"sourcesContent":["import { isIos, nextTick, raf } from \"@zag-js/dom-query\"\n\ntype State = \"default\" | \"disabled\" | \"restoring\"\n\nlet state: State = \"default\"\nlet userSelect = \"\"\nconst elementMap = new WeakMap<HTMLElement, string>()\n\nexport interface DisableTextSelectionOptions<T = MaybeElement> {\n  target?: T\n  doc?: Document\n  defer?: boolean\n}\n\nfunction disableTextSelectionImpl(options: DisableTextSelectionOptions = {}) {\n  const { target, doc } = options\n\n  const docNode = doc ?? document\n  const rootEl = docNode.documentElement\n\n  if (isIos()) {\n    if (state === \"default\") {\n      userSelect = rootEl.style.webkitUserSelect\n      rootEl.style.webkitUserSelect = \"none\"\n    }\n\n    state = \"disabled\"\n  } else if (target) {\n    elementMap.set(target, target.style.userSelect)\n    target.style.userSelect = \"none\"\n  }\n\n  return () => restoreTextSelection({ target, doc: docNode })\n}\n\nexport function restoreTextSelection(options: DisableTextSelectionOptions = {}) {\n  const { target, doc } = options\n\n  const docNode = doc ?? document\n  const rootEl = docNode.documentElement\n\n  if (isIos()) {\n    if (state !== \"disabled\") return\n    state = \"restoring\"\n\n    setTimeout(() => {\n      nextTick(() => {\n        if (state === \"restoring\") {\n          if (rootEl.style.webkitUserSelect === \"none\") {\n            rootEl.style.webkitUserSelect = userSelect || \"\"\n          }\n          userSelect = \"\"\n          state = \"default\"\n        }\n      })\n    }, 300)\n  } else {\n    if (target && elementMap.has(target)) {\n      const prevUserSelect = elementMap.get(target)\n\n      if (target.style.userSelect === \"none\") {\n        target.style.userSelect = prevUserSelect ?? \"\"\n      }\n\n      if (target.getAttribute(\"style\") === \"\") {\n        target.removeAttribute(\"style\")\n      }\n      elementMap.delete(target)\n    }\n  }\n}\n\ntype MaybeElement = HTMLElement | null | undefined\n\ntype NodeOrFn = MaybeElement | (() => MaybeElement)\n\nexport function disableTextSelection(options: DisableTextSelectionOptions<NodeOrFn> = {}) {\n  const { defer, target, ...restOptions } = options\n  const func = defer ? raf : (v: any) => v()\n  const cleanups: (VoidFunction | undefined)[] = []\n  cleanups.push(\n    func(() => {\n      const node = typeof target === \"function\" ? target() : target\n      cleanups.push(disableTextSelectionImpl({ ...restOptions, target: node }))\n    }),\n  )\n  return () => {\n    cleanups.forEach((fn) => fn?.())\n  }\n}\n"],"mappings":";AAAA,SAASA,KAAA,EAAOC,QAAA,EAAUC,GAAA,QAAW;AAIrC,IAAIC,KAAA,GAAe;AACnB,IAAIC,UAAA,GAAa;AACjB,IAAMC,UAAA,GAAa,mBAAIC,OAAA,CAA6B;AAQpD,SAASC,yBAAA,EAAoE;EAAA,IAA3CC,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAuC,CAAC;EACxE,MAAM;IAAEG,MAAA;IAAQC;EAAI,IAAIL,OAAA;EAExB,MAAMM,OAAA,GAAUD,GAAA,IAAOE,QAAA;EACvB,MAAMC,MAAA,GAASF,OAAA,CAAQG,eAAA;EAEvB,IAAIjB,KAAA,CAAM,GAAG;IACX,IAAIG,KAAA,KAAU,WAAW;MACvBC,UAAA,GAAaY,MAAA,CAAOE,KAAA,CAAMC,gBAAA;MAC1BH,MAAA,CAAOE,KAAA,CAAMC,gBAAA,GAAmB;IAClC;IAEAhB,KAAA,GAAQ;EACV,WAAWS,MAAA,EAAQ;IACjBP,UAAA,CAAWe,GAAA,CAAIR,MAAA,EAAQA,MAAA,CAAOM,KAAA,CAAMd,UAAU;IAC9CQ,MAAA,CAAOM,KAAA,CAAMd,UAAA,GAAa;EAC5B;EAEA,OAAO,MAAMiB,oBAAA,CAAqB;IAAET,MAAA;IAAQC,GAAA,EAAKC;EAAQ,CAAC;AAC5D;AAEO,SAASO,qBAAA,EAAgE;EAAA,IAA3Cb,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAuC,CAAC;EAC3E,MAAM;IAAEG,MAAA;IAAQC;EAAI,IAAIL,OAAA;EAExB,MAAMM,OAAA,GAAUD,GAAA,IAAOE,QAAA;EACvB,MAAMC,MAAA,GAASF,OAAA,CAAQG,eAAA;EAEvB,IAAIjB,KAAA,CAAM,GAAG;IACX,IAAIG,KAAA,KAAU,YAAY;IAC1BA,KAAA,GAAQ;IAERmB,UAAA,CAAW,MAAM;MACfrB,QAAA,CAAS,MAAM;QACb,IAAIE,KAAA,KAAU,aAAa;UACzB,IAAIa,MAAA,CAAOE,KAAA,CAAMC,gBAAA,KAAqB,QAAQ;YAC5CH,MAAA,CAAOE,KAAA,CAAMC,gBAAA,GAAmBf,UAAA,IAAc;UAChD;UACAA,UAAA,GAAa;UACbD,KAAA,GAAQ;QACV;MACF,CAAC;IACH,GAAG,GAAG;EACR,OAAO;IACL,IAAIS,MAAA,IAAUP,UAAA,CAAWkB,GAAA,CAAIX,MAAM,GAAG;MACpC,MAAMY,cAAA,GAAiBnB,UAAA,CAAWoB,GAAA,CAAIb,MAAM;MAE5C,IAAIA,MAAA,CAAOM,KAAA,CAAMd,UAAA,KAAe,QAAQ;QACtCQ,MAAA,CAAOM,KAAA,CAAMd,UAAA,GAAaoB,cAAA,IAAkB;MAC9C;MAEA,IAAIZ,MAAA,CAAOc,YAAA,CAAa,OAAO,MAAM,IAAI;QACvCd,MAAA,CAAOe,eAAA,CAAgB,OAAO;MAChC;MACAtB,UAAA,CAAWuB,MAAA,CAAOhB,MAAM;IAC1B;EACF;AACF;AAMO,SAASiB,qBAAA,EAA0E;EAAA,IAArDrB,OAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiD,CAAC;EACrF,MAAM;IAAEqB,KAAA;IAAOlB,MAAA;IAAQ,GAAGmB;EAAY,IAAIvB,OAAA;EAC1C,MAAMwB,IAAA,GAAOF,KAAA,GAAQ5B,GAAA,GAAO+B,CAAA,IAAWA,CAAA,CAAE;EACzC,MAAMC,QAAA,GAAyC,EAAC;EAChDA,QAAA,CAASC,IAAA,CACPH,IAAA,CAAK,MAAM;IACT,MAAMI,IAAA,GAAO,OAAOxB,MAAA,KAAW,aAAaA,MAAA,CAAO,IAAIA,MAAA;IACvDsB,QAAA,CAASC,IAAA,CAAK5B,wBAAA,CAAyB;MAAE,GAAGwB,WAAA;MAAanB,MAAA,EAAQwB;IAAK,CAAC,CAAC;EAC1E,CAAC,CACH;EACA,OAAO,MAAM;IACXF,QAAA,CAASG,OAAA,CAASC,EAAA,IAAOA,EAAA,GAAK,CAAC;EACjC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}