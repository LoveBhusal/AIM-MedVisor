{"ast":null,"code":"var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/affine-transform.ts\nvar AffineTransform = class _AffineTransform {\n  constructor() {\n    var _this = this;\n    let [m00, m01, m02, m10, m11, m12] = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [0, 0, 0, 0, 0, 0];\n    __publicField(this, \"m00\");\n    __publicField(this, \"m01\");\n    __publicField(this, \"m02\");\n    __publicField(this, \"m10\");\n    __publicField(this, \"m11\");\n    __publicField(this, \"m12\");\n    __publicField(this, \"rotate\", function () {\n      return _this.prepend(_AffineTransform.rotate(...arguments));\n    });\n    __publicField(this, \"scale\", function () {\n      return _this.prepend(_AffineTransform.scale(...arguments));\n    });\n    __publicField(this, \"translate\", function () {\n      return _this.prepend(_AffineTransform.translate(...arguments));\n    });\n    this.m00 = m00;\n    this.m01 = m01;\n    this.m02 = m02;\n    this.m10 = m10;\n    this.m11 = m11;\n    this.m12 = m12;\n  }\n  applyTo(point) {\n    const {\n      x,\n      y\n    } = point;\n    const {\n      m00,\n      m01,\n      m02,\n      m10,\n      m11,\n      m12\n    } = this;\n    return {\n      x: m00 * x + m01 * y + m02,\n      y: m10 * x + m11 * y + m12\n    };\n  }\n  prepend(other) {\n    return new _AffineTransform([this.m00 * other.m00 + this.m01 * other.m10,\n    // m00\n    this.m00 * other.m01 + this.m01 * other.m11,\n    // m01\n    this.m00 * other.m02 + this.m01 * other.m12 + this.m02,\n    // m02\n    this.m10 * other.m00 + this.m11 * other.m10,\n    // m10\n    this.m10 * other.m01 + this.m11 * other.m11,\n    // m11\n    this.m10 * other.m02 + this.m11 * other.m12 + this.m12\n    // m12\n    ]);\n  }\n  append(other) {\n    return new _AffineTransform([other.m00 * this.m00 + other.m01 * this.m10,\n    // m00\n    other.m00 * this.m01 + other.m01 * this.m11,\n    // m01\n    other.m00 * this.m02 + other.m01 * this.m12 + other.m02,\n    // m02\n    other.m10 * this.m00 + other.m11 * this.m10,\n    // m10\n    other.m10 * this.m01 + other.m11 * this.m11,\n    // m11\n    other.m10 * this.m02 + other.m11 * this.m12 + other.m12\n    // m12\n    ]);\n  }\n  get determinant() {\n    return this.m00 * this.m11 - this.m01 * this.m10;\n  }\n  get isInvertible() {\n    const det = this.determinant;\n    return isFinite(det) && isFinite(this.m02) && isFinite(this.m12) && det !== 0;\n  }\n  invert() {\n    const det = this.determinant;\n    return new _AffineTransform([this.m11 / det,\n    // m00\n    -this.m01 / det,\n    // m01\n    (this.m01 * this.m12 - this.m11 * this.m02) / det,\n    // m02\n    -this.m10 / det,\n    // m10\n    this.m00 / det,\n    // m11\n    (this.m10 * this.m02 - this.m00 * this.m12) / det\n    // m12\n    ]);\n  }\n  get array() {\n    return [this.m00, this.m01, this.m02, this.m10, this.m11, this.m12, 0, 0, 1];\n  }\n  get float32Array() {\n    return new Float32Array(this.array);\n  }\n  // Static\n  static get identity() {\n    return new _AffineTransform([1, 0, 0, 0, 1, 0]);\n  }\n  static rotate(theta, origin) {\n    const rotation = new _AffineTransform([Math.cos(theta), -Math.sin(theta), 0, Math.sin(theta), Math.cos(theta), 0]);\n    if (origin && (origin.x !== 0 || origin.y !== 0)) {\n      return _AffineTransform.multiply(_AffineTransform.translate(origin.x, origin.y), rotation, _AffineTransform.translate(-origin.x, -origin.y));\n    }\n    return rotation;\n  }\n  static scale(sx) {\n    let sy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : sx;\n    let origin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      x: 0,\n      y: 0\n    };\n    const scale = new _AffineTransform([sx, 0, 0, 0, sy, 0]);\n    if (origin.x !== 0 || origin.y !== 0) {\n      return _AffineTransform.multiply(_AffineTransform.translate(origin.x, origin.y), scale, _AffineTransform.translate(-origin.x, -origin.y));\n    }\n    return scale;\n  }\n  static translate(tx, ty) {\n    return new _AffineTransform([1, 0, tx, 0, 1, ty]);\n  }\n  static multiply() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    let [first, ...rest] = _ref;\n    if (!first) return _AffineTransform.identity;\n    return rest.reduce((result, item) => result.prepend(item), first);\n  }\n  get a() {\n    return this.m00;\n  }\n  get b() {\n    return this.m10;\n  }\n  get c() {\n    return this.m01;\n  }\n  get d() {\n    return this.m11;\n  }\n  get tx() {\n    return this.m02;\n  }\n  get ty() {\n    return this.m12;\n  }\n  get scaleComponents() {\n    return {\n      x: this.a,\n      y: this.d\n    };\n  }\n  get translationComponents() {\n    return {\n      x: this.tx,\n      y: this.ty\n    };\n  }\n  get skewComponents() {\n    return {\n      x: this.c,\n      y: this.b\n    };\n  }\n  toString() {\n    return `matrix(${this.a}, ${this.b}, ${this.c}, ${this.d}, ${this.tx}, ${this.ty})`;\n  }\n};\n\n// src/align.ts\nfunction hAlign(a, ref, h) {\n  let x = ref.minX;\n  if (h === \"left-inside\") x = ref.minX;\n  if (h === \"left-outside\") x = ref.minX - ref.width;\n  if (h === \"right-inside\") x = ref.maxX - ref.width;\n  if (h === \"right-outside\") x = ref.maxX;\n  if (h === \"center\") x = ref.midX - ref.width / 2;\n  return {\n    ...a,\n    x\n  };\n}\nfunction vAlign(a, ref, v) {\n  let y = ref.minY;\n  if (v === \"top-inside\") y = ref.minY;\n  if (v === \"top-outside\") y = ref.minY - a.height;\n  if (v === \"bottom-inside\") y = ref.maxY - a.height;\n  if (v === \"bottom-outside\") y = ref.maxY;\n  if (v === \"center\") y = ref.midY - a.height / 2;\n  return {\n    ...a,\n    y\n  };\n}\nfunction alignRect(a, ref, options) {\n  const {\n    h,\n    v\n  } = options;\n  return vAlign(hAlign(a, ref, h), ref, v);\n}\n\n// src/clamp.ts\nvar clamp = (value, min3, max2) => Math.min(Math.max(value, min3), max2);\nvar clampPoint = (position, size, boundaryRect) => {\n  const x = clamp(position.x, boundaryRect.x, boundaryRect.x + boundaryRect.width - size.width);\n  const y = clamp(position.y, boundaryRect.y, boundaryRect.y + boundaryRect.height - size.height);\n  return {\n    x,\n    y\n  };\n};\nvar defaultMinSize = {\n  width: 0,\n  height: 0\n};\nvar defaultMaxSize = {\n  width: Infinity,\n  height: Infinity\n};\nvar clampSize = function (size) {\n  let minSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultMinSize;\n  let maxSize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultMaxSize;\n  return {\n    width: Math.min(Math.max(size.width, minSize.width), maxSize.width),\n    height: Math.min(Math.max(size.height, minSize.height), maxSize.height)\n  };\n};\n\n// src/rect.ts\nvar createPoint = (x, y) => ({\n  x,\n  y\n});\nvar subtractPoints = (a, b) => createPoint(a.x - b.x, a.y - b.y);\nvar addPoints = (a, b) => createPoint(a.x + b.x, a.y + b.y);\nfunction isPoint(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\");\n}\nfunction createRect(r) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = r;\n  const midX = x + width / 2;\n  const midY = y + height / 2;\n  return {\n    x,\n    y,\n    width,\n    height,\n    minX: x,\n    minY: y,\n    maxX: x + width,\n    maxY: y + height,\n    midX,\n    midY,\n    center: createPoint(midX, midY)\n  };\n}\nfunction isRect(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\") && Reflect.has(v, \"width\") && Reflect.has(v, \"height\");\n}\nfunction getRectCenters(v) {\n  const top = createPoint(v.midX, v.minY);\n  const right = createPoint(v.maxX, v.midY);\n  const bottom = createPoint(v.midX, v.maxY);\n  const left = createPoint(v.minX, v.midY);\n  return {\n    top,\n    right,\n    bottom,\n    left\n  };\n}\nfunction getRectCorners(v) {\n  const top = createPoint(v.minX, v.minY);\n  const right = createPoint(v.maxX, v.minY);\n  const bottom = createPoint(v.maxX, v.maxY);\n  const left = createPoint(v.minX, v.maxY);\n  return {\n    top,\n    right,\n    bottom,\n    left\n  };\n}\nfunction getRectEdges(v) {\n  const c = getRectCorners(v);\n  const top = [c.top, c.right];\n  const right = [c.right, c.bottom];\n  const bottom = [c.left, c.bottom];\n  const left = [c.top, c.left];\n  return {\n    top,\n    right,\n    bottom,\n    left\n  };\n}\n\n// src/intersection.ts\nfunction intersects(a, b) {\n  return a.x < b.maxX && a.y < b.maxY && a.maxX > b.x && a.maxY > b.y;\n}\nfunction intersection(a, b) {\n  const x = Math.max(a.x, b.x);\n  const y = Math.max(a.y, b.y);\n  const x2 = Math.min(a.x + a.width, b.x + b.width);\n  const y2 = Math.min(a.y + a.height, b.y + b.height);\n  return createRect({\n    x,\n    y,\n    width: x2 - x,\n    height: y2 - y\n  });\n}\nfunction collisions(a, b) {\n  return {\n    top: a.minY <= b.minY,\n    right: a.maxX >= b.maxX,\n    bottom: a.maxY >= b.maxY,\n    left: a.minX <= b.minX\n  };\n}\n\n// src/distance.ts\nfunction distance(a) {\n  let b = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    x: 0,\n    y: 0\n  };\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\nfunction distanceFromPoint(r, p) {\n  let x = 0;\n  let y = 0;\n  if (p.x < r.x) x = r.x - p.x;else if (p.x > r.maxX) x = p.x - r.maxX;\n  if (p.y < r.y) y = r.y - p.y;else if (p.y > r.maxY) y = p.y - r.maxY;\n  return {\n    x,\n    y,\n    value: distance({\n      x,\n      y\n    })\n  };\n}\nfunction distanceFromRect(a, b) {\n  if (intersects(a, b)) return {\n    x: 0,\n    y: 0,\n    value: 0\n  };\n  const left = a.x < b.x ? a : b;\n  const right = b.x < a.x ? a : b;\n  const upper = a.y < b.y ? a : b;\n  const lower = b.y < a.y ? a : b;\n  let x = left.x === right.x ? 0 : right.x - left.maxX;\n  x = Math.max(0, x);\n  let y = upper.y === lower.y ? 0 : lower.y - upper.maxY;\n  y = Math.max(0, y);\n  return {\n    x,\n    y,\n    value: distance({\n      x,\n      y\n    })\n  };\n}\nfunction distanceBtwEdges(a, b) {\n  return {\n    left: b.x - a.x,\n    top: b.y - a.y,\n    right: a.maxX - b.maxX,\n    bottom: a.maxY - b.maxY\n  };\n}\n\n// src/closest.ts\nfunction closest() {\n  for (var _len2 = arguments.length, pts = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    pts[_key2] = arguments[_key2];\n  }\n  return a => {\n    const ds = pts.map(b => distance(b, a));\n    const c = Math.min.apply(Math, ds);\n    return pts[ds.indexOf(c)];\n  };\n}\nfunction closestSideToRect(ref, r) {\n  if (r.maxX <= ref.minX) return \"left\";\n  if (r.minX >= ref.maxX) return \"right\";\n  if (r.maxY <= ref.minY) return \"top\";\n  if (r.minY >= ref.maxY) return \"bottom\";\n  return \"left\";\n}\nfunction closestSideToPoint(ref, p) {\n  const {\n    x,\n    y\n  } = p;\n  const dl = x - ref.minX;\n  const dr = ref.maxX - x;\n  const dt = y - ref.minY;\n  const db = ref.maxY - y;\n  let closest2 = dl;\n  let side = \"left\";\n  if (dr < closest2) {\n    closest2 = dr;\n    side = \"right\";\n  }\n  if (dt < closest2) {\n    closest2 = dt;\n    side = \"top\";\n  }\n  if (db < closest2) {\n    side = \"bottom\";\n  }\n  return side;\n}\n\n// src/constrain.ts\nvar constrainRect = (rect, boundary) => {\n  const left = Math.max(boundary.x, Math.min(rect.x, boundary.x + boundary.width - rect.width));\n  const top = Math.max(boundary.y, Math.min(rect.y, boundary.y + boundary.height - rect.height));\n  return {\n    x: left,\n    y: top,\n    width: Math.min(rect.width, boundary.width),\n    height: Math.min(rect.height, boundary.height)\n  };\n};\n\n// src/contains.ts\nfunction containsPoint(r, p) {\n  return r.minX <= p.x && p.x <= r.maxX && r.minY <= p.y && p.y <= r.maxY;\n}\nfunction containsRect(a, b) {\n  return Object.values(getRectCorners(b)).every(c => containsPoint(a, c));\n}\nfunction contains(r, v) {\n  return isRect(v) ? containsRect(r, v) : containsPoint(r, v);\n}\n\n// src/equality.ts\nvar isSizeEqual = (a, b) => {\n  return a.width === b.width && a.height === b.height;\n};\nvar isPointEqual = (a, b) => {\n  return a.x === b.x && a.y === b.y;\n};\nvar isRectEqual = (a, b) => {\n  return isPointEqual(a, b) && isSizeEqual(a, b);\n};\n\n// src/from-element.ts\nvar styleCache = /* @__PURE__ */new WeakMap();\nfunction getCacheComputedStyle(el) {\n  if (!styleCache.has(el)) {\n    const win = el.ownerDocument.defaultView || window;\n    styleCache.set(el, win.getComputedStyle(el));\n  }\n  return styleCache.get(el);\n}\nfunction getElementRect(el) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return createRect(getClientRect(el, opts));\n}\nfunction getClientRect(el) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    excludeScrollbar = false,\n    excludeBorders = false\n  } = opts;\n  const {\n    x,\n    y,\n    width,\n    height\n  } = el.getBoundingClientRect();\n  const r = {\n    x,\n    y,\n    width,\n    height\n  };\n  const style = getCacheComputedStyle(el);\n  const {\n    borderLeftWidth,\n    borderTopWidth,\n    borderRightWidth,\n    borderBottomWidth\n  } = style;\n  const borderXWidth = sum(borderLeftWidth, borderRightWidth);\n  const borderYWidth = sum(borderTopWidth, borderBottomWidth);\n  if (excludeBorders) {\n    r.width -= borderXWidth;\n    r.height -= borderYWidth;\n    r.x += px(borderLeftWidth);\n    r.y += px(borderTopWidth);\n  }\n  if (excludeScrollbar) {\n    const scrollbarWidth = el.offsetWidth - el.clientWidth - borderXWidth;\n    const scrollbarHeight = el.offsetHeight - el.clientHeight - borderYWidth;\n    r.width -= scrollbarWidth;\n    r.height -= scrollbarHeight;\n  }\n  return r;\n}\nvar px = v => parseFloat(v.replace(\"px\", \"\"));\nvar sum = function () {\n  for (var _len3 = arguments.length, vals = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    vals[_key3] = arguments[_key3];\n  }\n  return vals.reduce((sum2, v) => sum2 + (v ? px(v) : 0), 0);\n};\n\n// src/from-points.ts\nfunction getRectFromPoints() {\n  for (var _len4 = arguments.length, pts = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    pts[_key4] = arguments[_key4];\n  }\n  const xs = pts.map(p => p.x);\n  const ys = pts.map(p => p.y);\n  const x = Math.min(...xs);\n  const y = Math.min(...ys);\n  const width = Math.max(...xs) - x;\n  const height = Math.max(...ys) - y;\n  return createRect({\n    x,\n    y,\n    width,\n    height\n  });\n}\n\n// src/union.ts\nvar {\n  min,\n  max\n} = Math;\nfunction union() {\n  for (var _len5 = arguments.length, rs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    rs[_key5] = arguments[_key5];\n  }\n  const pMin = {\n    x: min(...rs.map(r => r.minX)),\n    y: min(...rs.map(r => r.minY))\n  };\n  const pMax = {\n    x: max(...rs.map(r => r.maxX)),\n    y: max(...rs.map(r => r.maxY))\n  };\n  return getRectFromPoints(pMin, pMax);\n}\n\n// src/from-range.ts\nfunction fromRange(range) {\n  let rs = [];\n  const rects = Array.from(range.getClientRects());\n  if (rects.length) {\n    rs = rs.concat(rects.map(createRect));\n    return union.apply(void 0, rs);\n  }\n  let start = range.startContainer;\n  if (start.nodeType === Node.TEXT_NODE) {\n    start = start.parentNode;\n  }\n  if (start instanceof HTMLElement) {\n    const r = getElementRect(start);\n    rs.push({\n      ...r,\n      x: r.maxX,\n      width: 0\n    });\n  }\n  return union.apply(void 0, rs);\n}\n\n// src/from-rotation.ts\nfunction toRad(d) {\n  return d % 360 * Math.PI / 180;\n}\nfunction rotate(a, d, c) {\n  const r = toRad(d);\n  const sin = Math.sin(r);\n  const cos = Math.cos(r);\n  const x = a.x - c.x;\n  const y = a.y - c.y;\n  return {\n    x: c.x + x * cos - y * sin,\n    y: c.y + x * sin + y * cos\n  };\n}\nfunction getRotationRect(r, deg) {\n  const rr = Object.values(getRectCorners(r)).map(p => rotate(p, deg, r.center));\n  const xs = rr.map(p => p.x);\n  const ys = rr.map(p => p.y);\n  const minX = Math.min(...xs);\n  const minY = Math.min(...ys);\n  const maxX = Math.max(...xs);\n  const maxY = Math.max(...ys);\n  return createRect({\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  });\n}\n\n// src/from-window.ts\nfunction getWindowRect(win) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return createRect(getViewportRect(win, opts));\n}\nfunction getViewportRect(win, opts) {\n  const {\n    excludeScrollbar = false\n  } = opts;\n  const {\n    innerWidth,\n    innerHeight,\n    document: doc,\n    visualViewport\n  } = win;\n  const width = visualViewport?.width || innerWidth;\n  const height = visualViewport?.height || innerHeight;\n  const rect = {\n    x: 0,\n    y: 0,\n    width,\n    height\n  };\n  if (excludeScrollbar) {\n    const scrollbarWidth = innerWidth - doc.documentElement.clientWidth;\n    const scrollbarHeight = innerHeight - doc.documentElement.clientHeight;\n    rect.width -= scrollbarWidth;\n    rect.height -= scrollbarHeight;\n  }\n  return rect;\n}\n\n// src/operations.ts\nvar isSymmetric = v => \"dx\" in v || \"dy\" in v;\nfunction inset(r, i) {\n  const v = isSymmetric(i) ? {\n    left: i.dx,\n    right: i.dx,\n    top: i.dy,\n    bottom: i.dy\n  } : i;\n  const {\n    top = 0,\n    right = 0,\n    bottom = 0,\n    left = 0\n  } = v;\n  return createRect({\n    x: r.x + left,\n    y: r.y + top,\n    width: r.width - left - right,\n    height: r.height - top - bottom\n  });\n}\nfunction expand(r, v) {\n  const value = typeof v === \"number\" ? {\n    dx: -v,\n    dy: -v\n  } : v;\n  return inset(r, value);\n}\nfunction shrink(r, v) {\n  const value = typeof v === \"number\" ? {\n    dx: -v,\n    dy: -v\n  } : v;\n  return inset(r, value);\n}\nfunction shift(r, o) {\n  const {\n    x = 0,\n    y = 0\n  } = o;\n  return createRect({\n    x: r.x + x,\n    y: r.y + y,\n    width: r.width,\n    height: r.height\n  });\n}\n\n// src/polygon.ts\nfunction getElementPolygon(rectValue, placement) {\n  const rect = createRect(rectValue);\n  const {\n    top,\n    right,\n    left,\n    bottom\n  } = getRectCorners(rect);\n  const [base] = placement.split(\"-\");\n  return {\n    top: [left, top, right, bottom],\n    right: [top, right, bottom, left],\n    bottom: [top, left, bottom, right],\n    left: [right, top, left, bottom]\n  }[base];\n}\nfunction isPointInPolygon(polygon, point) {\n  const {\n    x,\n    y\n  } = point;\n  let c = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) {\n      c = !c;\n    }\n  }\n  return c;\n}\nfunction createPolygonElement() {\n  const id = \"debug-polygon\";\n  const existingPolygon = document.getElementById(id);\n  if (existingPolygon) {\n    return existingPolygon;\n  }\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  Object.assign(svg.style, {\n    top: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    opacity: \"0.15\",\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    fill: \"red\"\n  });\n  const polygon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\n  polygon.setAttribute(\"id\", id);\n  polygon.setAttribute(\"points\", \"0,0 0,0\");\n  svg.appendChild(polygon);\n  document.body.appendChild(svg);\n  return polygon;\n}\nfunction debugPolygon(polygon) {\n  const el = createPolygonElement();\n  const points = polygon.map(point => `${point.x},${point.y}`).join(\" \");\n  el.setAttribute(\"points\", points);\n  return () => {\n    el.remove();\n  };\n}\n\n// src/compass.ts\nvar compassDirectionMap = {\n  n: {\n    x: 0.5,\n    y: 0\n  },\n  ne: {\n    x: 1,\n    y: 0\n  },\n  e: {\n    x: 1,\n    y: 0.5\n  },\n  se: {\n    x: 1,\n    y: 1\n  },\n  s: {\n    x: 0.5,\n    y: 1\n  },\n  sw: {\n    x: 0,\n    y: 1\n  },\n  w: {\n    x: 0,\n    y: 0.5\n  },\n  nw: {\n    x: 0,\n    y: 0\n  }\n};\nvar oppositeDirectionMap = {\n  n: \"s\",\n  ne: \"sw\",\n  e: \"w\",\n  se: \"nw\",\n  s: \"n\",\n  sw: \"ne\",\n  w: \"e\",\n  nw: \"se\"\n};\n\n// src/resize.ts\nvar {\n  sign,\n  abs,\n  min: min2\n} = Math;\nfunction getRectExtentPoint(rect, direction) {\n  const {\n    minX,\n    minY,\n    maxX,\n    maxY,\n    midX,\n    midY\n  } = rect;\n  const x = direction.includes(\"w\") ? minX : direction.includes(\"e\") ? maxX : midX;\n  const y = direction.includes(\"n\") ? minY : direction.includes(\"s\") ? maxY : midY;\n  return {\n    x,\n    y\n  };\n}\nfunction getOppositeDirection(direction) {\n  return oppositeDirectionMap[direction];\n}\nfunction resizeRect(rect, offset, direction, opts) {\n  const {\n    scalingOriginMode,\n    lockAspectRatio\n  } = opts;\n  const extent = getRectExtentPoint(rect, direction);\n  const oppositeDirection = getOppositeDirection(direction);\n  const oppositeExtent = getRectExtentPoint(rect, oppositeDirection);\n  if (scalingOriginMode === \"center\") {\n    offset = {\n      x: offset.x * 2,\n      y: offset.y * 2\n    };\n  }\n  const newExtent = {\n    x: extent.x + offset.x,\n    y: extent.y + offset.y\n  };\n  const multiplier = {\n    x: compassDirectionMap[direction].x * 2 - 1,\n    y: compassDirectionMap[direction].y * 2 - 1\n  };\n  const newSize = {\n    width: newExtent.x - oppositeExtent.x,\n    height: newExtent.y - oppositeExtent.y\n  };\n  const scaleX = multiplier.x * newSize.width / rect.width;\n  const scaleY = multiplier.y * newSize.height / rect.height;\n  const largestMagnitude = abs(scaleX) > abs(scaleY) ? scaleX : scaleY;\n  const scale = lockAspectRatio ? {\n    x: largestMagnitude,\n    y: largestMagnitude\n  } : {\n    x: extent.x === oppositeExtent.x ? 1 : scaleX,\n    y: extent.y === oppositeExtent.y ? 1 : scaleY\n  };\n  if (extent.y === oppositeExtent.y) {\n    scale.y = abs(scale.y);\n  } else if (sign(scale.y) !== sign(scaleY)) {\n    scale.y *= -1;\n  }\n  if (extent.x === oppositeExtent.x) {\n    scale.x = abs(scale.x);\n  } else if (sign(scale.x) !== sign(scaleX)) {\n    scale.x *= -1;\n  }\n  switch (scalingOriginMode) {\n    case \"extent\":\n      return transformRect(rect, AffineTransform.scale(scale.x, scale.y, oppositeExtent), false);\n    case \"center\":\n      return transformRect(rect, AffineTransform.scale(scale.x, scale.y, {\n        x: rect.midX,\n        y: rect.midY\n      }), false);\n  }\n}\nfunction createRectFromPoints(initialPoint, finalPoint) {\n  let normalized = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (normalized) {\n    return {\n      x: min2(finalPoint.x, initialPoint.x),\n      y: min2(finalPoint.y, initialPoint.y),\n      width: abs(finalPoint.x - initialPoint.x),\n      height: abs(finalPoint.y - initialPoint.y)\n    };\n  }\n  return {\n    x: initialPoint.x,\n    y: initialPoint.y,\n    width: finalPoint.x - initialPoint.x,\n    height: finalPoint.y - initialPoint.y\n  };\n}\nfunction transformRect(rect, transform) {\n  let normalized = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  const p1 = transform.applyTo({\n    x: rect.minX,\n    y: rect.minY\n  });\n  const p2 = transform.applyTo({\n    x: rect.maxX,\n    y: rect.maxY\n  });\n  return createRectFromPoints(p1, p2, normalized);\n}\nexport { AffineTransform, addPoints, alignRect, clampPoint, clampSize, closest, closestSideToPoint, closestSideToRect, collisions, constrainRect, contains, containsPoint, containsRect, createPoint, createRect, debugPolygon, distance, distanceBtwEdges, distanceFromPoint, distanceFromRect, expand, fromRange, getElementPolygon, getElementRect, getRectCenters, getRectCorners, getRectEdges, getRectFromPoints, getRotationRect, getViewportRect, getWindowRect, inset, intersection, intersects, isPoint, isPointEqual, isPointInPolygon, isRect, isRectEqual, isSizeEqual, isSymmetric, resizeRect, rotate, shift, shrink, subtractPoints, toRad, union };","map":{"version":3,"names":["__defProp","Object","defineProperty","__defNormalProp","obj","key","value","enumerable","configurable","writable","__publicField","AffineTransform","_AffineTransform","constructor","_this","m00","m01","m02","m10","m11","m12","arguments","length","undefined","prepend","rotate","scale","translate","applyTo","point","x","y","other","append","determinant","isInvertible","det","isFinite","invert","array","float32Array","Float32Array","identity","theta","origin","rotation","Math","cos","sin","multiply","sx","sy","tx","ty","_len","_ref","Array","_key","first","rest","reduce","result","item","a","b","c","d","scaleComponents","translationComponents","skewComponents","toString","hAlign","ref","h","minX","width","maxX","midX","vAlign","v","minY","height","maxY","midY","alignRect","options","clamp","min3","max2","min","max","clampPoint","position","size","boundaryRect","defaultMinSize","defaultMaxSize","Infinity","clampSize","minSize","maxSize","createPoint","subtractPoints","addPoints","isPoint","Reflect","has","createRect","r","center","isRect","getRectCenters","top","right","bottom","left","getRectCorners","getRectEdges","intersects","intersection","x2","y2","collisions","distance","sqrt","pow","distanceFromPoint","p","distanceFromRect","upper","lower","distanceBtwEdges","closest","_len2","pts","_key2","ds","map","apply","indexOf","closestSideToRect","closestSideToPoint","dl","dr","dt","db","closest2","side","constrainRect","rect","boundary","containsPoint","containsRect","values","every","contains","isSizeEqual","isPointEqual","isRectEqual","styleCache","WeakMap","getCacheComputedStyle","el","win","ownerDocument","defaultView","window","set","getComputedStyle","get","getElementRect","opts","getClientRect","excludeScrollbar","excludeBorders","getBoundingClientRect","style","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderXWidth","sum","borderYWidth","px","scrollbarWidth","offsetWidth","clientWidth","scrollbarHeight","offsetHeight","clientHeight","parseFloat","replace","_len3","vals","_key3","sum2","getRectFromPoints","_len4","_key4","xs","ys","union","_len5","rs","_key5","pMin","pMax","fromRange","range","rects","from","getClientRects","concat","start","startContainer","nodeType","Node","TEXT_NODE","parentNode","HTMLElement","push","toRad","PI","getRotationRect","deg","rr","getWindowRect","getViewportRect","innerWidth","innerHeight","document","doc","visualViewport","documentElement","isSymmetric","inset","i","dx","dy","expand","shrink","shift","o","getElementPolygon","rectValue","placement","base","split","isPointInPolygon","polygon","j","xi","yi","xj","yj","createPolygonElement","id","existingPolygon","getElementById","svg","createElementNS","assign","opacity","pointerEvents","fill","setAttribute","appendChild","body","debugPolygon","points","join","remove","compassDirectionMap","n","ne","e","se","s","sw","w","nw","oppositeDirectionMap","sign","abs","min2","getRectExtentPoint","direction","includes","getOppositeDirection","resizeRect","offset","scalingOriginMode","lockAspectRatio","extent","oppositeDirection","oppositeExtent","newExtent","multiplier","newSize","scaleX","scaleY","largestMagnitude","transformRect","createRectFromPoints","initialPoint","finalPoint","normalized","transform","p1","p2"],"sources":["/Users/rishil/AIM-MedVisor/node_modules/@ark-ui/react/node_modules/@zag-js/rect-utils/dist/index.mjs"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n\n// src/affine-transform.ts\nvar AffineTransform = class _AffineTransform {\n  constructor([m00, m01, m02, m10, m11, m12] = [0, 0, 0, 0, 0, 0]) {\n    __publicField(this, \"m00\");\n    __publicField(this, \"m01\");\n    __publicField(this, \"m02\");\n    __publicField(this, \"m10\");\n    __publicField(this, \"m11\");\n    __publicField(this, \"m12\");\n    __publicField(this, \"rotate\", (...args) => {\n      return this.prepend(_AffineTransform.rotate(...args));\n    });\n    __publicField(this, \"scale\", (...args) => {\n      return this.prepend(_AffineTransform.scale(...args));\n    });\n    __publicField(this, \"translate\", (...args) => {\n      return this.prepend(_AffineTransform.translate(...args));\n    });\n    this.m00 = m00;\n    this.m01 = m01;\n    this.m02 = m02;\n    this.m10 = m10;\n    this.m11 = m11;\n    this.m12 = m12;\n  }\n  applyTo(point) {\n    const { x, y } = point;\n    const { m00, m01, m02, m10, m11, m12 } = this;\n    return {\n      x: m00 * x + m01 * y + m02,\n      y: m10 * x + m11 * y + m12\n    };\n  }\n  prepend(other) {\n    return new _AffineTransform([\n      this.m00 * other.m00 + this.m01 * other.m10,\n      // m00\n      this.m00 * other.m01 + this.m01 * other.m11,\n      // m01\n      this.m00 * other.m02 + this.m01 * other.m12 + this.m02,\n      // m02\n      this.m10 * other.m00 + this.m11 * other.m10,\n      // m10\n      this.m10 * other.m01 + this.m11 * other.m11,\n      // m11\n      this.m10 * other.m02 + this.m11 * other.m12 + this.m12\n      // m12\n    ]);\n  }\n  append(other) {\n    return new _AffineTransform([\n      other.m00 * this.m00 + other.m01 * this.m10,\n      // m00\n      other.m00 * this.m01 + other.m01 * this.m11,\n      // m01\n      other.m00 * this.m02 + other.m01 * this.m12 + other.m02,\n      // m02\n      other.m10 * this.m00 + other.m11 * this.m10,\n      // m10\n      other.m10 * this.m01 + other.m11 * this.m11,\n      // m11\n      other.m10 * this.m02 + other.m11 * this.m12 + other.m12\n      // m12\n    ]);\n  }\n  get determinant() {\n    return this.m00 * this.m11 - this.m01 * this.m10;\n  }\n  get isInvertible() {\n    const det = this.determinant;\n    return isFinite(det) && isFinite(this.m02) && isFinite(this.m12) && det !== 0;\n  }\n  invert() {\n    const det = this.determinant;\n    return new _AffineTransform([\n      this.m11 / det,\n      // m00\n      -this.m01 / det,\n      // m01\n      (this.m01 * this.m12 - this.m11 * this.m02) / det,\n      // m02\n      -this.m10 / det,\n      // m10\n      this.m00 / det,\n      // m11\n      (this.m10 * this.m02 - this.m00 * this.m12) / det\n      // m12\n    ]);\n  }\n  get array() {\n    return [this.m00, this.m01, this.m02, this.m10, this.m11, this.m12, 0, 0, 1];\n  }\n  get float32Array() {\n    return new Float32Array(this.array);\n  }\n  // Static\n  static get identity() {\n    return new _AffineTransform([1, 0, 0, 0, 1, 0]);\n  }\n  static rotate(theta, origin) {\n    const rotation = new _AffineTransform([Math.cos(theta), -Math.sin(theta), 0, Math.sin(theta), Math.cos(theta), 0]);\n    if (origin && (origin.x !== 0 || origin.y !== 0)) {\n      return _AffineTransform.multiply(\n        _AffineTransform.translate(origin.x, origin.y),\n        rotation,\n        _AffineTransform.translate(-origin.x, -origin.y)\n      );\n    }\n    return rotation;\n  }\n  static scale(sx, sy = sx, origin = { x: 0, y: 0 }) {\n    const scale = new _AffineTransform([sx, 0, 0, 0, sy, 0]);\n    if (origin.x !== 0 || origin.y !== 0) {\n      return _AffineTransform.multiply(\n        _AffineTransform.translate(origin.x, origin.y),\n        scale,\n        _AffineTransform.translate(-origin.x, -origin.y)\n      );\n    }\n    return scale;\n  }\n  static translate(tx, ty) {\n    return new _AffineTransform([1, 0, tx, 0, 1, ty]);\n  }\n  static multiply(...[first, ...rest]) {\n    if (!first) return _AffineTransform.identity;\n    return rest.reduce((result, item) => result.prepend(item), first);\n  }\n  get a() {\n    return this.m00;\n  }\n  get b() {\n    return this.m10;\n  }\n  get c() {\n    return this.m01;\n  }\n  get d() {\n    return this.m11;\n  }\n  get tx() {\n    return this.m02;\n  }\n  get ty() {\n    return this.m12;\n  }\n  get scaleComponents() {\n    return { x: this.a, y: this.d };\n  }\n  get translationComponents() {\n    return { x: this.tx, y: this.ty };\n  }\n  get skewComponents() {\n    return { x: this.c, y: this.b };\n  }\n  toString() {\n    return `matrix(${this.a}, ${this.b}, ${this.c}, ${this.d}, ${this.tx}, ${this.ty})`;\n  }\n};\n\n// src/align.ts\nfunction hAlign(a, ref, h) {\n  let x = ref.minX;\n  if (h === \"left-inside\") x = ref.minX;\n  if (h === \"left-outside\") x = ref.minX - ref.width;\n  if (h === \"right-inside\") x = ref.maxX - ref.width;\n  if (h === \"right-outside\") x = ref.maxX;\n  if (h === \"center\") x = ref.midX - ref.width / 2;\n  return { ...a, x };\n}\nfunction vAlign(a, ref, v) {\n  let y = ref.minY;\n  if (v === \"top-inside\") y = ref.minY;\n  if (v === \"top-outside\") y = ref.minY - a.height;\n  if (v === \"bottom-inside\") y = ref.maxY - a.height;\n  if (v === \"bottom-outside\") y = ref.maxY;\n  if (v === \"center\") y = ref.midY - a.height / 2;\n  return { ...a, y };\n}\nfunction alignRect(a, ref, options) {\n  const { h, v } = options;\n  return vAlign(hAlign(a, ref, h), ref, v);\n}\n\n// src/clamp.ts\nvar clamp = (value, min3, max2) => Math.min(Math.max(value, min3), max2);\nvar clampPoint = (position, size, boundaryRect) => {\n  const x = clamp(position.x, boundaryRect.x, boundaryRect.x + boundaryRect.width - size.width);\n  const y = clamp(position.y, boundaryRect.y, boundaryRect.y + boundaryRect.height - size.height);\n  return { x, y };\n};\nvar defaultMinSize = {\n  width: 0,\n  height: 0\n};\nvar defaultMaxSize = {\n  width: Infinity,\n  height: Infinity\n};\nvar clampSize = (size, minSize = defaultMinSize, maxSize = defaultMaxSize) => {\n  return {\n    width: Math.min(Math.max(size.width, minSize.width), maxSize.width),\n    height: Math.min(Math.max(size.height, minSize.height), maxSize.height)\n  };\n};\n\n// src/rect.ts\nvar createPoint = (x, y) => ({ x, y });\nvar subtractPoints = (a, b) => createPoint(a.x - b.x, a.y - b.y);\nvar addPoints = (a, b) => createPoint(a.x + b.x, a.y + b.y);\nfunction isPoint(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\");\n}\nfunction createRect(r) {\n  const { x, y, width, height } = r;\n  const midX = x + width / 2;\n  const midY = y + height / 2;\n  return {\n    x,\n    y,\n    width,\n    height,\n    minX: x,\n    minY: y,\n    maxX: x + width,\n    maxY: y + height,\n    midX,\n    midY,\n    center: createPoint(midX, midY)\n  };\n}\nfunction isRect(v) {\n  return Reflect.has(v, \"x\") && Reflect.has(v, \"y\") && Reflect.has(v, \"width\") && Reflect.has(v, \"height\");\n}\nfunction getRectCenters(v) {\n  const top = createPoint(v.midX, v.minY);\n  const right = createPoint(v.maxX, v.midY);\n  const bottom = createPoint(v.midX, v.maxY);\n  const left = createPoint(v.minX, v.midY);\n  return { top, right, bottom, left };\n}\nfunction getRectCorners(v) {\n  const top = createPoint(v.minX, v.minY);\n  const right = createPoint(v.maxX, v.minY);\n  const bottom = createPoint(v.maxX, v.maxY);\n  const left = createPoint(v.minX, v.maxY);\n  return { top, right, bottom, left };\n}\nfunction getRectEdges(v) {\n  const c = getRectCorners(v);\n  const top = [c.top, c.right];\n  const right = [c.right, c.bottom];\n  const bottom = [c.left, c.bottom];\n  const left = [c.top, c.left];\n  return { top, right, bottom, left };\n}\n\n// src/intersection.ts\nfunction intersects(a, b) {\n  return a.x < b.maxX && a.y < b.maxY && a.maxX > b.x && a.maxY > b.y;\n}\nfunction intersection(a, b) {\n  const x = Math.max(a.x, b.x);\n  const y = Math.max(a.y, b.y);\n  const x2 = Math.min(a.x + a.width, b.x + b.width);\n  const y2 = Math.min(a.y + a.height, b.y + b.height);\n  return createRect({ x, y, width: x2 - x, height: y2 - y });\n}\nfunction collisions(a, b) {\n  return {\n    top: a.minY <= b.minY,\n    right: a.maxX >= b.maxX,\n    bottom: a.maxY >= b.maxY,\n    left: a.minX <= b.minX\n  };\n}\n\n// src/distance.ts\nfunction distance(a, b = { x: 0, y: 0 }) {\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\nfunction distanceFromPoint(r, p) {\n  let x = 0;\n  let y = 0;\n  if (p.x < r.x) x = r.x - p.x;\n  else if (p.x > r.maxX) x = p.x - r.maxX;\n  if (p.y < r.y) y = r.y - p.y;\n  else if (p.y > r.maxY) y = p.y - r.maxY;\n  return { x, y, value: distance({ x, y }) };\n}\nfunction distanceFromRect(a, b) {\n  if (intersects(a, b)) return { x: 0, y: 0, value: 0 };\n  const left = a.x < b.x ? a : b;\n  const right = b.x < a.x ? a : b;\n  const upper = a.y < b.y ? a : b;\n  const lower = b.y < a.y ? a : b;\n  let x = left.x === right.x ? 0 : right.x - left.maxX;\n  x = Math.max(0, x);\n  let y = upper.y === lower.y ? 0 : lower.y - upper.maxY;\n  y = Math.max(0, y);\n  return { x, y, value: distance({ x, y }) };\n}\nfunction distanceBtwEdges(a, b) {\n  return {\n    left: b.x - a.x,\n    top: b.y - a.y,\n    right: a.maxX - b.maxX,\n    bottom: a.maxY - b.maxY\n  };\n}\n\n// src/closest.ts\nfunction closest(...pts) {\n  return (a) => {\n    const ds = pts.map((b) => distance(b, a));\n    const c = Math.min.apply(Math, ds);\n    return pts[ds.indexOf(c)];\n  };\n}\nfunction closestSideToRect(ref, r) {\n  if (r.maxX <= ref.minX) return \"left\";\n  if (r.minX >= ref.maxX) return \"right\";\n  if (r.maxY <= ref.minY) return \"top\";\n  if (r.minY >= ref.maxY) return \"bottom\";\n  return \"left\";\n}\nfunction closestSideToPoint(ref, p) {\n  const { x, y } = p;\n  const dl = x - ref.minX;\n  const dr = ref.maxX - x;\n  const dt = y - ref.minY;\n  const db = ref.maxY - y;\n  let closest2 = dl;\n  let side = \"left\";\n  if (dr < closest2) {\n    closest2 = dr;\n    side = \"right\";\n  }\n  if (dt < closest2) {\n    closest2 = dt;\n    side = \"top\";\n  }\n  if (db < closest2) {\n    side = \"bottom\";\n  }\n  return side;\n}\n\n// src/constrain.ts\nvar constrainRect = (rect, boundary) => {\n  const left = Math.max(boundary.x, Math.min(rect.x, boundary.x + boundary.width - rect.width));\n  const top = Math.max(boundary.y, Math.min(rect.y, boundary.y + boundary.height - rect.height));\n  return {\n    x: left,\n    y: top,\n    width: Math.min(rect.width, boundary.width),\n    height: Math.min(rect.height, boundary.height)\n  };\n};\n\n// src/contains.ts\nfunction containsPoint(r, p) {\n  return r.minX <= p.x && p.x <= r.maxX && r.minY <= p.y && p.y <= r.maxY;\n}\nfunction containsRect(a, b) {\n  return Object.values(getRectCorners(b)).every((c) => containsPoint(a, c));\n}\nfunction contains(r, v) {\n  return isRect(v) ? containsRect(r, v) : containsPoint(r, v);\n}\n\n// src/equality.ts\nvar isSizeEqual = (a, b) => {\n  return a.width === b.width && a.height === b.height;\n};\nvar isPointEqual = (a, b) => {\n  return a.x === b.x && a.y === b.y;\n};\nvar isRectEqual = (a, b) => {\n  return isPointEqual(a, b) && isSizeEqual(a, b);\n};\n\n// src/from-element.ts\nvar styleCache = /* @__PURE__ */ new WeakMap();\nfunction getCacheComputedStyle(el) {\n  if (!styleCache.has(el)) {\n    const win = el.ownerDocument.defaultView || window;\n    styleCache.set(el, win.getComputedStyle(el));\n  }\n  return styleCache.get(el);\n}\nfunction getElementRect(el, opts = {}) {\n  return createRect(getClientRect(el, opts));\n}\nfunction getClientRect(el, opts = {}) {\n  const { excludeScrollbar = false, excludeBorders = false } = opts;\n  const { x, y, width, height } = el.getBoundingClientRect();\n  const r = { x, y, width, height };\n  const style = getCacheComputedStyle(el);\n  const { borderLeftWidth, borderTopWidth, borderRightWidth, borderBottomWidth } = style;\n  const borderXWidth = sum(borderLeftWidth, borderRightWidth);\n  const borderYWidth = sum(borderTopWidth, borderBottomWidth);\n  if (excludeBorders) {\n    r.width -= borderXWidth;\n    r.height -= borderYWidth;\n    r.x += px(borderLeftWidth);\n    r.y += px(borderTopWidth);\n  }\n  if (excludeScrollbar) {\n    const scrollbarWidth = el.offsetWidth - el.clientWidth - borderXWidth;\n    const scrollbarHeight = el.offsetHeight - el.clientHeight - borderYWidth;\n    r.width -= scrollbarWidth;\n    r.height -= scrollbarHeight;\n  }\n  return r;\n}\nvar px = (v) => parseFloat(v.replace(\"px\", \"\"));\nvar sum = (...vals) => vals.reduce((sum2, v) => sum2 + (v ? px(v) : 0), 0);\n\n// src/from-points.ts\nfunction getRectFromPoints(...pts) {\n  const xs = pts.map((p) => p.x);\n  const ys = pts.map((p) => p.y);\n  const x = Math.min(...xs);\n  const y = Math.min(...ys);\n  const width = Math.max(...xs) - x;\n  const height = Math.max(...ys) - y;\n  return createRect({ x, y, width, height });\n}\n\n// src/union.ts\nvar { min, max } = Math;\nfunction union(...rs) {\n  const pMin = {\n    x: min(...rs.map((r) => r.minX)),\n    y: min(...rs.map((r) => r.minY))\n  };\n  const pMax = {\n    x: max(...rs.map((r) => r.maxX)),\n    y: max(...rs.map((r) => r.maxY))\n  };\n  return getRectFromPoints(pMin, pMax);\n}\n\n// src/from-range.ts\nfunction fromRange(range) {\n  let rs = [];\n  const rects = Array.from(range.getClientRects());\n  if (rects.length) {\n    rs = rs.concat(rects.map(createRect));\n    return union.apply(void 0, rs);\n  }\n  let start = range.startContainer;\n  if (start.nodeType === Node.TEXT_NODE) {\n    start = start.parentNode;\n  }\n  if (start instanceof HTMLElement) {\n    const r = getElementRect(start);\n    rs.push({ ...r, x: r.maxX, width: 0 });\n  }\n  return union.apply(void 0, rs);\n}\n\n// src/from-rotation.ts\nfunction toRad(d) {\n  return d % 360 * Math.PI / 180;\n}\nfunction rotate(a, d, c) {\n  const r = toRad(d);\n  const sin = Math.sin(r);\n  const cos = Math.cos(r);\n  const x = a.x - c.x;\n  const y = a.y - c.y;\n  return {\n    x: c.x + x * cos - y * sin,\n    y: c.y + x * sin + y * cos\n  };\n}\nfunction getRotationRect(r, deg) {\n  const rr = Object.values(getRectCorners(r)).map((p) => rotate(p, deg, r.center));\n  const xs = rr.map((p) => p.x);\n  const ys = rr.map((p) => p.y);\n  const minX = Math.min(...xs);\n  const minY = Math.min(...ys);\n  const maxX = Math.max(...xs);\n  const maxY = Math.max(...ys);\n  return createRect({\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  });\n}\n\n// src/from-window.ts\nfunction getWindowRect(win, opts = {}) {\n  return createRect(getViewportRect(win, opts));\n}\nfunction getViewportRect(win, opts) {\n  const { excludeScrollbar = false } = opts;\n  const { innerWidth, innerHeight, document: doc, visualViewport } = win;\n  const width = visualViewport?.width || innerWidth;\n  const height = visualViewport?.height || innerHeight;\n  const rect = { x: 0, y: 0, width, height };\n  if (excludeScrollbar) {\n    const scrollbarWidth = innerWidth - doc.documentElement.clientWidth;\n    const scrollbarHeight = innerHeight - doc.documentElement.clientHeight;\n    rect.width -= scrollbarWidth;\n    rect.height -= scrollbarHeight;\n  }\n  return rect;\n}\n\n// src/operations.ts\nvar isSymmetric = (v) => \"dx\" in v || \"dy\" in v;\nfunction inset(r, i) {\n  const v = isSymmetric(i) ? { left: i.dx, right: i.dx, top: i.dy, bottom: i.dy } : i;\n  const { top = 0, right = 0, bottom = 0, left = 0 } = v;\n  return createRect({\n    x: r.x + left,\n    y: r.y + top,\n    width: r.width - left - right,\n    height: r.height - top - bottom\n  });\n}\nfunction expand(r, v) {\n  const value = typeof v === \"number\" ? { dx: -v, dy: -v } : v;\n  return inset(r, value);\n}\nfunction shrink(r, v) {\n  const value = typeof v === \"number\" ? { dx: -v, dy: -v } : v;\n  return inset(r, value);\n}\nfunction shift(r, o) {\n  const { x = 0, y = 0 } = o;\n  return createRect({\n    x: r.x + x,\n    y: r.y + y,\n    width: r.width,\n    height: r.height\n  });\n}\n\n// src/polygon.ts\nfunction getElementPolygon(rectValue, placement) {\n  const rect = createRect(rectValue);\n  const { top, right, left, bottom } = getRectCorners(rect);\n  const [base] = placement.split(\"-\");\n  return {\n    top: [left, top, right, bottom],\n    right: [top, right, bottom, left],\n    bottom: [top, left, bottom, right],\n    left: [right, top, left, bottom]\n  }[base];\n}\nfunction isPointInPolygon(polygon, point) {\n  const { x, y } = point;\n  let c = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const xi = polygon[i].x;\n    const yi = polygon[i].y;\n    const xj = polygon[j].x;\n    const yj = polygon[j].y;\n    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) {\n      c = !c;\n    }\n  }\n  return c;\n}\nfunction createPolygonElement() {\n  const id = \"debug-polygon\";\n  const existingPolygon = document.getElementById(id);\n  if (existingPolygon) {\n    return existingPolygon;\n  }\n  const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n  Object.assign(svg.style, {\n    top: \"0\",\n    left: \"0\",\n    width: \"100%\",\n    height: \"100%\",\n    opacity: \"0.15\",\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    fill: \"red\"\n  });\n  const polygon = document.createElementNS(\"http://www.w3.org/2000/svg\", \"polygon\");\n  polygon.setAttribute(\"id\", id);\n  polygon.setAttribute(\"points\", \"0,0 0,0\");\n  svg.appendChild(polygon);\n  document.body.appendChild(svg);\n  return polygon;\n}\nfunction debugPolygon(polygon) {\n  const el = createPolygonElement();\n  const points = polygon.map((point) => `${point.x},${point.y}`).join(\" \");\n  el.setAttribute(\"points\", points);\n  return () => {\n    el.remove();\n  };\n}\n\n// src/compass.ts\nvar compassDirectionMap = {\n  n: { x: 0.5, y: 0 },\n  ne: { x: 1, y: 0 },\n  e: { x: 1, y: 0.5 },\n  se: { x: 1, y: 1 },\n  s: { x: 0.5, y: 1 },\n  sw: { x: 0, y: 1 },\n  w: { x: 0, y: 0.5 },\n  nw: { x: 0, y: 0 }\n};\nvar oppositeDirectionMap = {\n  n: \"s\",\n  ne: \"sw\",\n  e: \"w\",\n  se: \"nw\",\n  s: \"n\",\n  sw: \"ne\",\n  w: \"e\",\n  nw: \"se\"\n};\n\n// src/resize.ts\nvar { sign, abs, min: min2 } = Math;\nfunction getRectExtentPoint(rect, direction) {\n  const { minX, minY, maxX, maxY, midX, midY } = rect;\n  const x = direction.includes(\"w\") ? minX : direction.includes(\"e\") ? maxX : midX;\n  const y = direction.includes(\"n\") ? minY : direction.includes(\"s\") ? maxY : midY;\n  return { x, y };\n}\nfunction getOppositeDirection(direction) {\n  return oppositeDirectionMap[direction];\n}\nfunction resizeRect(rect, offset, direction, opts) {\n  const { scalingOriginMode, lockAspectRatio } = opts;\n  const extent = getRectExtentPoint(rect, direction);\n  const oppositeDirection = getOppositeDirection(direction);\n  const oppositeExtent = getRectExtentPoint(rect, oppositeDirection);\n  if (scalingOriginMode === \"center\") {\n    offset = { x: offset.x * 2, y: offset.y * 2 };\n  }\n  const newExtent = {\n    x: extent.x + offset.x,\n    y: extent.y + offset.y\n  };\n  const multiplier = {\n    x: compassDirectionMap[direction].x * 2 - 1,\n    y: compassDirectionMap[direction].y * 2 - 1\n  };\n  const newSize = {\n    width: newExtent.x - oppositeExtent.x,\n    height: newExtent.y - oppositeExtent.y\n  };\n  const scaleX = multiplier.x * newSize.width / rect.width;\n  const scaleY = multiplier.y * newSize.height / rect.height;\n  const largestMagnitude = abs(scaleX) > abs(scaleY) ? scaleX : scaleY;\n  const scale = lockAspectRatio ? { x: largestMagnitude, y: largestMagnitude } : {\n    x: extent.x === oppositeExtent.x ? 1 : scaleX,\n    y: extent.y === oppositeExtent.y ? 1 : scaleY\n  };\n  if (extent.y === oppositeExtent.y) {\n    scale.y = abs(scale.y);\n  } else if (sign(scale.y) !== sign(scaleY)) {\n    scale.y *= -1;\n  }\n  if (extent.x === oppositeExtent.x) {\n    scale.x = abs(scale.x);\n  } else if (sign(scale.x) !== sign(scaleX)) {\n    scale.x *= -1;\n  }\n  switch (scalingOriginMode) {\n    case \"extent\":\n      return transformRect(rect, AffineTransform.scale(scale.x, scale.y, oppositeExtent), false);\n    case \"center\":\n      return transformRect(\n        rect,\n        AffineTransform.scale(scale.x, scale.y, {\n          x: rect.midX,\n          y: rect.midY\n        }),\n        false\n      );\n  }\n}\nfunction createRectFromPoints(initialPoint, finalPoint, normalized = true) {\n  if (normalized) {\n    return {\n      x: min2(finalPoint.x, initialPoint.x),\n      y: min2(finalPoint.y, initialPoint.y),\n      width: abs(finalPoint.x - initialPoint.x),\n      height: abs(finalPoint.y - initialPoint.y)\n    };\n  }\n  return {\n    x: initialPoint.x,\n    y: initialPoint.y,\n    width: finalPoint.x - initialPoint.x,\n    height: finalPoint.y - initialPoint.y\n  };\n}\nfunction transformRect(rect, transform, normalized = true) {\n  const p1 = transform.applyTo({ x: rect.minX, y: rect.minY });\n  const p2 = transform.applyTo({ x: rect.maxX, y: rect.maxY });\n  return createRectFromPoints(p1, p2, normalized);\n}\n\nexport { AffineTransform, addPoints, alignRect, clampPoint, clampSize, closest, closestSideToPoint, closestSideToRect, collisions, constrainRect, contains, containsPoint, containsRect, createPoint, createRect, debugPolygon, distance, distanceBtwEdges, distanceFromPoint, distanceFromRect, expand, fromRange, getElementPolygon, getElementRect, getRectCenters, getRectCorners, getRectEdges, getRectFromPoints, getRotationRect, getViewportRect, getWindowRect, inset, intersection, intersects, isPoint, isPointEqual, isPointInPolygon, isRect, isRectEqual, isSizeEqual, isSymmetric, resizeRect, rotate, shift, shrink, subtractPoints, toRad, union };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}