{"ast":null,"code":"'use client';\n\nimport * as numberInput from '@zag-js/number-input';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nimport { useFieldContext } from '../field/use-field-context.js';\nconst useNumberInput = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const {\n    dir\n  } = useLocaleContext();\n  const field = useFieldContext();\n  const initialContext = {\n    id: useId(),\n    ids: {\n      label: field?.ids.label,\n      input: field?.ids.control\n    },\n    disabled: field?.disabled,\n    readOnly: field?.readOnly,\n    required: field?.required,\n    invalid: field?.invalid,\n    dir,\n    getRootNode,\n    value: props.defaultValue,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    value: props.value,\n    onValueChange: useEvent(props.onValueChange, {\n      sync: true\n    }),\n    onValueInvalid: useEvent(props.onValueInvalid),\n    onFocusChange: useEvent(props.onFocusChange)\n  };\n  const [state, send] = useMachine(numberInput.machine(initialContext), {\n    context\n  });\n  return numberInput.connect(state, send, normalizeProps);\n};\nexport { useNumberInput };","map":{"version":3,"names":["numberInput","useMachine","normalizeProps","useId","useEnvironmentContext","useLocaleContext","useEvent","useFieldContext","useNumberInput","props","arguments","length","undefined","getRootNode","dir","field","initialContext","id","ids","label","input","control","disabled","readOnly","required","invalid","value","defaultValue","context","onValueChange","sync","onValueInvalid","onFocusChange","state","send","machine","connect"],"sources":["/Users/rishil/AIM-MedVisor/node_modules/@ark-ui/react/dist/components/number-input/use-number-input.js"],"sourcesContent":["'use client';\nimport * as numberInput from '@zag-js/number-input';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nimport { useFieldContext } from '../field/use-field-context.js';\n\nconst useNumberInput = (props = {}) => {\n  const { getRootNode } = useEnvironmentContext();\n  const { dir } = useLocaleContext();\n  const field = useFieldContext();\n  const initialContext = {\n    id: useId(),\n    ids: {\n      label: field?.ids.label,\n      input: field?.ids.control\n    },\n    disabled: field?.disabled,\n    readOnly: field?.readOnly,\n    required: field?.required,\n    invalid: field?.invalid,\n    dir,\n    getRootNode,\n    value: props.defaultValue,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    value: props.value,\n    onValueChange: useEvent(props.onValueChange, { sync: true }),\n    onValueInvalid: useEvent(props.onValueInvalid),\n    onFocusChange: useEvent(props.onFocusChange)\n  };\n  const [state, send] = useMachine(numberInput.machine(initialContext), { context });\n  return numberInput.connect(state, send, normalizeProps);\n};\n\nexport { useNumberInput };\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,WAAW,MAAM,sBAAsB;AACnD,SAASC,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,eAAe,QAAQ,+BAA+B;AAE/D,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAAgB;EAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAChC,MAAM;IAAEG;EAAY,CAAC,GAAGT,qBAAqB,CAAC,CAAC;EAC/C,MAAM;IAAEU;EAAI,CAAC,GAAGT,gBAAgB,CAAC,CAAC;EAClC,MAAMU,KAAK,GAAGR,eAAe,CAAC,CAAC;EAC/B,MAAMS,cAAc,GAAG;IACrBC,EAAE,EAAEd,KAAK,CAAC,CAAC;IACXe,GAAG,EAAE;MACHC,KAAK,EAAEJ,KAAK,EAAEG,GAAG,CAACC,KAAK;MACvBC,KAAK,EAAEL,KAAK,EAAEG,GAAG,CAACG;IACpB,CAAC;IACDC,QAAQ,EAAEP,KAAK,EAAEO,QAAQ;IACzBC,QAAQ,EAAER,KAAK,EAAEQ,QAAQ;IACzBC,QAAQ,EAAET,KAAK,EAAES,QAAQ;IACzBC,OAAO,EAAEV,KAAK,EAAEU,OAAO;IACvBX,GAAG;IACHD,WAAW;IACXa,KAAK,EAAEjB,KAAK,CAACkB,YAAY;IACzB,GAAGlB;EACL,CAAC;EACD,MAAMmB,OAAO,GAAG;IACd,GAAGZ,cAAc;IACjBU,KAAK,EAAEjB,KAAK,CAACiB,KAAK;IAClBG,aAAa,EAAEvB,QAAQ,CAACG,KAAK,CAACoB,aAAa,EAAE;MAAEC,IAAI,EAAE;IAAK,CAAC,CAAC;IAC5DC,cAAc,EAAEzB,QAAQ,CAACG,KAAK,CAACsB,cAAc,CAAC;IAC9CC,aAAa,EAAE1B,QAAQ,CAACG,KAAK,CAACuB,aAAa;EAC7C,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGjC,UAAU,CAACD,WAAW,CAACmC,OAAO,CAACnB,cAAc,CAAC,EAAE;IAAEY;EAAQ,CAAC,CAAC;EAClF,OAAO5B,WAAW,CAACoC,OAAO,CAACH,KAAK,EAAEC,IAAI,EAAEhC,cAAc,CAAC;AACzD,CAAC;AAED,SAASM,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}