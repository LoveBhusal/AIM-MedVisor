{"ast":null,"code":"// src/create-anatomy.ts\nvar createAnatomy = function (name) {\n  let parts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return {\n    parts: function () {\n      if (isEmpty(parts)) {\n        for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n          values[_key] = arguments[_key];\n        }\n        return createAnatomy(name, values);\n      }\n      throw new Error(\"createAnatomy().parts(...) should only be called once. Did you mean to use .extendWith(...) ?\");\n    },\n    extendWith: function () {\n      for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        values[_key2] = arguments[_key2];\n      }\n      return createAnatomy(name, [...parts, ...values]);\n    },\n    rename: newName => createAnatomy(newName, parts),\n    keys: () => parts,\n    build: () => [...new Set(parts)].reduce((prev, part) => Object.assign(prev, {\n      [part]: {\n        selector: [`&[data-scope=\"${toKebabCase(name)}\"][data-part=\"${toKebabCase(part)}\"]`, `& [data-scope=\"${toKebabCase(name)}\"][data-part=\"${toKebabCase(part)}\"]`].join(\", \"),\n        attrs: {\n          \"data-scope\": toKebabCase(name),\n          \"data-part\": toKebabCase(part)\n        }\n      }\n    }), {})\n  };\n};\nvar toKebabCase = value => value.replace(/([A-Z])([A-Z])/g, \"$1-$2\").replace(/([a-z])([A-Z])/g, \"$1-$2\").replace(/[\\s_]+/g, \"-\").toLowerCase();\nvar isEmpty = v => v.length === 0;\nexport { createAnatomy };","map":{"version":3,"names":["createAnatomy","name","parts","arguments","length","undefined","isEmpty","_len","values","Array","_key","Error","extendWith","_len2","_key2","rename","newName","keys","build","Set","reduce","prev","part","Object","assign","selector","toKebabCase","join","attrs","value","replace","toLowerCase","v"],"sources":["/Users/rishil/AIM-MedVisor/node_modules/@zag-js/steps/node_modules/@zag-js/anatomy/dist/index.mjs"],"sourcesContent":["// src/create-anatomy.ts\nvar createAnatomy = (name, parts = []) => ({\n  parts: (...values) => {\n    if (isEmpty(parts)) {\n      return createAnatomy(name, values);\n    }\n    throw new Error(\"createAnatomy().parts(...) should only be called once. Did you mean to use .extendWith(...) ?\");\n  },\n  extendWith: (...values) => createAnatomy(name, [...parts, ...values]),\n  rename: (newName) => createAnatomy(newName, parts),\n  keys: () => parts,\n  build: () => [...new Set(parts)].reduce(\n    (prev, part) => Object.assign(prev, {\n      [part]: {\n        selector: [\n          `&[data-scope=\"${toKebabCase(name)}\"][data-part=\"${toKebabCase(part)}\"]`,\n          `& [data-scope=\"${toKebabCase(name)}\"][data-part=\"${toKebabCase(part)}\"]`\n        ].join(\", \"),\n        attrs: { \"data-scope\": toKebabCase(name), \"data-part\": toKebabCase(part) }\n      }\n    }),\n    {}\n  )\n});\nvar toKebabCase = (value) => value.replace(/([A-Z])([A-Z])/g, \"$1-$2\").replace(/([a-z])([A-Z])/g, \"$1-$2\").replace(/[\\s_]+/g, \"-\").toLowerCase();\nvar isEmpty = (v) => v.length === 0;\n\nexport { createAnatomy };\n"],"mappings":"AAAA;AACA,IAAIA,aAAa,GAAG,SAAAA,CAACC,IAAI;EAAA,IAAEC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,OAAM;IACzCD,KAAK,EAAE,SAAAA,CAAA,EAAe;MACpB,IAAII,OAAO,CAACJ,KAAK,CAAC,EAAE;QAAA,SAAAK,IAAA,GAAAJ,SAAA,CAAAC,MAAA,EADXI,MAAM,OAAAC,KAAA,CAAAF,IAAA,GAAAG,IAAA,MAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA;UAANF,MAAM,CAAAE,IAAA,IAAAP,SAAA,CAAAO,IAAA;QAAA;QAEb,OAAOV,aAAa,CAACC,IAAI,EAAEO,MAAM,CAAC;MACpC;MACA,MAAM,IAAIG,KAAK,CAAC,+FAA+F,CAAC;IAClH,CAAC;IACDC,UAAU,EAAE,SAAAA,CAAA;MAAA,SAAAC,KAAA,GAAAV,SAAA,CAAAC,MAAA,EAAII,MAAM,OAAAC,KAAA,CAAAI,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;QAANN,MAAM,CAAAM,KAAA,IAAAX,SAAA,CAAAW,KAAA;MAAA;MAAA,OAAKd,aAAa,CAACC,IAAI,EAAE,CAAC,GAAGC,KAAK,EAAE,GAAGM,MAAM,CAAC,CAAC;IAAA;IACrEO,MAAM,EAAGC,OAAO,IAAKhB,aAAa,CAACgB,OAAO,EAAEd,KAAK,CAAC;IAClDe,IAAI,EAAEA,CAAA,KAAMf,KAAK;IACjBgB,KAAK,EAAEA,CAAA,KAAM,CAAC,GAAG,IAAIC,GAAG,CAACjB,KAAK,CAAC,CAAC,CAACkB,MAAM,CACrC,CAACC,IAAI,EAAEC,IAAI,KAAKC,MAAM,CAACC,MAAM,CAACH,IAAI,EAAE;MAClC,CAACC,IAAI,GAAG;QACNG,QAAQ,EAAE,CACR,iBAAiBC,WAAW,CAACzB,IAAI,CAAC,iBAAiByB,WAAW,CAACJ,IAAI,CAAC,IAAI,EACxE,kBAAkBI,WAAW,CAACzB,IAAI,CAAC,iBAAiByB,WAAW,CAACJ,IAAI,CAAC,IAAI,CAC1E,CAACK,IAAI,CAAC,IAAI,CAAC;QACZC,KAAK,EAAE;UAAE,YAAY,EAAEF,WAAW,CAACzB,IAAI,CAAC;UAAE,WAAW,EAAEyB,WAAW,CAACJ,IAAI;QAAE;MAC3E;IACF,CAAC,CAAC,EACF,CAAC,CACH;EACF,CAAC;AAAA,CAAC;AACF,IAAII,WAAW,GAAIG,KAAK,IAAKA,KAAK,CAACC,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAACA,OAAO,CAAC,iBAAiB,EAAE,OAAO,CAAC,CAACA,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC;AAChJ,IAAIzB,OAAO,GAAI0B,CAAC,IAAKA,CAAC,CAAC5B,MAAM,KAAK,CAAC;AAEnC,SAASJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}