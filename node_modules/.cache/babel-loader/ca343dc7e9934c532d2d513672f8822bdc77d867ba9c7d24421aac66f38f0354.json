{"ast":null,"code":"'use client';\n\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as steps from '@zag-js/steps';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nfunction useSteps() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const {\n    dir\n  } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    getRootNode,\n    step: props.defaultStep,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    step: props.step,\n    onStepChange: useEvent(props.onStepChange),\n    onStepComplete: useEvent(props.onStepComplete)\n  };\n  const [state, send] = useMachine(steps.machine(initialContext), {\n    context\n  });\n  return steps.connect(state, send, normalizeProps);\n}\nexport { useSteps };","map":{"version":3,"names":["useMachine","normalizeProps","steps","useId","useEnvironmentContext","useLocaleContext","useEvent","useSteps","props","arguments","length","undefined","getRootNode","dir","initialContext","id","step","defaultStep","context","onStepChange","onStepComplete","state","send","machine","connect"],"sources":["/Users/rishil/AIM-MedVisor/node_modules/@ark-ui/react/dist/components/steps/use-steps.js"],"sourcesContent":["'use client';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport * as steps from '@zag-js/steps';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\n\nfunction useSteps(props = {}) {\n  const { getRootNode } = useEnvironmentContext();\n  const { dir } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    getRootNode,\n    step: props.defaultStep,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    step: props.step,\n    onStepChange: useEvent(props.onStepChange),\n    onStepComplete: useEvent(props.onStepComplete)\n  };\n  const [state, send] = useMachine(steps.machine(initialContext), {\n    context\n  });\n  return steps.connect(state, send, normalizeProps);\n}\n\nexport { useSteps };\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,OAAO,KAAKC,KAAK,MAAM,eAAe;AACtC,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,QAAQ,QAAQ,0BAA0B;AAEnD,SAASC,QAAQA,CAAA,EAAa;EAAA,IAAZC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC1B,MAAM;IAAEG;EAAY,CAAC,GAAGR,qBAAqB,CAAC,CAAC;EAC/C,MAAM;IAAES;EAAI,CAAC,GAAGR,gBAAgB,CAAC,CAAC;EAClC,MAAMS,cAAc,GAAG;IACrBC,EAAE,EAAEZ,KAAK,CAAC,CAAC;IACXU,GAAG;IACHD,WAAW;IACXI,IAAI,EAAER,KAAK,CAACS,WAAW;IACvB,GAAGT;EACL,CAAC;EACD,MAAMU,OAAO,GAAG;IACd,GAAGJ,cAAc;IACjBE,IAAI,EAAER,KAAK,CAACQ,IAAI;IAChBG,YAAY,EAAEb,QAAQ,CAACE,KAAK,CAACW,YAAY,CAAC;IAC1CC,cAAc,EAAEd,QAAQ,CAACE,KAAK,CAACY,cAAc;EAC/C,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGtB,UAAU,CAACE,KAAK,CAACqB,OAAO,CAACT,cAAc,CAAC,EAAE;IAC9DI;EACF,CAAC,CAAC;EACF,OAAOhB,KAAK,CAACsB,OAAO,CAACH,KAAK,EAAEC,IAAI,EAAErB,cAAc,CAAC;AACnD;AAEA,SAASM,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}