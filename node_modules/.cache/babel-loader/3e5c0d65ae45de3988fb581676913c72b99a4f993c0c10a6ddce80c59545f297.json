{"ast":null,"code":"import { createMachine, subscribe, guards, ref, isMachine } from '@zag-js/core';\nimport { createScope, raf, queryAll, dataAttr, contains, MAX_Z_INDEX } from '@zag-js/dom-query';\nimport { compact, warn, runIfFn, uuid } from '@zag-js/utils';\nimport { createAnatomy } from '@zag-js/anatomy';\nimport { trackDismissableBranch } from '@zag-js/dismissable';\nimport { addDomEvent } from '@zag-js/dom-event';\n\n// src/toast-group.connect.ts\nvar anatomy = createAnatomy(\"toast\").parts(\"group\", \"root\", \"title\", \"description\", \"actionTrigger\", \"closeTrigger\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRegionId: placement => `toast-group:${placement}`,\n  getRegionEl: (ctx, placement) => dom.getById(ctx, `toast-group:${placement}`),\n  getRootId: ctx => `toast:${ctx.id}`,\n  getRootEl: ctx => dom.getById(ctx, dom.getRootId(ctx)),\n  getTitleId: ctx => `toast:${ctx.id}:title`,\n  getDescriptionId: ctx => `toast:${ctx.id}:description`,\n  getCloseTriggerId: ctx => `toast${ctx.id}:close`\n});\nfunction getToastsByPlacement(toasts, placement) {\n  return toasts.filter(toast => toast.state.context.placement === placement);\n}\nvar defaultTimeouts = {\n  info: 5e3,\n  error: 5e3,\n  success: 2e3,\n  loading: Infinity,\n  DEFAULT: 5e3\n};\nfunction getToastDuration(duration, type) {\n  return duration ?? defaultTimeouts[type] ?? defaultTimeouts.DEFAULT;\n}\nfunction getGroupPlacementStyle(ctx, placement) {\n  const offset = ctx.offsets;\n  const computedOffset = typeof offset === \"string\" ? {\n    left: offset,\n    right: offset,\n    bottom: offset,\n    top: offset\n  } : offset;\n  const rtl = ctx.dir === \"rtl\";\n  const computedPlacement = placement.replace(\"-start\", rtl ? \"-right\" : \"-left\").replace(\"-end\", rtl ? \"-left\" : \"-right\");\n  const isRighty = computedPlacement.includes(\"right\");\n  const isLefty = computedPlacement.includes(\"left\");\n  const styles = {\n    position: \"fixed\",\n    pointerEvents: ctx.count > 0 ? void 0 : \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"--gap\": `${ctx.gap}px`,\n    \"--first-height\": `${ctx.heights[0]?.height || 0}px`,\n    zIndex: MAX_Z_INDEX\n  };\n  let alignItems = \"center\";\n  if (isRighty) alignItems = \"flex-end\";\n  if (isLefty) alignItems = \"flex-start\";\n  styles.alignItems = alignItems;\n  if (computedPlacement.includes(\"top\")) {\n    const offset2 = computedOffset.top;\n    styles.top = `max(env(safe-area-inset-top, 0px), ${offset2})`;\n  }\n  if (computedPlacement.includes(\"bottom\")) {\n    const offset2 = computedOffset.bottom;\n    styles.bottom = `max(env(safe-area-inset-bottom, 0px), ${offset2})`;\n  }\n  if (!computedPlacement.includes(\"left\")) {\n    const offset2 = computedOffset.right;\n    styles.insetInlineEnd = `calc(env(safe-area-inset-right, 0px) + ${offset2})`;\n  }\n  if (!computedPlacement.includes(\"right\")) {\n    const offset2 = computedOffset.left;\n    styles.insetInlineStart = `calc(env(safe-area-inset-left, 0px) + ${offset2})`;\n  }\n  return styles;\n}\nfunction getPlacementStyle(ctx, visible) {\n  const [side] = ctx.placement.split(\"-\");\n  const sibling = !ctx.frontmost;\n  const overlap = !ctx.stacked;\n  const styles = {\n    position: \"absolute\",\n    pointerEvents: \"auto\",\n    \"--opacity\": \"0\",\n    \"--remove-delay\": `${ctx.removeDelay}ms`,\n    \"--duration\": `${ctx.type === \"loading\" ? Number.MAX_SAFE_INTEGER : ctx.duration}ms`,\n    \"--initial-height\": `${ctx.height}px`,\n    \"--offset\": `${ctx.offset}px`,\n    \"--index\": ctx.index,\n    \"--z-index\": ctx.zIndex,\n    \"--lift-amount\": \"calc(var(--lift) * var(--gap))\",\n    \"--y\": \"100%\",\n    \"--x\": \"0\"\n  };\n  const assign = overrides => Object.assign(styles, overrides);\n  if (side === \"top\") {\n    assign({\n      top: \"0\",\n      \"--sign\": \"-1\",\n      \"--y\": \"-100%\",\n      \"--lift\": \"1\"\n    });\n  } else if (side === \"bottom\") {\n    assign({\n      bottom: \"0\",\n      \"--sign\": \"1\",\n      \"--y\": \"100%\",\n      \"--lift\": \"-1\"\n    });\n  }\n  if (ctx.mounted) {\n    assign({\n      \"--y\": \"0\",\n      \"--opacity\": \"1\"\n    });\n    if (ctx.stacked) {\n      assign({\n        \"--y\": \"calc(var(--lift) * var(--offset))\",\n        \"--height\": \"var(--initial-height)\"\n      });\n    }\n  }\n  if (!visible) {\n    assign({\n      \"--opacity\": \"0\",\n      pointerEvents: \"none\"\n    });\n  }\n  if (sibling && overlap) {\n    assign({\n      \"--base-scale\": \"var(--index) * 0.05 + 1\",\n      \"--y\": \"calc(var(--lift-amount) * var(--index))\",\n      \"--scale\": \"calc(-1 * var(--base-scale))\",\n      \"--height\": \"var(--first-height)\"\n    });\n    if (!visible) {\n      assign({\n        \"--y\": \"calc(var(--sign) * 40%)\"\n      });\n    }\n  }\n  if (sibling && ctx.stacked && !visible) {\n    assign({\n      \"--y\": \"calc(var(--lift) * var(--offset) + var(--lift) * -100%)\"\n    });\n  }\n  if (ctx.frontmost && !visible) {\n    assign({\n      \"--y\": \"calc(var(--lift) * -100%)\"\n    });\n  }\n  return styles;\n}\nfunction getGhostBeforeStyle(ctx, visible) {\n  const styles = {\n    position: \"absolute\",\n    inset: \"0\",\n    scale: \"1 2\",\n    pointerEvents: visible ? \"none\" : \"auto\"\n  };\n  const assign = overrides => Object.assign(styles, overrides);\n  if (ctx.frontmost && !visible) {\n    assign({\n      height: \"calc(var(--initial-height) + 80%)\"\n    });\n  }\n  return styles;\n}\nfunction getGhostAfterStyle(_ctx, _visible) {\n  return {\n    position: \"absolute\",\n    left: \"0\",\n    height: \"calc(var(--gap) + 2px)\",\n    bottom: \"100%\",\n    width: \"100%\"\n  };\n}\n\n// src/toast-group.connect.ts\nfunction groupConnect(serviceOrState, send, normalize) {\n  function getState() {\n    const result = isMachine(serviceOrState) ? serviceOrState.getState() : serviceOrState;\n    return result;\n  }\n  function getToastsByPlacementImpl(placement) {\n    return getToastsByPlacement(getState().context.toasts, placement);\n  }\n  function isVisible(id) {\n    const toasts = getState().context.toasts;\n    if (!toasts.length) return false;\n    return !!toasts.find(toast => toast.id == id);\n  }\n  function create(options) {\n    const uid = `toast:${uuid()}`;\n    const id = options.id ? options.id : uid;\n    if (isVisible(id)) return id;\n    send({\n      type: \"ADD_TOAST\",\n      toast: {\n        ...options,\n        id\n      }\n    });\n    return id;\n  }\n  function update(id, options) {\n    if (!isVisible(id)) return id;\n    send({\n      type: \"UPDATE_TOAST\",\n      id,\n      toast: options\n    });\n    return id;\n  }\n  function upsert(options) {\n    const {\n      id\n    } = options;\n    const visible = id ? isVisible(id) : false;\n    if (visible && id != null) {\n      return update(id, options);\n    } else {\n      return create(options);\n    }\n  }\n  function dismiss(id) {\n    if (id == null) {\n      send(\"DISMISS_ALL\");\n    } else if (isVisible(id)) {\n      send({\n        type: \"DISMISS_TOAST\",\n        id\n      });\n    }\n  }\n  return {\n    getCount() {\n      return getState().context.count;\n    },\n    getPlacements() {\n      const toasts = getState().context.toasts;\n      const placements = toasts.map(toast => toast.state.context.placement);\n      return Array.from(new Set(placements));\n    },\n    getToastsByPlacement: getToastsByPlacementImpl,\n    isVisible,\n    create,\n    update,\n    upsert,\n    dismiss,\n    remove(id) {\n      if (id == null) {\n        send(\"REMOVE_ALL\");\n      } else if (isVisible(id)) {\n        send({\n          type: \"REMOVE_TOAST\",\n          id\n        });\n      }\n    },\n    dismissByPlacement(placement) {\n      const toasts = getToastsByPlacementImpl(placement);\n      toasts.forEach(toast => dismiss(toast.id));\n    },\n    loading(options) {\n      return upsert({\n        ...options,\n        type: \"loading\"\n      });\n    },\n    success(options) {\n      return upsert({\n        ...options,\n        type: \"success\"\n      });\n    },\n    error(options) {\n      return upsert({\n        ...options,\n        type: \"error\"\n      });\n    },\n    promise(promise, options) {\n      let shared = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      const id = upsert({\n        ...shared,\n        ...options.loading,\n        type: \"loading\"\n      });\n      runIfFn(promise).then(response => {\n        const successOptions = runIfFn(options.success, response);\n        upsert({\n          ...shared,\n          ...successOptions,\n          id,\n          type: \"success\"\n        });\n      }).catch(error => {\n        const errorOptions = runIfFn(options.error, error);\n        upsert({\n          ...shared,\n          ...errorOptions,\n          id,\n          type: \"error\"\n        });\n      }).finally(() => {\n        options.finally?.();\n      });\n      return id;\n    },\n    pause(id) {\n      if (id == null) {\n        send(\"PAUSE_ALL\");\n      } else if (isVisible(id)) {\n        send({\n          type: \"PAUSE_TOAST\",\n          id\n        });\n      }\n    },\n    resume(id) {\n      if (id == null) {\n        send(\"RESUME_ALL\");\n      } else if (isVisible(id)) {\n        send({\n          type: \"RESUME_TOAST\",\n          id\n        });\n      }\n    },\n    getGroupProps(options) {\n      const {\n        placement,\n        label = \"Notifications\"\n      } = options;\n      const state = getState();\n      const hotkeyLabel = state.context.hotkey.join(\"+\").replace(/Key/g, \"\").replace(/Digit/g, \"\");\n      const [side, align = \"center\"] = placement.split(\"-\");\n      return normalize.element({\n        ...parts.group.attrs,\n        dir: state.context.dir,\n        tabIndex: -1,\n        \"aria-label\": `${placement} ${label} ${hotkeyLabel}`,\n        id: dom.getRegionId(placement),\n        \"data-placement\": placement,\n        \"data-side\": side,\n        \"data-align\": align,\n        \"aria-live\": \"polite\",\n        role: \"region\",\n        style: getGroupPlacementStyle(state.context, placement),\n        onMouseMove() {\n          send({\n            type: \"REGION.POINTER_ENTER\",\n            placement\n          });\n        },\n        onMouseLeave() {\n          send({\n            type: \"REGION.POINTER_LEAVE\",\n            placement\n          });\n        },\n        onFocus(event) {\n          send({\n            type: \"REGION.FOCUS\",\n            target: event.relatedTarget\n          });\n        },\n        onBlur(event) {\n          if (state.context.isFocusWithin && !contains(event.currentTarget, event.relatedTarget)) {\n            send({\n              type: \"REGION.BLUR\"\n            });\n          }\n        }\n      });\n    },\n    subscribe(fn) {\n      const state = getState();\n      return subscribe(state.context.toasts, () => {\n        const toasts = getToastsByPlacementImpl(state.context.placement);\n        const contexts = toasts.map(toast => toast.getState().context);\n        fn(contexts);\n      });\n    }\n  };\n}\nvar {\n  not,\n  and,\n  or\n} = guards;\nfunction createToastMachine(options) {\n  const {\n    type = \"info\",\n    duration,\n    id = \"1\",\n    placement = \"bottom\",\n    removeDelay = 200,\n    ...restProps\n  } = options;\n  const ctx = compact(restProps);\n  const computedDuration = getToastDuration(duration, type);\n  return createMachine({\n    id,\n    context: {\n      id,\n      type,\n      remaining: computedDuration,\n      duration: computedDuration,\n      removeDelay,\n      createdAt: Date.now(),\n      placement,\n      ...ctx,\n      height: 0,\n      offset: 0,\n      frontmost: false,\n      mounted: false,\n      index: -1,\n      zIndex: 0\n    },\n    initial: type === \"loading\" ? \"visible:persist\" : \"visible\",\n    on: {\n      UPDATE: [{\n        guard: and(\"hasTypeChanged\", \"isChangingToLoading\"),\n        target: \"visible:persist\",\n        actions: [\"setContext\"]\n      }, {\n        guard: or(\"hasDurationChanged\", \"hasTypeChanged\"),\n        target: \"visible:updating\",\n        actions: [\"setContext\"]\n      }, {\n        actions: [\"setContext\"]\n      }],\n      MEASURE: {\n        actions: [\"measureHeight\"]\n      }\n    },\n    entry: [\"invokeOnVisible\"],\n    activities: [\"trackHeight\"],\n    states: {\n      \"visible:updating\": {\n        tags: [\"visible\", \"updating\"],\n        after: {\n          0: \"visible\"\n        }\n      },\n      \"visible:persist\": {\n        tags: [\"visible\", \"paused\"],\n        on: {\n          RESUME: {\n            guard: not(\"isLoadingType\"),\n            target: \"visible\",\n            actions: [\"setCreatedAt\"]\n          },\n          DISMISS: \"dismissing\"\n        }\n      },\n      visible: {\n        tags: [\"visible\"],\n        after: {\n          VISIBLE_DURATION: \"dismissing\"\n        },\n        on: {\n          DISMISS: \"dismissing\",\n          PAUSE: {\n            target: \"visible:persist\",\n            actions: \"setRemainingDuration\"\n          }\n        }\n      },\n      dismissing: {\n        entry: \"invokeOnDismiss\",\n        after: {\n          REMOVE_DELAY: {\n            target: \"unmounted\",\n            actions: \"notifyParentToRemove\"\n          }\n        }\n      },\n      unmounted: {\n        entry: \"invokeOnUnmount\",\n        type: \"final\"\n      }\n    }\n  }, {\n    activities: {\n      trackHeight(ctx2, _evt, _ref) {\n        let {\n          self\n        } = _ref;\n        let cleanup;\n        raf(() => {\n          const rootEl = dom.getRootEl(ctx2);\n          if (!rootEl) return;\n          ctx2.mounted = true;\n          const ghosts = queryAll(rootEl, \"[data-ghost]\");\n          warn(ghosts.length !== 2, \"[toast] No ghost element found in toast. Render the `ghostBefore` and `ghostAfter` elements\");\n          const syncHeight = () => {\n            const originalHeight = rootEl.style.height;\n            rootEl.style.height = \"auto\";\n            const newHeight = rootEl.getBoundingClientRect().height;\n            rootEl.style.height = originalHeight;\n            ctx2.height = newHeight;\n            self.sendParent({\n              type: \"UPDATE_HEIGHT\",\n              id: self.id,\n              height: newHeight,\n              placement: ctx2.placement\n            });\n          };\n          syncHeight();\n          const win = dom.getWin(ctx2);\n          const observer = new win.MutationObserver(syncHeight);\n          observer.observe(rootEl, {\n            childList: true,\n            subtree: true,\n            characterData: true\n          });\n          cleanup = () => observer.disconnect();\n        });\n        return () => cleanup?.();\n      }\n    },\n    guards: {\n      isChangingToLoading: (_, evt) => evt.toast?.type === \"loading\",\n      isLoadingType: ctx2 => ctx2.type === \"loading\",\n      hasTypeChanged: (ctx2, evt) => evt.toast?.type != null && evt.toast.type !== ctx2.type,\n      hasDurationChanged: (ctx2, evt) => evt.toast?.duration != null && evt.toast.duration !== ctx2.duration\n    },\n    delays: {\n      VISIBLE_DURATION: ctx2 => ctx2.remaining,\n      REMOVE_DELAY: ctx2 => ctx2.removeDelay\n    },\n    actions: {\n      measureHeight(ctx2, _evt, _ref2) {\n        let {\n          self\n        } = _ref2;\n        raf(() => {\n          const rootEl = dom.getRootEl(ctx2);\n          if (!rootEl) return;\n          ctx2.mounted = true;\n          const originalHeight = rootEl.style.height;\n          rootEl.style.height = \"auto\";\n          const newHeight = rootEl.getBoundingClientRect().height;\n          rootEl.style.height = originalHeight;\n          ctx2.height = newHeight;\n          self.sendParent({\n            type: \"UPDATE_HEIGHT\",\n            id: self.id,\n            height: newHeight,\n            placement: ctx2.placement\n          });\n        });\n      },\n      setRemainingDuration(ctx2) {\n        ctx2.remaining -= Date.now() - ctx2.createdAt;\n      },\n      setCreatedAt(ctx2) {\n        ctx2.createdAt = Date.now();\n      },\n      notifyParentToRemove(_ctx, _evt, _ref3) {\n        let {\n          self\n        } = _ref3;\n        self.sendParent({\n          type: \"REMOVE_TOAST\",\n          id: self.id\n        });\n      },\n      invokeOnDismiss(ctx2) {\n        ctx2.onStatusChange?.({\n          status: \"dismissing\"\n        });\n      },\n      invokeOnUnmount(ctx2) {\n        ctx2.onStatusChange?.({\n          status: \"unmounted\"\n        });\n      },\n      invokeOnVisible(ctx2) {\n        ctx2.onStatusChange?.({\n          status: \"visible\"\n        });\n      },\n      setContext(ctx2, evt) {\n        const duration2 = evt.toast?.duration;\n        const type2 = evt.toast?.type ?? ctx2.type;\n        const computedDuration2 = getToastDuration(duration2, type2);\n        Object.assign(ctx2, {\n          ...evt.toast,\n          duration: computedDuration2,\n          remaining: computedDuration2\n        });\n      }\n    }\n  });\n}\n\n// src/toast-group.machine.ts\nfunction groupMachine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"toaster\",\n    initial: ctx.overlap ? \"overlap\" : \"stack\",\n    context: {\n      dir: \"ltr\",\n      max: Number.MAX_SAFE_INTEGER,\n      gap: 16,\n      pauseOnPageIdle: false,\n      hotkey: [\"altKey\", \"KeyT\"],\n      offsets: \"1rem\",\n      placement: \"bottom\",\n      removeDelay: 200,\n      ...ctx,\n      toasts: [],\n      lastFocusedEl: null,\n      isFocusWithin: false,\n      heights: []\n    },\n    computed: {\n      count: ctx2 => ctx2.toasts.length\n    },\n    activities: [\"trackDocumentVisibility\", \"trackHotKeyPress\"],\n    watch: {\n      toasts: [\"collapsedIfEmpty\", \"setDismissableBranch\"]\n    },\n    exit: [\"removeToasts\", \"clearDismissableBranch\", \"clearLastFocusedEl\"],\n    on: {\n      PAUSE_TOAST: {\n        actions: [\"pauseToast\"]\n      },\n      PAUSE_ALL: {\n        actions: [\"pauseToasts\"]\n      },\n      RESUME_TOAST: {\n        actions: [\"resumeToast\"]\n      },\n      RESUME_ALL: {\n        actions: [\"resumeToasts\"]\n      },\n      ADD_TOAST: {\n        guard: \"isWithinRange\",\n        actions: [\"createToast\", \"syncToastIndex\"]\n      },\n      UPDATE_TOAST: {\n        actions: [\"updateToast\"]\n      },\n      DISMISS_TOAST: {\n        actions: [\"dismissToast\"]\n      },\n      DISMISS_ALL: {\n        actions: [\"dismissToasts\"]\n      },\n      REMOVE_TOAST: {\n        actions: [\"removeToast\", \"syncToastIndex\", \"syncToastOffset\"]\n      },\n      REMOVE_ALL: {\n        actions: [\"removeToasts\"]\n      },\n      UPDATE_HEIGHT: {\n        actions: [\"syncHeights\", \"syncToastOffset\"]\n      },\n      \"DOC.HOTKEY\": {\n        actions: [\"focusRegionEl\"]\n      },\n      \"REGION.BLUR\": [{\n        guard: \"isOverlapping\",\n        target: \"overlap\",\n        actions: [\"resumeToasts\", \"restoreLastFocusedEl\"]\n      }, {\n        actions: [\"resumeToasts\", \"restoreLastFocusedEl\"]\n      }]\n    },\n    states: {\n      stack: {\n        entry: [\"expandToasts\"],\n        on: {\n          \"REGION.POINTER_LEAVE\": [{\n            guard: \"isOverlapping\",\n            target: \"overlap\",\n            actions: [\"resumeToasts\"]\n          }, {\n            actions: [\"resumeToasts\"]\n          }],\n          \"REGION.OVERLAP\": {\n            target: \"overlap\"\n          },\n          \"REGION.FOCUS\": {\n            actions: [\"setLastFocusedEl\", \"pauseToasts\"]\n          },\n          \"REGION.POINTER_ENTER\": {\n            actions: [\"pauseToasts\"]\n          }\n        }\n      },\n      overlap: {\n        entry: [\"collapseToasts\"],\n        on: {\n          \"REGION.STACK\": {\n            target: \"stack\"\n          },\n          \"REGION.POINTER_ENTER\": {\n            target: \"stack\",\n            actions: [\"pauseToasts\"]\n          },\n          \"REGION.FOCUS\": {\n            target: \"stack\",\n            actions: [\"setLastFocusedEl\", \"pauseToasts\"]\n          }\n        }\n      }\n    }\n  }, {\n    guards: {\n      isWithinRange: ctx2 => ctx2.toasts.length < ctx2.max,\n      isOverlapping: ctx2 => !!ctx2.overlap\n    },\n    activities: {\n      trackHotKeyPress(ctx2, _evt, _ref4) {\n        let {\n          send\n        } = _ref4;\n        const handleKeyDown = event => {\n          const isHotkeyPressed = ctx2.hotkey.every(key => event[key] || event.code === key);\n          if (!isHotkeyPressed) return;\n          send({\n            type: \"DOC.HOTKEY\"\n          });\n        };\n        return addDomEvent(document, \"keydown\", handleKeyDown, {\n          capture: true\n        });\n      },\n      trackDocumentVisibility(ctx2, _evt, _ref5) {\n        let {\n          send\n        } = _ref5;\n        if (!ctx2.pauseOnPageIdle) return;\n        const doc = dom.getDoc(ctx2);\n        return addDomEvent(doc, \"visibilitychange\", () => {\n          send(doc.visibilityState === \"hidden\" ? \"PAUSE_ALL\" : \"RESUME_ALL\");\n        });\n      }\n    },\n    actions: {\n      setDismissableBranch(ctx2) {\n        const currentToasts = getToastsByPlacement(ctx2.toasts, ctx2.placement);\n        const hasToasts = currentToasts.length > 0;\n        if (!hasToasts) {\n          ctx2._cleanup?.();\n          return;\n        }\n        if (hasToasts && ctx2._cleanup) {\n          return;\n        }\n        const groupEl = () => dom.getRegionEl(ctx2, ctx2.placement);\n        ctx2._cleanup = trackDismissableBranch(groupEl, {\n          defer: true\n        });\n      },\n      clearDismissableBranch(ctx2) {\n        ctx2._cleanup?.();\n      },\n      focusRegionEl(ctx2) {\n        queueMicrotask(() => {\n          dom.getRegionEl(ctx2, ctx2.placement)?.focus();\n        });\n      },\n      expandToasts(ctx2) {\n        each(ctx2, toast => {\n          toast.state.context.stacked = true;\n        });\n      },\n      collapseToasts(ctx2) {\n        each(ctx2, toast => {\n          toast.state.context.stacked = false;\n        });\n      },\n      collapsedIfEmpty(ctx2, _evt, _ref6) {\n        let {\n          send\n        } = _ref6;\n        if (!ctx2.overlap || ctx2.toasts.length > 1) return;\n        send(\"REGION.OVERLAP\");\n      },\n      pauseToast(_ctx, evt, _ref7) {\n        let {\n          self\n        } = _ref7;\n        self.sendChild(\"PAUSE\", evt.id);\n      },\n      pauseToasts(ctx2) {\n        ctx2.toasts.forEach(toast => toast.send(\"PAUSE\"));\n      },\n      resumeToast(_ctx, evt, _ref8) {\n        let {\n          self\n        } = _ref8;\n        self.sendChild(\"RESUME\", evt.id);\n      },\n      resumeToasts(ctx2) {\n        ctx2.toasts.forEach(toast => toast.send(\"RESUME\"));\n      },\n      measureToasts(ctx2) {\n        ctx2.toasts.forEach(toast => toast.send(\"MEASURE\"));\n      },\n      createToast(ctx2, evt, _ref9) {\n        let {\n          self,\n          getState\n        } = _ref9;\n        const options = {\n          placement: ctx2.placement,\n          duration: ctx2.duration,\n          removeDelay: ctx2.removeDelay,\n          ...evt.toast,\n          dir: ctx2.dir,\n          getRootNode: ctx2.getRootNode,\n          stacked: getState().matches(\"stack\")\n        };\n        const toast = createToastMachine(options);\n        const actor = self.spawn(toast);\n        ctx2.toasts = [actor, ...ctx2.toasts];\n      },\n      updateToast(_ctx, evt, _ref10) {\n        let {\n          self\n        } = _ref10;\n        self.sendChild({\n          type: \"UPDATE\",\n          toast: evt.toast\n        }, evt.id);\n      },\n      dismissToast(_ctx, evt, _ref11) {\n        let {\n          self\n        } = _ref11;\n        self.sendChild(\"DISMISS\", evt.id);\n      },\n      dismissToasts(ctx2) {\n        ctx2.toasts.forEach(toast => toast.send(\"DISMISS\"));\n      },\n      removeToast(ctx2, evt, _ref12) {\n        let {\n          self\n        } = _ref12;\n        self.stopChild(evt.id);\n        ctx2.toasts = ctx2.toasts.filter(toast => toast.id !== evt.id);\n        ctx2.heights = ctx2.heights.filter(height => height.id !== evt.id);\n      },\n      removeToasts(ctx2, _evt, _ref13) {\n        let {\n          self\n        } = _ref13;\n        ctx2.toasts.forEach(toast => self.stopChild(toast.id));\n        ctx2.toasts = [];\n        ctx2.heights = [];\n      },\n      syncHeights(ctx2, evt) {\n        const existing = ctx2.heights.find(height => height.id === evt.id);\n        if (existing) {\n          existing.height = evt.height;\n          existing.placement = evt.placement;\n        } else {\n          const newHeight = {\n            id: evt.id,\n            height: evt.height,\n            placement: evt.placement\n          };\n          ctx2.heights = [newHeight, ...ctx2.heights];\n        }\n      },\n      syncToastIndex(ctx2) {\n        each(ctx2, (toast, index, toasts) => {\n          toast.state.context.index = index;\n          toast.state.context.frontmost = index === 0;\n          toast.state.context.zIndex = toasts.length - index;\n        });\n      },\n      syncToastOffset(ctx2, evt) {\n        const placement = evt.placement ?? ctx2.placement;\n        each({\n          ...ctx2,\n          placement\n        }, toast => {\n          const heightIndex = Math.max(ctx2.heights.findIndex(height => height.id === toast.id), 0);\n          const toastsHeightBefore = ctx2.heights.reduce((prev, curr, reducerIndex) => {\n            if (reducerIndex >= heightIndex) return prev;\n            return prev + curr.height;\n          }, 0);\n          toast.state.context.offset = heightIndex * ctx2.gap + toastsHeightBefore;\n        });\n      },\n      setLastFocusedEl(ctx2, evt) {\n        if (ctx2.isFocusWithin || !evt.target) return;\n        ctx2.isFocusWithin = true;\n        ctx2.lastFocusedEl = ref(evt.target);\n      },\n      restoreLastFocusedEl(ctx2) {\n        ctx2.isFocusWithin = false;\n        if (!ctx2.lastFocusedEl) return;\n        ctx2.lastFocusedEl.focus({\n          preventScroll: true\n        });\n        ctx2.lastFocusedEl = null;\n      },\n      clearLastFocusedEl(ctx2) {\n        if (!ctx2.lastFocusedEl) return;\n        ctx2.lastFocusedEl.focus({\n          preventScroll: true\n        });\n        ctx2.lastFocusedEl = null;\n        ctx2.isFocusWithin = false;\n      }\n    }\n  });\n}\nfunction each(ctx, fn) {\n  const currentToasts = getToastsByPlacement(ctx.toasts, ctx.placement);\n  currentToasts.forEach(fn);\n}\nfunction connect(state, send, normalize) {\n  const visible = state.hasTag(\"visible\");\n  const paused = state.hasTag(\"paused\");\n  const placement = state.context.placement;\n  const type = state.context.type;\n  const [side, align = \"center\"] = placement.split(\"-\");\n  return {\n    type,\n    title: state.context.title,\n    description: state.context.description,\n    placement,\n    visible,\n    paused,\n    pause() {\n      send(\"PAUSE\");\n    },\n    resume() {\n      send(\"RESUME\");\n    },\n    dismiss() {\n      send(\"DISMISS\");\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        \"data-state\": visible ? \"open\" : \"closed\",\n        \"data-type\": type,\n        \"data-placement\": placement,\n        \"data-align\": align,\n        \"data-side\": side,\n        \"data-mounted\": dataAttr(state.context.mounted),\n        \"data-paused\": dataAttr(paused),\n        \"data-first\": dataAttr(state.context.frontmost),\n        \"data-sibling\": dataAttr(!state.context.frontmost),\n        \"data-stack\": dataAttr(state.context.stacked),\n        \"data-overlap\": dataAttr(!state.context.stacked),\n        role: \"status\",\n        \"aria-atomic\": \"true\",\n        \"aria-describedby\": state.context.description ? dom.getDescriptionId(state.context) : void 0,\n        \"aria-labelledby\": state.context.title ? dom.getTitleId(state.context) : void 0,\n        tabIndex: 0,\n        style: getPlacementStyle(state.context, visible),\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (event.key == \"Escape\") {\n            send(\"DISMISS\");\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    /* Leave a ghost div to avoid setting hover to false when transitioning out */\n    getGhostBeforeProps() {\n      return normalize.element({\n        \"data-ghost\": \"before\",\n        style: getGhostBeforeStyle(state.context, visible)\n      });\n    },\n    /* Needed to avoid setting hover to false when in between toasts */\n    getGhostAfterProps() {\n      return normalize.element({\n        \"data-ghost\": \"after\",\n        style: getGhostAfterStyle()\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        id: dom.getTitleId(state.context)\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        id: dom.getDescriptionId(state.context)\n      });\n    },\n    getActionTriggerProps() {\n      return normalize.button({\n        ...parts.actionTrigger.attrs,\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          state.context.action?.onClick?.();\n          send(\"DISMISS\");\n        }\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        id: dom.getCloseTriggerId(state.context),\n        ...parts.closeTrigger.attrs,\n        type: \"button\",\n        \"aria-label\": \"Dismiss notification\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"DISMISS\");\n        }\n      });\n    }\n  };\n}\n\n// src/index.ts\nvar group = {\n  connect: groupConnect,\n  machine: groupMachine\n};\nexport { anatomy, connect, createToastMachine as createMachine, group };","map":{"version":3,"names":["createMachine","subscribe","guards","ref","isMachine","createScope","raf","queryAll","dataAttr","contains","MAX_Z_INDEX","compact","warn","runIfFn","uuid","createAnatomy","trackDismissableBranch","addDomEvent","anatomy","parts","build","dom","getRegionId","placement","getRegionEl","ctx","getById","getRootId","id","getRootEl","getTitleId","getDescriptionId","getCloseTriggerId","getToastsByPlacement","toasts","filter","toast","state","context","defaultTimeouts","info","error","success","loading","Infinity","DEFAULT","getToastDuration","duration","type","getGroupPlacementStyle","offset","offsets","computedOffset","left","right","bottom","top","rtl","dir","computedPlacement","replace","isRighty","includes","isLefty","styles","position","pointerEvents","count","display","flexDirection","gap","heights","height","zIndex","alignItems","offset2","insetInlineEnd","insetInlineStart","getPlacementStyle","visible","side","split","sibling","frontmost","overlap","stacked","removeDelay","Number","MAX_SAFE_INTEGER","index","assign","overrides","Object","mounted","getGhostBeforeStyle","inset","scale","getGhostAfterStyle","_ctx","_visible","width","groupConnect","serviceOrState","send","normalize","getState","result","getToastsByPlacementImpl","isVisible","length","find","create","options","uid","update","upsert","dismiss","getCount","getPlacements","placements","map","Array","from","Set","remove","dismissByPlacement","forEach","promise","shared","arguments","undefined","then","response","successOptions","catch","errorOptions","finally","pause","resume","getGroupProps","label","hotkeyLabel","hotkey","join","align","element","group","attrs","tabIndex","role","style","onMouseMove","onMouseLeave","onFocus","event","target","relatedTarget","onBlur","isFocusWithin","currentTarget","fn","contexts","not","and","or","createToastMachine","restProps","computedDuration","remaining","createdAt","Date","now","initial","on","UPDATE","guard","actions","MEASURE","entry","activities","states","tags","after","RESUME","DISMISS","VISIBLE_DURATION","PAUSE","dismissing","REMOVE_DELAY","unmounted","trackHeight","ctx2","_evt","_ref","self","cleanup","rootEl","ghosts","syncHeight","originalHeight","newHeight","getBoundingClientRect","sendParent","win","getWin","observer","MutationObserver","observe","childList","subtree","characterData","disconnect","isChangingToLoading","_","evt","isLoadingType","hasTypeChanged","hasDurationChanged","delays","measureHeight","_ref2","setRemainingDuration","setCreatedAt","notifyParentToRemove","_ref3","invokeOnDismiss","onStatusChange","status","invokeOnUnmount","invokeOnVisible","setContext","duration2","type2","computedDuration2","groupMachine","userContext","max","pauseOnPageIdle","lastFocusedEl","computed","watch","exit","PAUSE_TOAST","PAUSE_ALL","RESUME_TOAST","RESUME_ALL","ADD_TOAST","UPDATE_TOAST","DISMISS_TOAST","DISMISS_ALL","REMOVE_TOAST","REMOVE_ALL","UPDATE_HEIGHT","stack","isWithinRange","isOverlapping","trackHotKeyPress","_ref4","handleKeyDown","isHotkeyPressed","every","key","code","document","capture","trackDocumentVisibility","_ref5","doc","getDoc","visibilityState","setDismissableBranch","currentToasts","hasToasts","_cleanup","groupEl","defer","clearDismissableBranch","focusRegionEl","queueMicrotask","focus","expandToasts","each","collapseToasts","collapsedIfEmpty","_ref6","pauseToast","_ref7","sendChild","pauseToasts","resumeToast","_ref8","resumeToasts","measureToasts","createToast","_ref9","getRootNode","matches","actor","spawn","updateToast","_ref10","dismissToast","_ref11","dismissToasts","removeToast","_ref12","stopChild","removeToasts","_ref13","syncHeights","existing","syncToastIndex","syncToastOffset","heightIndex","Math","findIndex","toastsHeightBefore","reduce","prev","curr","reducerIndex","setLastFocusedEl","restoreLastFocusedEl","preventScroll","clearLastFocusedEl","connect","hasTag","paused","title","description","getRootProps","root","onKeyDown","defaultPrevented","preventDefault","getGhostBeforeProps","getGhostAfterProps","getTitleProps","getDescriptionProps","getActionTriggerProps","button","actionTrigger","onClick","action","getCloseTriggerProps","closeTrigger","machine"],"sources":["/Users/rishil/AIM-MedVisor/node_modules/@ark-ui/react/node_modules/@zag-js/toast/dist/index.mjs"],"sourcesContent":["import { createMachine, subscribe, guards, ref, isMachine } from '@zag-js/core';\nimport { createScope, raf, queryAll, dataAttr, contains, MAX_Z_INDEX } from '@zag-js/dom-query';\nimport { compact, warn, runIfFn, uuid } from '@zag-js/utils';\nimport { createAnatomy } from '@zag-js/anatomy';\nimport { trackDismissableBranch } from '@zag-js/dismissable';\nimport { addDomEvent } from '@zag-js/dom-event';\n\n// src/toast-group.connect.ts\nvar anatomy = createAnatomy(\"toast\").parts(\n  \"group\",\n  \"root\",\n  \"title\",\n  \"description\",\n  \"actionTrigger\",\n  \"closeTrigger\"\n);\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRegionId: (placement) => `toast-group:${placement}`,\n  getRegionEl: (ctx, placement) => dom.getById(ctx, `toast-group:${placement}`),\n  getRootId: (ctx) => `toast:${ctx.id}`,\n  getRootEl: (ctx) => dom.getById(ctx, dom.getRootId(ctx)),\n  getTitleId: (ctx) => `toast:${ctx.id}:title`,\n  getDescriptionId: (ctx) => `toast:${ctx.id}:description`,\n  getCloseTriggerId: (ctx) => `toast${ctx.id}:close`\n});\nfunction getToastsByPlacement(toasts, placement) {\n  return toasts.filter((toast) => toast.state.context.placement === placement);\n}\nvar defaultTimeouts = {\n  info: 5e3,\n  error: 5e3,\n  success: 2e3,\n  loading: Infinity,\n  DEFAULT: 5e3\n};\nfunction getToastDuration(duration, type) {\n  return duration ?? defaultTimeouts[type] ?? defaultTimeouts.DEFAULT;\n}\nfunction getGroupPlacementStyle(ctx, placement) {\n  const offset = ctx.offsets;\n  const computedOffset = typeof offset === \"string\" ? { left: offset, right: offset, bottom: offset, top: offset } : offset;\n  const rtl = ctx.dir === \"rtl\";\n  const computedPlacement = placement.replace(\"-start\", rtl ? \"-right\" : \"-left\").replace(\"-end\", rtl ? \"-left\" : \"-right\");\n  const isRighty = computedPlacement.includes(\"right\");\n  const isLefty = computedPlacement.includes(\"left\");\n  const styles = {\n    position: \"fixed\",\n    pointerEvents: ctx.count > 0 ? void 0 : \"none\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    \"--gap\": `${ctx.gap}px`,\n    \"--first-height\": `${ctx.heights[0]?.height || 0}px`,\n    zIndex: MAX_Z_INDEX\n  };\n  let alignItems = \"center\";\n  if (isRighty) alignItems = \"flex-end\";\n  if (isLefty) alignItems = \"flex-start\";\n  styles.alignItems = alignItems;\n  if (computedPlacement.includes(\"top\")) {\n    const offset2 = computedOffset.top;\n    styles.top = `max(env(safe-area-inset-top, 0px), ${offset2})`;\n  }\n  if (computedPlacement.includes(\"bottom\")) {\n    const offset2 = computedOffset.bottom;\n    styles.bottom = `max(env(safe-area-inset-bottom, 0px), ${offset2})`;\n  }\n  if (!computedPlacement.includes(\"left\")) {\n    const offset2 = computedOffset.right;\n    styles.insetInlineEnd = `calc(env(safe-area-inset-right, 0px) + ${offset2})`;\n  }\n  if (!computedPlacement.includes(\"right\")) {\n    const offset2 = computedOffset.left;\n    styles.insetInlineStart = `calc(env(safe-area-inset-left, 0px) + ${offset2})`;\n  }\n  return styles;\n}\nfunction getPlacementStyle(ctx, visible) {\n  const [side] = ctx.placement.split(\"-\");\n  const sibling = !ctx.frontmost;\n  const overlap = !ctx.stacked;\n  const styles = {\n    position: \"absolute\",\n    pointerEvents: \"auto\",\n    \"--opacity\": \"0\",\n    \"--remove-delay\": `${ctx.removeDelay}ms`,\n    \"--duration\": `${ctx.type === \"loading\" ? Number.MAX_SAFE_INTEGER : ctx.duration}ms`,\n    \"--initial-height\": `${ctx.height}px`,\n    \"--offset\": `${ctx.offset}px`,\n    \"--index\": ctx.index,\n    \"--z-index\": ctx.zIndex,\n    \"--lift-amount\": \"calc(var(--lift) * var(--gap))\",\n    \"--y\": \"100%\",\n    \"--x\": \"0\"\n  };\n  const assign = (overrides) => Object.assign(styles, overrides);\n  if (side === \"top\") {\n    assign({\n      top: \"0\",\n      \"--sign\": \"-1\",\n      \"--y\": \"-100%\",\n      \"--lift\": \"1\"\n    });\n  } else if (side === \"bottom\") {\n    assign({\n      bottom: \"0\",\n      \"--sign\": \"1\",\n      \"--y\": \"100%\",\n      \"--lift\": \"-1\"\n    });\n  }\n  if (ctx.mounted) {\n    assign({\n      \"--y\": \"0\",\n      \"--opacity\": \"1\"\n    });\n    if (ctx.stacked) {\n      assign({\n        \"--y\": \"calc(var(--lift) * var(--offset))\",\n        \"--height\": \"var(--initial-height)\"\n      });\n    }\n  }\n  if (!visible) {\n    assign({\n      \"--opacity\": \"0\",\n      pointerEvents: \"none\"\n    });\n  }\n  if (sibling && overlap) {\n    assign({\n      \"--base-scale\": \"var(--index) * 0.05 + 1\",\n      \"--y\": \"calc(var(--lift-amount) * var(--index))\",\n      \"--scale\": \"calc(-1 * var(--base-scale))\",\n      \"--height\": \"var(--first-height)\"\n    });\n    if (!visible) {\n      assign({\n        \"--y\": \"calc(var(--sign) * 40%)\"\n      });\n    }\n  }\n  if (sibling && ctx.stacked && !visible) {\n    assign({\n      \"--y\": \"calc(var(--lift) * var(--offset) + var(--lift) * -100%)\"\n    });\n  }\n  if (ctx.frontmost && !visible) {\n    assign({\n      \"--y\": \"calc(var(--lift) * -100%)\"\n    });\n  }\n  return styles;\n}\nfunction getGhostBeforeStyle(ctx, visible) {\n  const styles = {\n    position: \"absolute\",\n    inset: \"0\",\n    scale: \"1 2\",\n    pointerEvents: visible ? \"none\" : \"auto\"\n  };\n  const assign = (overrides) => Object.assign(styles, overrides);\n  if (ctx.frontmost && !visible) {\n    assign({\n      height: \"calc(var(--initial-height) + 80%)\"\n    });\n  }\n  return styles;\n}\nfunction getGhostAfterStyle(_ctx, _visible) {\n  return {\n    position: \"absolute\",\n    left: \"0\",\n    height: \"calc(var(--gap) + 2px)\",\n    bottom: \"100%\",\n    width: \"100%\"\n  };\n}\n\n// src/toast-group.connect.ts\nfunction groupConnect(serviceOrState, send, normalize) {\n  function getState() {\n    const result = isMachine(serviceOrState) ? serviceOrState.getState() : serviceOrState;\n    return result;\n  }\n  function getToastsByPlacementImpl(placement) {\n    return getToastsByPlacement(getState().context.toasts, placement);\n  }\n  function isVisible(id) {\n    const toasts = getState().context.toasts;\n    if (!toasts.length) return false;\n    return !!toasts.find((toast) => toast.id == id);\n  }\n  function create(options) {\n    const uid = `toast:${uuid()}`;\n    const id = options.id ? options.id : uid;\n    if (isVisible(id)) return id;\n    send({ type: \"ADD_TOAST\", toast: { ...options, id } });\n    return id;\n  }\n  function update(id, options) {\n    if (!isVisible(id)) return id;\n    send({ type: \"UPDATE_TOAST\", id, toast: options });\n    return id;\n  }\n  function upsert(options) {\n    const { id } = options;\n    const visible = id ? isVisible(id) : false;\n    if (visible && id != null) {\n      return update(id, options);\n    } else {\n      return create(options);\n    }\n  }\n  function dismiss(id) {\n    if (id == null) {\n      send(\"DISMISS_ALL\");\n    } else if (isVisible(id)) {\n      send({ type: \"DISMISS_TOAST\", id });\n    }\n  }\n  return {\n    getCount() {\n      return getState().context.count;\n    },\n    getPlacements() {\n      const toasts = getState().context.toasts;\n      const placements = toasts.map((toast) => toast.state.context.placement);\n      return Array.from(new Set(placements));\n    },\n    getToastsByPlacement: getToastsByPlacementImpl,\n    isVisible,\n    create,\n    update,\n    upsert,\n    dismiss,\n    remove(id) {\n      if (id == null) {\n        send(\"REMOVE_ALL\");\n      } else if (isVisible(id)) {\n        send({ type: \"REMOVE_TOAST\", id });\n      }\n    },\n    dismissByPlacement(placement) {\n      const toasts = getToastsByPlacementImpl(placement);\n      toasts.forEach((toast) => dismiss(toast.id));\n    },\n    loading(options) {\n      return upsert({ ...options, type: \"loading\" });\n    },\n    success(options) {\n      return upsert({ ...options, type: \"success\" });\n    },\n    error(options) {\n      return upsert({ ...options, type: \"error\" });\n    },\n    promise(promise, options, shared = {}) {\n      const id = upsert({ ...shared, ...options.loading, type: \"loading\" });\n      runIfFn(promise).then((response) => {\n        const successOptions = runIfFn(options.success, response);\n        upsert({ ...shared, ...successOptions, id, type: \"success\" });\n      }).catch((error) => {\n        const errorOptions = runIfFn(options.error, error);\n        upsert({ ...shared, ...errorOptions, id, type: \"error\" });\n      }).finally(() => {\n        options.finally?.();\n      });\n      return id;\n    },\n    pause(id) {\n      if (id == null) {\n        send(\"PAUSE_ALL\");\n      } else if (isVisible(id)) {\n        send({ type: \"PAUSE_TOAST\", id });\n      }\n    },\n    resume(id) {\n      if (id == null) {\n        send(\"RESUME_ALL\");\n      } else if (isVisible(id)) {\n        send({ type: \"RESUME_TOAST\", id });\n      }\n    },\n    getGroupProps(options) {\n      const { placement, label = \"Notifications\" } = options;\n      const state = getState();\n      const hotkeyLabel = state.context.hotkey.join(\"+\").replace(/Key/g, \"\").replace(/Digit/g, \"\");\n      const [side, align = \"center\"] = placement.split(\"-\");\n      return normalize.element({\n        ...parts.group.attrs,\n        dir: state.context.dir,\n        tabIndex: -1,\n        \"aria-label\": `${placement} ${label} ${hotkeyLabel}`,\n        id: dom.getRegionId(placement),\n        \"data-placement\": placement,\n        \"data-side\": side,\n        \"data-align\": align,\n        \"aria-live\": \"polite\",\n        role: \"region\",\n        style: getGroupPlacementStyle(state.context, placement),\n        onMouseMove() {\n          send({ type: \"REGION.POINTER_ENTER\", placement });\n        },\n        onMouseLeave() {\n          send({ type: \"REGION.POINTER_LEAVE\", placement });\n        },\n        onFocus(event) {\n          send({ type: \"REGION.FOCUS\", target: event.relatedTarget });\n        },\n        onBlur(event) {\n          if (state.context.isFocusWithin && !contains(event.currentTarget, event.relatedTarget)) {\n            send({ type: \"REGION.BLUR\" });\n          }\n        }\n      });\n    },\n    subscribe(fn) {\n      const state = getState();\n      return subscribe(state.context.toasts, () => {\n        const toasts = getToastsByPlacementImpl(state.context.placement);\n        const contexts = toasts.map((toast) => toast.getState().context);\n        fn(contexts);\n      });\n    }\n  };\n}\nvar { not, and, or } = guards;\nfunction createToastMachine(options) {\n  const { type = \"info\", duration, id = \"1\", placement = \"bottom\", removeDelay = 200, ...restProps } = options;\n  const ctx = compact(restProps);\n  const computedDuration = getToastDuration(duration, type);\n  return createMachine(\n    {\n      id,\n      context: {\n        id,\n        type,\n        remaining: computedDuration,\n        duration: computedDuration,\n        removeDelay,\n        createdAt: Date.now(),\n        placement,\n        ...ctx,\n        height: 0,\n        offset: 0,\n        frontmost: false,\n        mounted: false,\n        index: -1,\n        zIndex: 0\n      },\n      initial: type === \"loading\" ? \"visible:persist\" : \"visible\",\n      on: {\n        UPDATE: [\n          {\n            guard: and(\"hasTypeChanged\", \"isChangingToLoading\"),\n            target: \"visible:persist\",\n            actions: [\"setContext\"]\n          },\n          {\n            guard: or(\"hasDurationChanged\", \"hasTypeChanged\"),\n            target: \"visible:updating\",\n            actions: [\"setContext\"]\n          },\n          {\n            actions: [\"setContext\"]\n          }\n        ],\n        MEASURE: {\n          actions: [\"measureHeight\"]\n        }\n      },\n      entry: [\"invokeOnVisible\"],\n      activities: [\"trackHeight\"],\n      states: {\n        \"visible:updating\": {\n          tags: [\"visible\", \"updating\"],\n          after: {\n            0: \"visible\"\n          }\n        },\n        \"visible:persist\": {\n          tags: [\"visible\", \"paused\"],\n          on: {\n            RESUME: {\n              guard: not(\"isLoadingType\"),\n              target: \"visible\",\n              actions: [\"setCreatedAt\"]\n            },\n            DISMISS: \"dismissing\"\n          }\n        },\n        visible: {\n          tags: [\"visible\"],\n          after: {\n            VISIBLE_DURATION: \"dismissing\"\n          },\n          on: {\n            DISMISS: \"dismissing\",\n            PAUSE: {\n              target: \"visible:persist\",\n              actions: \"setRemainingDuration\"\n            }\n          }\n        },\n        dismissing: {\n          entry: \"invokeOnDismiss\",\n          after: {\n            REMOVE_DELAY: {\n              target: \"unmounted\",\n              actions: \"notifyParentToRemove\"\n            }\n          }\n        },\n        unmounted: {\n          entry: \"invokeOnUnmount\",\n          type: \"final\"\n        }\n      }\n    },\n    {\n      activities: {\n        trackHeight(ctx2, _evt, { self }) {\n          let cleanup;\n          raf(() => {\n            const rootEl = dom.getRootEl(ctx2);\n            if (!rootEl) return;\n            ctx2.mounted = true;\n            const ghosts = queryAll(rootEl, \"[data-ghost]\");\n            warn(\n              ghosts.length !== 2,\n              \"[toast] No ghost element found in toast. Render the `ghostBefore` and `ghostAfter` elements\"\n            );\n            const syncHeight = () => {\n              const originalHeight = rootEl.style.height;\n              rootEl.style.height = \"auto\";\n              const newHeight = rootEl.getBoundingClientRect().height;\n              rootEl.style.height = originalHeight;\n              ctx2.height = newHeight;\n              self.sendParent({ type: \"UPDATE_HEIGHT\", id: self.id, height: newHeight, placement: ctx2.placement });\n            };\n            syncHeight();\n            const win = dom.getWin(ctx2);\n            const observer = new win.MutationObserver(syncHeight);\n            observer.observe(rootEl, { childList: true, subtree: true, characterData: true });\n            cleanup = () => observer.disconnect();\n          });\n          return () => cleanup?.();\n        }\n      },\n      guards: {\n        isChangingToLoading: (_, evt) => evt.toast?.type === \"loading\",\n        isLoadingType: (ctx2) => ctx2.type === \"loading\",\n        hasTypeChanged: (ctx2, evt) => evt.toast?.type != null && evt.toast.type !== ctx2.type,\n        hasDurationChanged: (ctx2, evt) => evt.toast?.duration != null && evt.toast.duration !== ctx2.duration\n      },\n      delays: {\n        VISIBLE_DURATION: (ctx2) => ctx2.remaining,\n        REMOVE_DELAY: (ctx2) => ctx2.removeDelay\n      },\n      actions: {\n        measureHeight(ctx2, _evt, { self }) {\n          raf(() => {\n            const rootEl = dom.getRootEl(ctx2);\n            if (!rootEl) return;\n            ctx2.mounted = true;\n            const originalHeight = rootEl.style.height;\n            rootEl.style.height = \"auto\";\n            const newHeight = rootEl.getBoundingClientRect().height;\n            rootEl.style.height = originalHeight;\n            ctx2.height = newHeight;\n            self.sendParent({ type: \"UPDATE_HEIGHT\", id: self.id, height: newHeight, placement: ctx2.placement });\n          });\n        },\n        setRemainingDuration(ctx2) {\n          ctx2.remaining -= Date.now() - ctx2.createdAt;\n        },\n        setCreatedAt(ctx2) {\n          ctx2.createdAt = Date.now();\n        },\n        notifyParentToRemove(_ctx, _evt, { self }) {\n          self.sendParent({ type: \"REMOVE_TOAST\", id: self.id });\n        },\n        invokeOnDismiss(ctx2) {\n          ctx2.onStatusChange?.({ status: \"dismissing\" });\n        },\n        invokeOnUnmount(ctx2) {\n          ctx2.onStatusChange?.({ status: \"unmounted\" });\n        },\n        invokeOnVisible(ctx2) {\n          ctx2.onStatusChange?.({ status: \"visible\" });\n        },\n        setContext(ctx2, evt) {\n          const duration2 = evt.toast?.duration;\n          const type2 = evt.toast?.type ?? ctx2.type;\n          const computedDuration2 = getToastDuration(duration2, type2);\n          Object.assign(ctx2, {\n            ...evt.toast,\n            duration: computedDuration2,\n            remaining: computedDuration2\n          });\n        }\n      }\n    }\n  );\n}\n\n// src/toast-group.machine.ts\nfunction groupMachine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine(\n    {\n      id: \"toaster\",\n      initial: ctx.overlap ? \"overlap\" : \"stack\",\n      context: {\n        dir: \"ltr\",\n        max: Number.MAX_SAFE_INTEGER,\n        gap: 16,\n        pauseOnPageIdle: false,\n        hotkey: [\"altKey\", \"KeyT\"],\n        offsets: \"1rem\",\n        placement: \"bottom\",\n        removeDelay: 200,\n        ...ctx,\n        toasts: [],\n        lastFocusedEl: null,\n        isFocusWithin: false,\n        heights: []\n      },\n      computed: {\n        count: (ctx2) => ctx2.toasts.length\n      },\n      activities: [\"trackDocumentVisibility\", \"trackHotKeyPress\"],\n      watch: {\n        toasts: [\"collapsedIfEmpty\", \"setDismissableBranch\"]\n      },\n      exit: [\"removeToasts\", \"clearDismissableBranch\", \"clearLastFocusedEl\"],\n      on: {\n        PAUSE_TOAST: {\n          actions: [\"pauseToast\"]\n        },\n        PAUSE_ALL: {\n          actions: [\"pauseToasts\"]\n        },\n        RESUME_TOAST: {\n          actions: [\"resumeToast\"]\n        },\n        RESUME_ALL: {\n          actions: [\"resumeToasts\"]\n        },\n        ADD_TOAST: {\n          guard: \"isWithinRange\",\n          actions: [\"createToast\", \"syncToastIndex\"]\n        },\n        UPDATE_TOAST: {\n          actions: [\"updateToast\"]\n        },\n        DISMISS_TOAST: {\n          actions: [\"dismissToast\"]\n        },\n        DISMISS_ALL: {\n          actions: [\"dismissToasts\"]\n        },\n        REMOVE_TOAST: {\n          actions: [\"removeToast\", \"syncToastIndex\", \"syncToastOffset\"]\n        },\n        REMOVE_ALL: {\n          actions: [\"removeToasts\"]\n        },\n        UPDATE_HEIGHT: {\n          actions: [\"syncHeights\", \"syncToastOffset\"]\n        },\n        \"DOC.HOTKEY\": {\n          actions: [\"focusRegionEl\"]\n        },\n        \"REGION.BLUR\": [\n          {\n            guard: \"isOverlapping\",\n            target: \"overlap\",\n            actions: [\"resumeToasts\", \"restoreLastFocusedEl\"]\n          },\n          {\n            actions: [\"resumeToasts\", \"restoreLastFocusedEl\"]\n          }\n        ]\n      },\n      states: {\n        stack: {\n          entry: [\"expandToasts\"],\n          on: {\n            \"REGION.POINTER_LEAVE\": [\n              {\n                guard: \"isOverlapping\",\n                target: \"overlap\",\n                actions: [\"resumeToasts\"]\n              },\n              {\n                actions: [\"resumeToasts\"]\n              }\n            ],\n            \"REGION.OVERLAP\": {\n              target: \"overlap\"\n            },\n            \"REGION.FOCUS\": {\n              actions: [\"setLastFocusedEl\", \"pauseToasts\"]\n            },\n            \"REGION.POINTER_ENTER\": {\n              actions: [\"pauseToasts\"]\n            }\n          }\n        },\n        overlap: {\n          entry: [\"collapseToasts\"],\n          on: {\n            \"REGION.STACK\": {\n              target: \"stack\"\n            },\n            \"REGION.POINTER_ENTER\": {\n              target: \"stack\",\n              actions: [\"pauseToasts\"]\n            },\n            \"REGION.FOCUS\": {\n              target: \"stack\",\n              actions: [\"setLastFocusedEl\", \"pauseToasts\"]\n            }\n          }\n        }\n      }\n    },\n    {\n      guards: {\n        isWithinRange: (ctx2) => ctx2.toasts.length < ctx2.max,\n        isOverlapping: (ctx2) => !!ctx2.overlap\n      },\n      activities: {\n        trackHotKeyPress(ctx2, _evt, { send }) {\n          const handleKeyDown = (event) => {\n            const isHotkeyPressed = ctx2.hotkey.every((key) => event[key] || event.code === key);\n            if (!isHotkeyPressed) return;\n            send({ type: \"DOC.HOTKEY\" });\n          };\n          return addDomEvent(document, \"keydown\", handleKeyDown, { capture: true });\n        },\n        trackDocumentVisibility(ctx2, _evt, { send }) {\n          if (!ctx2.pauseOnPageIdle) return;\n          const doc = dom.getDoc(ctx2);\n          return addDomEvent(doc, \"visibilitychange\", () => {\n            send(doc.visibilityState === \"hidden\" ? \"PAUSE_ALL\" : \"RESUME_ALL\");\n          });\n        }\n      },\n      actions: {\n        setDismissableBranch(ctx2) {\n          const currentToasts = getToastsByPlacement(ctx2.toasts, ctx2.placement);\n          const hasToasts = currentToasts.length > 0;\n          if (!hasToasts) {\n            ctx2._cleanup?.();\n            return;\n          }\n          if (hasToasts && ctx2._cleanup) {\n            return;\n          }\n          const groupEl = () => dom.getRegionEl(ctx2, ctx2.placement);\n          ctx2._cleanup = trackDismissableBranch(groupEl, { defer: true });\n        },\n        clearDismissableBranch(ctx2) {\n          ctx2._cleanup?.();\n        },\n        focusRegionEl(ctx2) {\n          queueMicrotask(() => {\n            dom.getRegionEl(ctx2, ctx2.placement)?.focus();\n          });\n        },\n        expandToasts(ctx2) {\n          each(ctx2, (toast) => {\n            toast.state.context.stacked = true;\n          });\n        },\n        collapseToasts(ctx2) {\n          each(ctx2, (toast) => {\n            toast.state.context.stacked = false;\n          });\n        },\n        collapsedIfEmpty(ctx2, _evt, { send }) {\n          if (!ctx2.overlap || ctx2.toasts.length > 1) return;\n          send(\"REGION.OVERLAP\");\n        },\n        pauseToast(_ctx, evt, { self }) {\n          self.sendChild(\"PAUSE\", evt.id);\n        },\n        pauseToasts(ctx2) {\n          ctx2.toasts.forEach((toast) => toast.send(\"PAUSE\"));\n        },\n        resumeToast(_ctx, evt, { self }) {\n          self.sendChild(\"RESUME\", evt.id);\n        },\n        resumeToasts(ctx2) {\n          ctx2.toasts.forEach((toast) => toast.send(\"RESUME\"));\n        },\n        measureToasts(ctx2) {\n          ctx2.toasts.forEach((toast) => toast.send(\"MEASURE\"));\n        },\n        createToast(ctx2, evt, { self, getState }) {\n          const options = {\n            placement: ctx2.placement,\n            duration: ctx2.duration,\n            removeDelay: ctx2.removeDelay,\n            ...evt.toast,\n            dir: ctx2.dir,\n            getRootNode: ctx2.getRootNode,\n            stacked: getState().matches(\"stack\")\n          };\n          const toast = createToastMachine(options);\n          const actor = self.spawn(toast);\n          ctx2.toasts = [actor, ...ctx2.toasts];\n        },\n        updateToast(_ctx, evt, { self }) {\n          self.sendChild({ type: \"UPDATE\", toast: evt.toast }, evt.id);\n        },\n        dismissToast(_ctx, evt, { self }) {\n          self.sendChild(\"DISMISS\", evt.id);\n        },\n        dismissToasts(ctx2) {\n          ctx2.toasts.forEach((toast) => toast.send(\"DISMISS\"));\n        },\n        removeToast(ctx2, evt, { self }) {\n          self.stopChild(evt.id);\n          ctx2.toasts = ctx2.toasts.filter((toast) => toast.id !== evt.id);\n          ctx2.heights = ctx2.heights.filter((height) => height.id !== evt.id);\n        },\n        removeToasts(ctx2, _evt, { self }) {\n          ctx2.toasts.forEach((toast) => self.stopChild(toast.id));\n          ctx2.toasts = [];\n          ctx2.heights = [];\n        },\n        syncHeights(ctx2, evt) {\n          const existing = ctx2.heights.find((height) => height.id === evt.id);\n          if (existing) {\n            existing.height = evt.height;\n            existing.placement = evt.placement;\n          } else {\n            const newHeight = { id: evt.id, height: evt.height, placement: evt.placement };\n            ctx2.heights = [newHeight, ...ctx2.heights];\n          }\n        },\n        syncToastIndex(ctx2) {\n          each(ctx2, (toast, index, toasts) => {\n            toast.state.context.index = index;\n            toast.state.context.frontmost = index === 0;\n            toast.state.context.zIndex = toasts.length - index;\n          });\n        },\n        syncToastOffset(ctx2, evt) {\n          const placement = evt.placement ?? ctx2.placement;\n          each({ ...ctx2, placement }, (toast) => {\n            const heightIndex = Math.max(\n              ctx2.heights.findIndex((height) => height.id === toast.id),\n              0\n            );\n            const toastsHeightBefore = ctx2.heights.reduce((prev, curr, reducerIndex) => {\n              if (reducerIndex >= heightIndex) return prev;\n              return prev + curr.height;\n            }, 0);\n            toast.state.context.offset = heightIndex * ctx2.gap + toastsHeightBefore;\n          });\n        },\n        setLastFocusedEl(ctx2, evt) {\n          if (ctx2.isFocusWithin || !evt.target) return;\n          ctx2.isFocusWithin = true;\n          ctx2.lastFocusedEl = ref(evt.target);\n        },\n        restoreLastFocusedEl(ctx2) {\n          ctx2.isFocusWithin = false;\n          if (!ctx2.lastFocusedEl) return;\n          ctx2.lastFocusedEl.focus({ preventScroll: true });\n          ctx2.lastFocusedEl = null;\n        },\n        clearLastFocusedEl(ctx2) {\n          if (!ctx2.lastFocusedEl) return;\n          ctx2.lastFocusedEl.focus({ preventScroll: true });\n          ctx2.lastFocusedEl = null;\n          ctx2.isFocusWithin = false;\n        }\n      }\n    }\n  );\n}\nfunction each(ctx, fn) {\n  const currentToasts = getToastsByPlacement(ctx.toasts, ctx.placement);\n  currentToasts.forEach(fn);\n}\nfunction connect(state, send, normalize) {\n  const visible = state.hasTag(\"visible\");\n  const paused = state.hasTag(\"paused\");\n  const placement = state.context.placement;\n  const type = state.context.type;\n  const [side, align = \"center\"] = placement.split(\"-\");\n  return {\n    type,\n    title: state.context.title,\n    description: state.context.description,\n    placement,\n    visible,\n    paused,\n    pause() {\n      send(\"PAUSE\");\n    },\n    resume() {\n      send(\"RESUME\");\n    },\n    dismiss() {\n      send(\"DISMISS\");\n    },\n    getRootProps() {\n      return normalize.element({\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        id: dom.getRootId(state.context),\n        \"data-state\": visible ? \"open\" : \"closed\",\n        \"data-type\": type,\n        \"data-placement\": placement,\n        \"data-align\": align,\n        \"data-side\": side,\n        \"data-mounted\": dataAttr(state.context.mounted),\n        \"data-paused\": dataAttr(paused),\n        \"data-first\": dataAttr(state.context.frontmost),\n        \"data-sibling\": dataAttr(!state.context.frontmost),\n        \"data-stack\": dataAttr(state.context.stacked),\n        \"data-overlap\": dataAttr(!state.context.stacked),\n        role: \"status\",\n        \"aria-atomic\": \"true\",\n        \"aria-describedby\": state.context.description ? dom.getDescriptionId(state.context) : void 0,\n        \"aria-labelledby\": state.context.title ? dom.getTitleId(state.context) : void 0,\n        tabIndex: 0,\n        style: getPlacementStyle(state.context, visible),\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (event.key == \"Escape\") {\n            send(\"DISMISS\");\n            event.preventDefault();\n          }\n        }\n      });\n    },\n    /* Leave a ghost div to avoid setting hover to false when transitioning out */\n    getGhostBeforeProps() {\n      return normalize.element({\n        \"data-ghost\": \"before\",\n        style: getGhostBeforeStyle(state.context, visible)\n      });\n    },\n    /* Needed to avoid setting hover to false when in between toasts */\n    getGhostAfterProps() {\n      return normalize.element({\n        \"data-ghost\": \"after\",\n        style: getGhostAfterStyle()\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        id: dom.getTitleId(state.context)\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        id: dom.getDescriptionId(state.context)\n      });\n    },\n    getActionTriggerProps() {\n      return normalize.button({\n        ...parts.actionTrigger.attrs,\n        type: \"button\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          state.context.action?.onClick?.();\n          send(\"DISMISS\");\n        }\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        id: dom.getCloseTriggerId(state.context),\n        ...parts.closeTrigger.attrs,\n        type: \"button\",\n        \"aria-label\": \"Dismiss notification\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"DISMISS\");\n        }\n      });\n    }\n  };\n}\n\n// src/index.ts\nvar group = {\n  connect: groupConnect,\n  machine: groupMachine\n};\n\nexport { anatomy, connect, createToastMachine as createMachine, group };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}