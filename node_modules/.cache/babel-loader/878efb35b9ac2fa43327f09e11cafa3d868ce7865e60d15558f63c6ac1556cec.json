{"ast":null,"code":"'use client';\n\nimport * as accordion from '@zag-js/accordion';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\nconst useAccordion = function () {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    getRootNode\n  } = useEnvironmentContext();\n  const {\n    dir\n  } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    getRootNode,\n    value: props.defaultValue,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    value: props.value,\n    onFocusChange: useEvent(props.onFocusChange),\n    onValueChange: useEvent(props.onValueChange)\n  };\n  const [state, send] = useMachine(accordion.machine(initialContext), {\n    context\n  });\n  return accordion.connect(state, send, normalizeProps);\n};\nexport { useAccordion };","map":{"version":3,"names":["accordion","useMachine","normalizeProps","useId","useEnvironmentContext","useLocaleContext","useEvent","useAccordion","props","arguments","length","undefined","getRootNode","dir","initialContext","id","value","defaultValue","context","onFocusChange","onValueChange","state","send","machine","connect"],"sources":["/Users/rishil/AIM-MedVisor/node_modules/@ark-ui/react/dist/components/accordion/use-accordion.js"],"sourcesContent":["'use client';\nimport * as accordion from '@zag-js/accordion';\nimport { useMachine, normalizeProps } from '@zag-js/react';\nimport { useId } from 'react';\nimport { useEnvironmentContext } from '../../providers/environment/use-environment-context.js';\nimport { useLocaleContext } from '../../providers/locale/use-locale-context.js';\nimport { useEvent } from '../../utils/use-event.js';\n\nconst useAccordion = (props = {}) => {\n  const { getRootNode } = useEnvironmentContext();\n  const { dir } = useLocaleContext();\n  const initialContext = {\n    id: useId(),\n    dir,\n    getRootNode,\n    value: props.defaultValue,\n    ...props\n  };\n  const context = {\n    ...initialContext,\n    value: props.value,\n    onFocusChange: useEvent(props.onFocusChange),\n    onValueChange: useEvent(props.onValueChange)\n  };\n  const [state, send] = useMachine(accordion.machine(initialContext), { context });\n  return accordion.connect(state, send, normalizeProps);\n};\n\nexport { useAccordion };\n"],"mappings":"AAAA,YAAY;;AACZ,OAAO,KAAKA,SAAS,MAAM,mBAAmB;AAC9C,SAASC,UAAU,EAAEC,cAAc,QAAQ,eAAe;AAC1D,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,qBAAqB,QAAQ,wDAAwD;AAC9F,SAASC,gBAAgB,QAAQ,8CAA8C;AAC/E,SAASC,QAAQ,QAAQ,0BAA0B;AAEnD,MAAMC,YAAY,GAAG,SAAAA,CAAA,EAAgB;EAAA,IAAfC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAC9B,MAAM;IAAEG;EAAY,CAAC,GAAGR,qBAAqB,CAAC,CAAC;EAC/C,MAAM;IAAES;EAAI,CAAC,GAAGR,gBAAgB,CAAC,CAAC;EAClC,MAAMS,cAAc,GAAG;IACrBC,EAAE,EAAEZ,KAAK,CAAC,CAAC;IACXU,GAAG;IACHD,WAAW;IACXI,KAAK,EAAER,KAAK,CAACS,YAAY;IACzB,GAAGT;EACL,CAAC;EACD,MAAMU,OAAO,GAAG;IACd,GAAGJ,cAAc;IACjBE,KAAK,EAAER,KAAK,CAACQ,KAAK;IAClBG,aAAa,EAAEb,QAAQ,CAACE,KAAK,CAACW,aAAa,CAAC;IAC5CC,aAAa,EAAEd,QAAQ,CAACE,KAAK,CAACY,aAAa;EAC7C,CAAC;EACD,MAAM,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGrB,UAAU,CAACD,SAAS,CAACuB,OAAO,CAACT,cAAc,CAAC,EAAE;IAAEI;EAAQ,CAAC,CAAC;EAChF,OAAOlB,SAAS,CAACwB,OAAO,CAACH,KAAK,EAAEC,IAAI,EAAEpB,cAAc,CAAC;AACvD,CAAC;AAED,SAASK,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}