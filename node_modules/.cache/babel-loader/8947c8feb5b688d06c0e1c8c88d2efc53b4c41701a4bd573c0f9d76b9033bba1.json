{"ast":null,"code":"import { createAnatomy } from '@zag-js/anatomy';\nimport { getEventStep, isLeftClick, getEventPoint, addDomEvent, requestPointerLock, isModifierKey } from '@zag-js/dom-event';\nimport { createScope, isSafari, MAX_Z_INDEX, dataAttr, ariaAttr, isComposingEvent, observeAttributes, raf } from '@zag-js/dom-query';\nimport { roundToDevicePixel, wrap, isAtMin, isAtMax, isWithinRange, increment, clamp, decrement } from '@zag-js/number-utils';\nimport { createMachine, choose, ref, guards } from '@zag-js/core';\nimport { trackFormControl } from '@zag-js/form-utils';\nimport { compact, callAll, isEqual } from '@zag-js/utils';\nimport { NumberParser } from '@internationalized/number';\n\n// src/number-input.anatomy.ts\nvar anatomy = createAnatomy(\"numberInput\").parts(\"root\", \"label\", \"input\", \"control\", \"valueText\", \"incrementTrigger\", \"decrementTrigger\", \"scrubber\");\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: ctx => ctx.ids?.root ?? `number-input:${ctx.id}`,\n  getInputId: ctx => ctx.ids?.input ?? `number-input:${ctx.id}:input`,\n  getIncrementTriggerId: ctx => ctx.ids?.incrementTrigger ?? `number-input:${ctx.id}:inc`,\n  getDecrementTriggerId: ctx => ctx.ids?.decrementTrigger ?? `number-input:${ctx.id}:dec`,\n  getScrubberId: ctx => ctx.ids?.scrubber ?? `number-input:${ctx.id}:scrubber`,\n  getCursorId: ctx => `number-input:${ctx.id}:cursor`,\n  getLabelId: ctx => ctx.ids?.label ?? `number-input:${ctx.id}:label`,\n  getInputEl: ctx => dom.getById(ctx, dom.getInputId(ctx)),\n  getIncrementTriggerEl: ctx => dom.getById(ctx, dom.getIncrementTriggerId(ctx)),\n  getDecrementTriggerEl: ctx => dom.getById(ctx, dom.getDecrementTriggerId(ctx)),\n  getScrubberEl: ctx => dom.getById(ctx, dom.getScrubberId(ctx)),\n  getCursorEl: ctx => dom.getDoc(ctx).getElementById(dom.getCursorId(ctx)),\n  getPressedTriggerEl: function (ctx) {\n    let hint = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ctx.hint;\n    let btnEl = null;\n    if (hint === \"increment\") {\n      btnEl = dom.getIncrementTriggerEl(ctx);\n    }\n    if (hint === \"decrement\") {\n      btnEl = dom.getDecrementTriggerEl(ctx);\n    }\n    return btnEl;\n  },\n  setupVirtualCursor(ctx) {\n    if (isSafari()) return;\n    dom.createVirtualCursor(ctx);\n    return () => {\n      dom.getCursorEl(ctx)?.remove();\n    };\n  },\n  preventTextSelection(ctx) {\n    const doc = dom.getDoc(ctx);\n    const html = doc.documentElement;\n    const body = doc.body;\n    body.style.pointerEvents = \"none\";\n    html.style.userSelect = \"none\";\n    html.style.cursor = \"ew-resize\";\n    return () => {\n      body.style.pointerEvents = \"\";\n      html.style.userSelect = \"\";\n      html.style.cursor = \"\";\n      if (!html.style.length) {\n        html.removeAttribute(\"style\");\n      }\n      if (!body.style.length) {\n        body.removeAttribute(\"style\");\n      }\n    };\n  },\n  getMousementValue(ctx, event) {\n    const x = roundToDevicePixel(event.movementX);\n    const y = roundToDevicePixel(event.movementY);\n    let hint = x > 0 ? \"increment\" : x < 0 ? \"decrement\" : null;\n    if (ctx.isRtl && hint === \"increment\") hint = \"decrement\";\n    if (ctx.isRtl && hint === \"decrement\") hint = \"increment\";\n    const point = {\n      x: ctx.scrubberCursorPoint.x + x,\n      y: ctx.scrubberCursorPoint.y + y\n    };\n    const win = dom.getWin(ctx);\n    const width = win.innerWidth;\n    const half = roundToDevicePixel(7.5);\n    point.x = wrap(point.x + half, width) - half;\n    return {\n      hint,\n      point\n    };\n  },\n  createVirtualCursor(ctx) {\n    const doc = dom.getDoc(ctx);\n    const el = doc.createElement(\"div\");\n    el.className = \"scrubber--cursor\";\n    el.id = dom.getCursorId(ctx);\n    Object.assign(el.style, {\n      width: \"15px\",\n      height: \"15px\",\n      position: \"fixed\",\n      pointerEvents: \"none\",\n      left: \"0px\",\n      top: \"0px\",\n      zIndex: MAX_Z_INDEX,\n      transform: ctx.scrubberCursorPoint ? `translate3d(${ctx.scrubberCursorPoint.x}px, ${ctx.scrubberCursorPoint.y}px, 0px)` : void 0,\n      willChange: \"transform\"\n    });\n    el.innerHTML = `\n        <svg width=\"46\" height=\"15\" style=\"left: -15.5px; position: absolute; top: 0; filter: drop-shadow(rgba(0, 0, 0, 0.4) 0px 1px 1.1px);\">\n          <g transform=\"translate(2 3)\">\n            <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\" style=\"stroke-width: 2px; stroke: white;\"></path>\n            <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\"></path>\n          </g>\n        </svg>`;\n    doc.body.appendChild(el);\n  }\n});\n\n// src/number-input.connect.ts\nfunction connect(state, send, normalize) {\n  const focused = state.hasTag(\"focus\");\n  const disabled = state.context.isDisabled;\n  const readOnly = state.context.readOnly;\n  const empty = state.context.isValueEmpty;\n  const invalid = state.context.isOutOfRange || !!state.context.invalid;\n  const isIncrementDisabled = disabled || !state.context.canIncrement || readOnly;\n  const isDecrementDisabled = disabled || !state.context.canDecrement || readOnly;\n  const translations = state.context.translations;\n  return {\n    focused,\n    invalid,\n    empty,\n    value: state.context.formattedValue,\n    valueAsNumber: state.context.valueAsNumber,\n    setValue(value) {\n      send({\n        type: \"VALUE.SET\",\n        value\n      });\n    },\n    clearValue() {\n      send(\"VALUE.CLEAR\");\n    },\n    increment() {\n      send(\"VALUE.INCREMENT\");\n    },\n    decrement() {\n      send(\"VALUE.DECREMENT\");\n    },\n    setToMax() {\n      send({\n        type: \"VALUE.SET\",\n        value: state.context.max\n      });\n    },\n    setToMin() {\n      send({\n        type: \"VALUE.SET\",\n        value: state.context.min\n      });\n    },\n    focus() {\n      dom.getInputEl(state.context)?.focus();\n    },\n    getRootProps() {\n      return normalize.element({\n        id: dom.getRootId(state.context),\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        id: dom.getLabelId(state.context),\n        htmlFor: dom.getInputId(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        role: \"group\",\n        \"aria-disabled\": disabled,\n        \"data-focus\": dataAttr(focused),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"aria-invalid\": ariaAttr(state.context.invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: state.context.dir,\n        name: state.context.name,\n        form: state.context.form,\n        id: dom.getInputId(state.context),\n        role: \"spinbutton\",\n        defaultValue: state.context.formattedValue,\n        pattern: state.context.pattern,\n        inputMode: state.context.inputMode,\n        \"aria-invalid\": ariaAttr(invalid),\n        \"data-invalid\": dataAttr(invalid),\n        disabled,\n        \"data-disabled\": dataAttr(disabled),\n        readOnly: state.context.readOnly,\n        required: state.context.required,\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        spellCheck: \"false\",\n        type: \"text\",\n        \"aria-roledescription\": \"numberfield\",\n        \"aria-valuemin\": state.context.min,\n        \"aria-valuemax\": state.context.max,\n        \"aria-valuenow\": Number.isNaN(state.context.valueAsNumber) ? void 0 : state.context.valueAsNumber,\n        \"aria-valuetext\": state.context.valueText,\n        onFocus() {\n          send(\"INPUT.FOCUS\");\n        },\n        onBlur() {\n          send(\"INPUT.BLUR\");\n        },\n        onChange(event) {\n          send({\n            type: \"INPUT.CHANGE\",\n            target: event.currentTarget,\n            hint: \"set\"\n          });\n        },\n        onBeforeInput(event) {\n          try {\n            const {\n              selectionStart,\n              selectionEnd,\n              value\n            } = event.currentTarget;\n            const nextValue = value.slice(0, selectionStart) + (event.data ?? \"\") + value.slice(selectionEnd);\n            const isValid = state.context.parser.isValidPartialNumber(nextValue);\n            if (!isValid) {\n              event.preventDefault();\n            }\n          } catch {}\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (readOnly) return;\n          if (isComposingEvent(event)) return;\n          const step = getEventStep(event) * state.context.step;\n          const keyMap = {\n            ArrowUp() {\n              send({\n                type: \"INPUT.ARROW_UP\",\n                step\n              });\n              event.preventDefault();\n            },\n            ArrowDown() {\n              send({\n                type: \"INPUT.ARROW_DOWN\",\n                step\n              });\n              event.preventDefault();\n            },\n            Home() {\n              if (isModifierKey(event)) return;\n              send(\"INPUT.HOME\");\n              event.preventDefault();\n            },\n            End() {\n              if (isModifierKey(event)) return;\n              send(\"INPUT.END\");\n              event.preventDefault();\n            },\n            Enter() {\n              send(\"INPUT.ENTER\");\n            }\n          };\n          const exec = keyMap[event.key];\n          exec?.(event);\n        }\n      });\n    },\n    getDecrementTriggerProps() {\n      return normalize.button({\n        ...parts.decrementTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getDecrementTriggerId(state.context),\n        disabled: isDecrementDisabled,\n        \"data-disabled\": dataAttr(isDecrementDisabled),\n        \"aria-label\": translations.decrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": dom.getInputId(state.context),\n        onPointerDown(event) {\n          if (isDecrementDisabled || !isLeftClick(event)) return;\n          send({\n            type: \"TRIGGER.PRESS_DOWN\",\n            hint: \"decrement\",\n            pointerType: event.pointerType\n          });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({\n              preventScroll: true\n            });\n          }\n        },\n        onPointerUp(event) {\n          send({\n            type: \"TRIGGER.PRESS_UP\",\n            hint: \"decrement\",\n            pointerType: event.pointerType\n          });\n        },\n        onPointerLeave() {\n          if (isDecrementDisabled) return;\n          send({\n            type: \"TRIGGER.PRESS_UP\",\n            hint: \"decrement\"\n          });\n        }\n      });\n    },\n    getIncrementTriggerProps() {\n      return normalize.button({\n        ...parts.incrementTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getIncrementTriggerId(state.context),\n        disabled: isIncrementDisabled,\n        \"data-disabled\": dataAttr(isIncrementDisabled),\n        \"aria-label\": translations.incrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": dom.getInputId(state.context),\n        onPointerDown(event) {\n          if (isIncrementDisabled || !isLeftClick(event)) return;\n          send({\n            type: \"TRIGGER.PRESS_DOWN\",\n            hint: \"increment\",\n            pointerType: event.pointerType\n          });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({\n              preventScroll: true\n            });\n          }\n        },\n        onPointerUp(event) {\n          send({\n            type: \"TRIGGER.PRESS_UP\",\n            hint: \"increment\",\n            pointerType: event.pointerType\n          });\n        },\n        onPointerLeave(event) {\n          send({\n            type: \"TRIGGER.PRESS_UP\",\n            hint: \"increment\",\n            pointerType: event.pointerType\n          });\n        }\n      });\n    },\n    getScrubberProps() {\n      return normalize.element({\n        ...parts.scrubber.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        id: dom.getScrubberId(state.context),\n        role: \"presentation\",\n        onMouseDown(event) {\n          if (disabled) return;\n          const point = getEventPoint(event);\n          point.x = point.x - roundToDevicePixel(7.5);\n          point.y = point.y - roundToDevicePixel(7.5);\n          send({\n            type: \"SCRUBBER.PRESS_DOWN\",\n            point\n          });\n          event.preventDefault();\n        },\n        style: {\n          cursor: disabled ? void 0 : \"ew-resize\"\n        }\n      });\n    }\n  };\n}\n\n// src/cursor.ts\nfunction recordCursor(inputEl) {\n  if (inputEl.ownerDocument.activeElement !== inputEl) return;\n  try {\n    const {\n      selectionStart: start,\n      selectionEnd: end,\n      value\n    } = inputEl;\n    const beforeTxt = value.substring(0, start);\n    const afterTxt = value.substring(end);\n    return {\n      start,\n      end,\n      value,\n      beforeTxt,\n      afterTxt\n    };\n  } catch {}\n}\nfunction restoreCursor(inputEl, selection) {\n  if (inputEl.ownerDocument.activeElement !== inputEl) return;\n  if (!selection) {\n    inputEl.setSelectionRange(inputEl.value.length, inputEl.value.length);\n    return;\n  }\n  try {\n    const {\n      value\n    } = inputEl;\n    const {\n      beforeTxt = \"\",\n      afterTxt = \"\",\n      start\n    } = selection;\n    let startPos = value.length;\n    if (value.endsWith(afterTxt)) {\n      startPos = value.length - afterTxt.length;\n    } else if (value.startsWith(beforeTxt)) {\n      startPos = beforeTxt.length;\n    } else if (start != null) {\n      const beforeLastChar = beforeTxt[start - 1];\n      const newIndex = value.indexOf(beforeLastChar, start - 1);\n      if (newIndex !== -1) {\n        startPos = newIndex + 1;\n      }\n    }\n    inputEl.setSelectionRange(startPos, startPos);\n  } catch {}\n}\nvar createFormatter = function (locale) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return ref(new Intl.NumberFormat(locale, options));\n};\nvar createParser = function (locale) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return ref(new NumberParser(locale, options));\n};\nvar parseValue = (ctx, value) => {\n  if (!ctx.formatOptions) return parseFloat(value);\n  return ctx.parser.parse(String(value));\n};\nvar formatValue = (ctx, value) => {\n  if (Number.isNaN(value)) return \"\";\n  if (!ctx.formatOptions) return value.toString();\n  return ctx.formatter.format(value);\n};\n\n// src/number-input.machine.ts\nvar {\n  not,\n  and\n} = guards;\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"number-input\",\n    initial: \"idle\",\n    context: {\n      dir: \"ltr\",\n      locale: \"en-US\",\n      focusInputOnChange: true,\n      clampValueOnBlur: true,\n      allowOverflow: false,\n      inputMode: \"decimal\",\n      pattern: \"[0-9]*(.[0-9]+)?\",\n      value: \"\",\n      step: 1,\n      min: Number.MIN_SAFE_INTEGER,\n      max: Number.MAX_SAFE_INTEGER,\n      invalid: false,\n      spinOnPress: true,\n      disabled: false,\n      readOnly: false,\n      ...ctx,\n      hint: null,\n      scrubberCursorPoint: null,\n      fieldsetDisabled: false,\n      formatter: createFormatter(ctx.locale || \"en-US\", ctx.formatOptions),\n      parser: createParser(ctx.locale || \"en-US\", ctx.formatOptions),\n      translations: {\n        incrementLabel: \"increment value\",\n        decrementLabel: \"decrease value\",\n        ...ctx.translations\n      }\n    },\n    computed: {\n      isRtl: ctx2 => ctx2.dir === \"rtl\",\n      valueAsNumber: ctx2 => parseValue(ctx2, ctx2.value),\n      formattedValue: ctx2 => formatValue(ctx2, ctx2.valueAsNumber),\n      isAtMin: ctx2 => isAtMin(ctx2.valueAsNumber, ctx2),\n      isAtMax: ctx2 => isAtMax(ctx2.valueAsNumber, ctx2),\n      isOutOfRange: ctx2 => !isWithinRange(ctx2.valueAsNumber, ctx2),\n      isValueEmpty: ctx2 => ctx2.value === \"\",\n      isDisabled: ctx2 => !!ctx2.disabled || ctx2.fieldsetDisabled,\n      canIncrement: ctx2 => ctx2.allowOverflow || !ctx2.isAtMax,\n      canDecrement: ctx2 => ctx2.allowOverflow || !ctx2.isAtMin,\n      valueText: ctx2 => ctx2.translations.valueText?.(ctx2.value)\n    },\n    watch: {\n      formatOptions: [\"setFormatterAndParser\", \"syncInputElement\"],\n      locale: [\"setFormatterAndParser\", \"syncInputElement\"],\n      value: [\"syncInputElement\"],\n      isOutOfRange: [\"invokeOnInvalid\"],\n      scrubberCursorPoint: [\"setVirtualCursorPosition\"]\n    },\n    activities: [\"trackFormControl\"],\n    on: {\n      \"VALUE.SET\": {\n        actions: [\"setRawValue\", \"setHintToSet\"]\n      },\n      \"VALUE.CLEAR\": {\n        actions: [\"clearValue\"]\n      },\n      \"VALUE.INCREMENT\": {\n        actions: [\"increment\"]\n      },\n      \"VALUE.DECREMENT\": {\n        actions: [\"decrement\"]\n      }\n    },\n    states: {\n      idle: {\n        on: {\n          \"TRIGGER.PRESS_DOWN\": [{\n            guard: \"isTouchPointer\",\n            target: \"before:spin\",\n            actions: [\"setHint\"]\n          }, {\n            target: \"before:spin\",\n            actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\"]\n          }],\n          \"SCRUBBER.PRESS_DOWN\": {\n            target: \"scrubbing\",\n            actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\", \"setCursorPoint\"]\n          },\n          \"INPUT.FOCUS\": {\n            target: \"focused\",\n            actions: [\"focusInput\", \"invokeOnFocus\"]\n          }\n        }\n      },\n      focused: {\n        tags: \"focus\",\n        activities: \"attachWheelListener\",\n        on: {\n          \"TRIGGER.PRESS_DOWN\": [{\n            guard: \"isTouchPointer\",\n            target: \"before:spin\",\n            actions: [\"setHint\"]\n          }, {\n            target: \"before:spin\",\n            actions: [\"focusInput\", \"setHint\"]\n          }],\n          \"SCRUBBER.PRESS_DOWN\": {\n            target: \"scrubbing\",\n            actions: [\"focusInput\", \"setHint\", \"setCursorPoint\"]\n          },\n          \"INPUT.ARROW_UP\": {\n            actions: \"increment\"\n          },\n          \"INPUT.ARROW_DOWN\": {\n            actions: \"decrement\"\n          },\n          \"INPUT.HOME\": {\n            actions: \"decrementToMin\"\n          },\n          \"INPUT.END\": {\n            actions: \"incrementToMax\"\n          },\n          \"INPUT.CHANGE\": {\n            actions: [\"setValue\", \"setHint\"]\n          },\n          \"INPUT.BLUR\": [{\n            guard: and(\"clampValueOnBlur\", not(\"isInRange\")),\n            target: \"idle\",\n            actions: [\"setClampedValue\", \"clearHint\", \"invokeOnBlur\"]\n          }, {\n            target: \"idle\",\n            actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n          }],\n          \"INPUT.ENTER\": {\n            actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n          }\n        }\n      },\n      \"before:spin\": {\n        tags: \"focus\",\n        activities: \"trackButtonDisabled\",\n        entry: choose([{\n          guard: \"isIncrementHint\",\n          actions: \"increment\"\n        }, {\n          guard: \"isDecrementHint\",\n          actions: \"decrement\"\n        }]),\n        after: {\n          CHANGE_DELAY: {\n            target: \"spinning\",\n            guard: and(\"isInRange\", \"spinOnPress\")\n          }\n        },\n        on: {\n          \"TRIGGER.PRESS_UP\": [{\n            guard: \"isTouchPointer\",\n            target: \"focused\",\n            actions: \"clearHint\"\n          }, {\n            target: \"focused\",\n            actions: [\"focusInput\", \"clearHint\"]\n          }]\n        }\n      },\n      spinning: {\n        tags: \"focus\",\n        activities: \"trackButtonDisabled\",\n        every: [{\n          delay: \"CHANGE_INTERVAL\",\n          guard: and(not(\"isAtMin\"), \"isIncrementHint\"),\n          actions: \"increment\"\n        }, {\n          delay: \"CHANGE_INTERVAL\",\n          guard: and(not(\"isAtMax\"), \"isDecrementHint\"),\n          actions: \"decrement\"\n        }],\n        on: {\n          \"TRIGGER.PRESS_UP\": {\n            target: \"focused\",\n            actions: [\"focusInput\", \"clearHint\"]\n          }\n        }\n      },\n      scrubbing: {\n        tags: \"focus\",\n        activities: [\"activatePointerLock\", \"trackMousemove\", \"setupVirtualCursor\", \"preventTextSelection\"],\n        on: {\n          \"SCRUBBER.POINTER_UP\": {\n            target: \"focused\",\n            actions: [\"focusInput\", \"clearCursorPoint\"]\n          },\n          \"SCRUBBER.POINTER_MOVE\": [{\n            guard: \"isIncrementHint\",\n            actions: [\"increment\", \"setCursorPoint\"]\n          }, {\n            guard: \"isDecrementHint\",\n            actions: [\"decrement\", \"setCursorPoint\"]\n          }]\n        }\n      }\n    }\n  }, {\n    delays: {\n      CHANGE_INTERVAL: 50,\n      CHANGE_DELAY: 300\n    },\n    guards: {\n      clampValueOnBlur: ctx2 => ctx2.clampValueOnBlur,\n      isAtMin: ctx2 => ctx2.isAtMin,\n      spinOnPress: ctx2 => !!ctx2.spinOnPress,\n      isAtMax: ctx2 => ctx2.isAtMax,\n      isInRange: ctx2 => !ctx2.isOutOfRange,\n      isDecrementHint: (ctx2, evt) => (evt.hint ?? ctx2.hint) === \"decrement\",\n      isIncrementHint: (ctx2, evt) => (evt.hint ?? ctx2.hint) === \"increment\",\n      isTouchPointer: (_ctx, evt) => evt.pointerType === \"touch\"\n    },\n    activities: {\n      trackFormControl(ctx2, _evt, _ref) {\n        let {\n          initialContext\n        } = _ref;\n        const inputEl = dom.getInputEl(ctx2);\n        return trackFormControl(inputEl, {\n          onFieldsetDisabledChange(disabled) {\n            ctx2.fieldsetDisabled = disabled;\n          },\n          onFormReset() {\n            set.value(ctx2, initialContext.value);\n          }\n        });\n      },\n      setupVirtualCursor(ctx2) {\n        return dom.setupVirtualCursor(ctx2);\n      },\n      preventTextSelection(ctx2) {\n        return dom.preventTextSelection(ctx2);\n      },\n      trackButtonDisabled(ctx2, _evt, _ref2) {\n        let {\n          send\n        } = _ref2;\n        const btn = dom.getPressedTriggerEl(ctx2, ctx2.hint);\n        return observeAttributes(btn, {\n          attributes: [\"disabled\"],\n          callback() {\n            send({\n              type: \"TRIGGER.PRESS_UP\",\n              src: \"attr\"\n            });\n          }\n        });\n      },\n      attachWheelListener(ctx2, _evt, _ref3) {\n        let {\n          send\n        } = _ref3;\n        const inputEl = dom.getInputEl(ctx2);\n        if (!inputEl || !dom.isActiveElement(ctx2, inputEl) || !ctx2.allowMouseWheel) return;\n        function onWheel(event) {\n          event.preventDefault();\n          const dir = Math.sign(event.deltaY) * -1;\n          if (dir === 1) {\n            send(\"VALUE.INCREMENT\");\n          } else if (dir === -1) {\n            send(\"VALUE.DECREMENT\");\n          }\n        }\n        return addDomEvent(inputEl, \"wheel\", onWheel, {\n          passive: false\n        });\n      },\n      activatePointerLock(ctx2) {\n        if (isSafari()) return;\n        return requestPointerLock(dom.getDoc(ctx2));\n      },\n      trackMousemove(ctx2, _evt, _ref4) {\n        let {\n          send\n        } = _ref4;\n        const doc = dom.getDoc(ctx2);\n        function onMousemove(event) {\n          if (!ctx2.scrubberCursorPoint) return;\n          const value = dom.getMousementValue(ctx2, event);\n          if (!value.hint) return;\n          send({\n            type: \"SCRUBBER.POINTER_MOVE\",\n            hint: value.hint,\n            point: value.point\n          });\n        }\n        function onMouseup() {\n          send(\"SCRUBBER.POINTER_UP\");\n        }\n        return callAll(addDomEvent(doc, \"mousemove\", onMousemove, false), addDomEvent(doc, \"mouseup\", onMouseup, false));\n      }\n    },\n    actions: {\n      focusInput(ctx2) {\n        if (!ctx2.focusInputOnChange) return;\n        const inputEl = dom.getInputEl(ctx2);\n        if (dom.isActiveElement(ctx2, inputEl)) return;\n        raf(() => inputEl?.focus({\n          preventScroll: true\n        }));\n      },\n      increment(ctx2, evt) {\n        const nextValue = increment(ctx2.valueAsNumber, evt.step ?? ctx2.step);\n        const value = formatValue(ctx2, clamp(nextValue, ctx2));\n        set.value(ctx2, value);\n      },\n      decrement(ctx2, evt) {\n        const nextValue = decrement(ctx2.valueAsNumber, evt.step ?? ctx2.step);\n        const value = formatValue(ctx2, clamp(nextValue, ctx2));\n        set.value(ctx2, value);\n      },\n      setClampedValue(ctx2) {\n        const nextValue = clamp(ctx2.valueAsNumber, ctx2);\n        set.value(ctx2, formatValue(ctx2, nextValue));\n      },\n      setRawValue(ctx2, evt) {\n        const parsedValue = parseValue(ctx2, evt.value);\n        const value = formatValue(ctx2, clamp(parsedValue, ctx2));\n        set.value(ctx2, value);\n      },\n      setValue(ctx2, evt) {\n        const value = evt.target?.value ?? evt.value;\n        set.value(ctx2, value);\n      },\n      clearValue(ctx2) {\n        set.value(ctx2, \"\");\n      },\n      incrementToMax(ctx2) {\n        const value = formatValue(ctx2, ctx2.max);\n        set.value(ctx2, value);\n      },\n      decrementToMin(ctx2) {\n        const value = formatValue(ctx2, ctx2.min);\n        set.value(ctx2, value);\n      },\n      setHint(ctx2, evt) {\n        ctx2.hint = evt.hint;\n      },\n      clearHint(ctx2) {\n        ctx2.hint = null;\n      },\n      setHintToSet(ctx2) {\n        ctx2.hint = \"set\";\n      },\n      invokeOnFocus(ctx2) {\n        ctx2.onFocusChange?.({\n          focused: true,\n          value: ctx2.formattedValue,\n          valueAsNumber: ctx2.valueAsNumber\n        });\n      },\n      invokeOnBlur(ctx2) {\n        ctx2.onFocusChange?.({\n          focused: false,\n          value: ctx2.formattedValue,\n          valueAsNumber: ctx2.valueAsNumber\n        });\n      },\n      invokeOnInvalid(ctx2) {\n        if (!ctx2.isOutOfRange) return;\n        const reason = ctx2.valueAsNumber > ctx2.max ? \"rangeOverflow\" : \"rangeUnderflow\";\n        ctx2.onValueInvalid?.({\n          reason,\n          value: ctx2.formattedValue,\n          valueAsNumber: ctx2.valueAsNumber\n        });\n      },\n      syncInputElement(ctx2, evt) {\n        const value = evt.type.endsWith(\"CHANGE\") ? ctx2.value : ctx2.formattedValue;\n        sync.input(ctx2, value);\n      },\n      setFormattedValue(ctx2) {\n        set.value(ctx2, ctx2.formattedValue);\n      },\n      setCursorPoint(ctx2, evt) {\n        ctx2.scrubberCursorPoint = evt.point;\n      },\n      clearCursorPoint(ctx2) {\n        ctx2.scrubberCursorPoint = null;\n      },\n      setVirtualCursorPosition(ctx2) {\n        const cursorEl = dom.getCursorEl(ctx2);\n        if (!cursorEl || !ctx2.scrubberCursorPoint) return;\n        const {\n          x,\n          y\n        } = ctx2.scrubberCursorPoint;\n        cursorEl.style.transform = `translate3d(${x}px, ${y}px, 0px)`;\n      },\n      setFormatterAndParser(ctx2) {\n        if (!ctx2.locale) return;\n        ctx2.formatter = createFormatter(ctx2.locale, ctx2.formatOptions);\n        ctx2.parser = createParser(ctx2.locale, ctx2.formatOptions);\n      }\n    },\n    compareFns: {\n      formatOptions: (a, b) => isEqual(a, b),\n      scrubberCursorPoint: (a, b) => isEqual(a, b)\n    }\n  });\n}\nvar sync = {\n  input(ctx, value) {\n    const inputEl = dom.getInputEl(ctx);\n    if (!inputEl) return;\n    const sel = recordCursor(inputEl);\n    raf(() => {\n      dom.setValue(inputEl, value);\n      restoreCursor(inputEl, sel);\n    });\n  }\n};\nvar invoke = {\n  onChange: ctx => {\n    ctx.onValueChange?.({\n      value: ctx.value,\n      valueAsNumber: ctx.valueAsNumber\n    });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if (isEqual(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.onChange(ctx);\n  }\n};\nexport { anatomy, connect, machine };","map":{"version":3,"names":["createAnatomy","getEventStep","isLeftClick","getEventPoint","addDomEvent","requestPointerLock","isModifierKey","createScope","isSafari","MAX_Z_INDEX","dataAttr","ariaAttr","isComposingEvent","observeAttributes","raf","roundToDevicePixel","wrap","isAtMin","isAtMax","isWithinRange","increment","clamp","decrement","createMachine","choose","ref","guards","trackFormControl","compact","callAll","isEqual","NumberParser","anatomy","parts","build","dom","getRootId","ctx","ids","root","id","getInputId","input","getIncrementTriggerId","incrementTrigger","getDecrementTriggerId","decrementTrigger","getScrubberId","scrubber","getCursorId","getLabelId","label","getInputEl","getById","getIncrementTriggerEl","getDecrementTriggerEl","getScrubberEl","getCursorEl","getDoc","getElementById","getPressedTriggerEl","hint","arguments","length","undefined","btnEl","setupVirtualCursor","createVirtualCursor","remove","preventTextSelection","doc","html","documentElement","body","style","pointerEvents","userSelect","cursor","removeAttribute","getMousementValue","event","x","movementX","y","movementY","isRtl","point","scrubberCursorPoint","win","getWin","width","innerWidth","half","el","createElement","className","Object","assign","height","position","left","top","zIndex","transform","willChange","innerHTML","appendChild","connect","state","send","normalize","focused","hasTag","disabled","context","isDisabled","readOnly","empty","isValueEmpty","invalid","isOutOfRange","isIncrementDisabled","canIncrement","isDecrementDisabled","canDecrement","translations","value","formattedValue","valueAsNumber","setValue","type","clearValue","setToMax","max","setToMin","min","focus","getRootProps","element","attrs","dir","getLabelProps","htmlFor","getControlProps","control","role","getValueTextProps","valueText","getInputProps","name","form","defaultValue","pattern","inputMode","required","autoComplete","autoCorrect","spellCheck","Number","isNaN","onFocus","onBlur","onChange","target","currentTarget","onBeforeInput","selectionStart","selectionEnd","nextValue","slice","data","isValid","parser","isValidPartialNumber","preventDefault","onKeyDown","defaultPrevented","step","keyMap","ArrowUp","ArrowDown","Home","End","Enter","exec","key","getDecrementTriggerProps","button","decrementLabel","tabIndex","onPointerDown","pointerType","preventScroll","onPointerUp","onPointerLeave","getIncrementTriggerProps","incrementLabel","getScrubberProps","onMouseDown","recordCursor","inputEl","ownerDocument","activeElement","start","end","beforeTxt","substring","afterTxt","restoreCursor","selection","setSelectionRange","startPos","endsWith","startsWith","beforeLastChar","newIndex","indexOf","createFormatter","locale","options","Intl","NumberFormat","createParser","parseValue","formatOptions","parseFloat","parse","String","formatValue","toString","formatter","format","not","and","machine","userContext","initial","focusInputOnChange","clampValueOnBlur","allowOverflow","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","spinOnPress","fieldsetDisabled","computed","ctx2","watch","activities","on","actions","states","idle","guard","tags","entry","after","CHANGE_DELAY","spinning","every","delay","scrubbing","delays","CHANGE_INTERVAL","isInRange","isDecrementHint","evt","isIncrementHint","isTouchPointer","_ctx","_evt","_ref","initialContext","onFieldsetDisabledChange","onFormReset","set","trackButtonDisabled","_ref2","btn","attributes","callback","src","attachWheelListener","_ref3","isActiveElement","allowMouseWheel","onWheel","Math","sign","deltaY","passive","activatePointerLock","trackMousemove","_ref4","onMousemove","onMouseup","focusInput","setClampedValue","setRawValue","parsedValue","incrementToMax","decrementToMin","setHint","clearHint","setHintToSet","invokeOnFocus","onFocusChange","invokeOnBlur","invokeOnInvalid","reason","onValueInvalid","syncInputElement","sync","setFormattedValue","setCursorPoint","clearCursorPoint","setVirtualCursorPosition","cursorEl","setFormatterAndParser","compareFns","a","b","sel","invoke","onValueChange"],"sources":["/Users/rishil/AIM-MedVisor/node_modules/@ark-ui/react/node_modules/@zag-js/number-input/dist/index.mjs"],"sourcesContent":["import { createAnatomy } from '@zag-js/anatomy';\nimport { getEventStep, isLeftClick, getEventPoint, addDomEvent, requestPointerLock, isModifierKey } from '@zag-js/dom-event';\nimport { createScope, isSafari, MAX_Z_INDEX, dataAttr, ariaAttr, isComposingEvent, observeAttributes, raf } from '@zag-js/dom-query';\nimport { roundToDevicePixel, wrap, isAtMin, isAtMax, isWithinRange, increment, clamp, decrement } from '@zag-js/number-utils';\nimport { createMachine, choose, ref, guards } from '@zag-js/core';\nimport { trackFormControl } from '@zag-js/form-utils';\nimport { compact, callAll, isEqual } from '@zag-js/utils';\nimport { NumberParser } from '@internationalized/number';\n\n// src/number-input.anatomy.ts\nvar anatomy = createAnatomy(\"numberInput\").parts(\n  \"root\",\n  \"label\",\n  \"input\",\n  \"control\",\n  \"valueText\",\n  \"incrementTrigger\",\n  \"decrementTrigger\",\n  \"scrubber\"\n);\nvar parts = anatomy.build();\nvar dom = createScope({\n  getRootId: (ctx) => ctx.ids?.root ?? `number-input:${ctx.id}`,\n  getInputId: (ctx) => ctx.ids?.input ?? `number-input:${ctx.id}:input`,\n  getIncrementTriggerId: (ctx) => ctx.ids?.incrementTrigger ?? `number-input:${ctx.id}:inc`,\n  getDecrementTriggerId: (ctx) => ctx.ids?.decrementTrigger ?? `number-input:${ctx.id}:dec`,\n  getScrubberId: (ctx) => ctx.ids?.scrubber ?? `number-input:${ctx.id}:scrubber`,\n  getCursorId: (ctx) => `number-input:${ctx.id}:cursor`,\n  getLabelId: (ctx) => ctx.ids?.label ?? `number-input:${ctx.id}:label`,\n  getInputEl: (ctx) => dom.getById(ctx, dom.getInputId(ctx)),\n  getIncrementTriggerEl: (ctx) => dom.getById(ctx, dom.getIncrementTriggerId(ctx)),\n  getDecrementTriggerEl: (ctx) => dom.getById(ctx, dom.getDecrementTriggerId(ctx)),\n  getScrubberEl: (ctx) => dom.getById(ctx, dom.getScrubberId(ctx)),\n  getCursorEl: (ctx) => dom.getDoc(ctx).getElementById(dom.getCursorId(ctx)),\n  getPressedTriggerEl: (ctx, hint = ctx.hint) => {\n    let btnEl = null;\n    if (hint === \"increment\") {\n      btnEl = dom.getIncrementTriggerEl(ctx);\n    }\n    if (hint === \"decrement\") {\n      btnEl = dom.getDecrementTriggerEl(ctx);\n    }\n    return btnEl;\n  },\n  setupVirtualCursor(ctx) {\n    if (isSafari()) return;\n    dom.createVirtualCursor(ctx);\n    return () => {\n      dom.getCursorEl(ctx)?.remove();\n    };\n  },\n  preventTextSelection(ctx) {\n    const doc = dom.getDoc(ctx);\n    const html = doc.documentElement;\n    const body = doc.body;\n    body.style.pointerEvents = \"none\";\n    html.style.userSelect = \"none\";\n    html.style.cursor = \"ew-resize\";\n    return () => {\n      body.style.pointerEvents = \"\";\n      html.style.userSelect = \"\";\n      html.style.cursor = \"\";\n      if (!html.style.length) {\n        html.removeAttribute(\"style\");\n      }\n      if (!body.style.length) {\n        body.removeAttribute(\"style\");\n      }\n    };\n  },\n  getMousementValue(ctx, event) {\n    const x = roundToDevicePixel(event.movementX);\n    const y = roundToDevicePixel(event.movementY);\n    let hint = x > 0 ? \"increment\" : x < 0 ? \"decrement\" : null;\n    if (ctx.isRtl && hint === \"increment\") hint = \"decrement\";\n    if (ctx.isRtl && hint === \"decrement\") hint = \"increment\";\n    const point = {\n      x: ctx.scrubberCursorPoint.x + x,\n      y: ctx.scrubberCursorPoint.y + y\n    };\n    const win = dom.getWin(ctx);\n    const width = win.innerWidth;\n    const half = roundToDevicePixel(7.5);\n    point.x = wrap(point.x + half, width) - half;\n    return { hint, point };\n  },\n  createVirtualCursor(ctx) {\n    const doc = dom.getDoc(ctx);\n    const el = doc.createElement(\"div\");\n    el.className = \"scrubber--cursor\";\n    el.id = dom.getCursorId(ctx);\n    Object.assign(el.style, {\n      width: \"15px\",\n      height: \"15px\",\n      position: \"fixed\",\n      pointerEvents: \"none\",\n      left: \"0px\",\n      top: \"0px\",\n      zIndex: MAX_Z_INDEX,\n      transform: ctx.scrubberCursorPoint ? `translate3d(${ctx.scrubberCursorPoint.x}px, ${ctx.scrubberCursorPoint.y}px, 0px)` : void 0,\n      willChange: \"transform\"\n    });\n    el.innerHTML = `\n        <svg width=\"46\" height=\"15\" style=\"left: -15.5px; position: absolute; top: 0; filter: drop-shadow(rgba(0, 0, 0, 0.4) 0px 1px 1.1px);\">\n          <g transform=\"translate(2 3)\">\n            <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\" style=\"stroke-width: 2px; stroke: white;\"></path>\n            <path fill-rule=\"evenodd\" d=\"M 15 4.5L 15 2L 11.5 5.5L 15 9L 15 6.5L 31 6.5L 31 9L 34.5 5.5L 31 2L 31 4.5Z\"></path>\n          </g>\n        </svg>`;\n    doc.body.appendChild(el);\n  }\n});\n\n// src/number-input.connect.ts\nfunction connect(state, send, normalize) {\n  const focused = state.hasTag(\"focus\");\n  const disabled = state.context.isDisabled;\n  const readOnly = state.context.readOnly;\n  const empty = state.context.isValueEmpty;\n  const invalid = state.context.isOutOfRange || !!state.context.invalid;\n  const isIncrementDisabled = disabled || !state.context.canIncrement || readOnly;\n  const isDecrementDisabled = disabled || !state.context.canDecrement || readOnly;\n  const translations = state.context.translations;\n  return {\n    focused,\n    invalid,\n    empty,\n    value: state.context.formattedValue,\n    valueAsNumber: state.context.valueAsNumber,\n    setValue(value) {\n      send({ type: \"VALUE.SET\", value });\n    },\n    clearValue() {\n      send(\"VALUE.CLEAR\");\n    },\n    increment() {\n      send(\"VALUE.INCREMENT\");\n    },\n    decrement() {\n      send(\"VALUE.DECREMENT\");\n    },\n    setToMax() {\n      send({ type: \"VALUE.SET\", value: state.context.max });\n    },\n    setToMin() {\n      send({ type: \"VALUE.SET\", value: state.context.min });\n    },\n    focus() {\n      dom.getInputEl(state.context)?.focus();\n    },\n    getRootProps() {\n      return normalize.element({\n        id: dom.getRootId(state.context),\n        ...parts.root.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid)\n      });\n    },\n    getLabelProps() {\n      return normalize.label({\n        ...parts.label.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-focus\": dataAttr(focused),\n        \"data-invalid\": dataAttr(invalid),\n        id: dom.getLabelId(state.context),\n        htmlFor: dom.getInputId(state.context)\n      });\n    },\n    getControlProps() {\n      return normalize.element({\n        ...parts.control.attrs,\n        dir: state.context.dir,\n        role: \"group\",\n        \"aria-disabled\": disabled,\n        \"data-focus\": dataAttr(focused),\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"aria-invalid\": ariaAttr(state.context.invalid)\n      });\n    },\n    getValueTextProps() {\n      return normalize.element({\n        ...parts.valueText.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        \"data-invalid\": dataAttr(invalid),\n        \"data-focus\": dataAttr(focused)\n      });\n    },\n    getInputProps() {\n      return normalize.input({\n        ...parts.input.attrs,\n        dir: state.context.dir,\n        name: state.context.name,\n        form: state.context.form,\n        id: dom.getInputId(state.context),\n        role: \"spinbutton\",\n        defaultValue: state.context.formattedValue,\n        pattern: state.context.pattern,\n        inputMode: state.context.inputMode,\n        \"aria-invalid\": ariaAttr(invalid),\n        \"data-invalid\": dataAttr(invalid),\n        disabled,\n        \"data-disabled\": dataAttr(disabled),\n        readOnly: state.context.readOnly,\n        required: state.context.required,\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        spellCheck: \"false\",\n        type: \"text\",\n        \"aria-roledescription\": \"numberfield\",\n        \"aria-valuemin\": state.context.min,\n        \"aria-valuemax\": state.context.max,\n        \"aria-valuenow\": Number.isNaN(state.context.valueAsNumber) ? void 0 : state.context.valueAsNumber,\n        \"aria-valuetext\": state.context.valueText,\n        onFocus() {\n          send(\"INPUT.FOCUS\");\n        },\n        onBlur() {\n          send(\"INPUT.BLUR\");\n        },\n        onChange(event) {\n          send({ type: \"INPUT.CHANGE\", target: event.currentTarget, hint: \"set\" });\n        },\n        onBeforeInput(event) {\n          try {\n            const { selectionStart, selectionEnd, value } = event.currentTarget;\n            const nextValue = value.slice(0, selectionStart) + (event.data ?? \"\") + value.slice(selectionEnd);\n            const isValid = state.context.parser.isValidPartialNumber(nextValue);\n            if (!isValid) {\n              event.preventDefault();\n            }\n          } catch {\n          }\n        },\n        onKeyDown(event) {\n          if (event.defaultPrevented) return;\n          if (readOnly) return;\n          if (isComposingEvent(event)) return;\n          const step = getEventStep(event) * state.context.step;\n          const keyMap = {\n            ArrowUp() {\n              send({ type: \"INPUT.ARROW_UP\", step });\n              event.preventDefault();\n            },\n            ArrowDown() {\n              send({ type: \"INPUT.ARROW_DOWN\", step });\n              event.preventDefault();\n            },\n            Home() {\n              if (isModifierKey(event)) return;\n              send(\"INPUT.HOME\");\n              event.preventDefault();\n            },\n            End() {\n              if (isModifierKey(event)) return;\n              send(\"INPUT.END\");\n              event.preventDefault();\n            },\n            Enter() {\n              send(\"INPUT.ENTER\");\n            }\n          };\n          const exec = keyMap[event.key];\n          exec?.(event);\n        }\n      });\n    },\n    getDecrementTriggerProps() {\n      return normalize.button({\n        ...parts.decrementTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getDecrementTriggerId(state.context),\n        disabled: isDecrementDisabled,\n        \"data-disabled\": dataAttr(isDecrementDisabled),\n        \"aria-label\": translations.decrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": dom.getInputId(state.context),\n        onPointerDown(event) {\n          if (isDecrementDisabled || !isLeftClick(event)) return;\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"decrement\", pointerType: event.pointerType });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true });\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\", pointerType: event.pointerType });\n        },\n        onPointerLeave() {\n          if (isDecrementDisabled) return;\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"decrement\" });\n        }\n      });\n    },\n    getIncrementTriggerProps() {\n      return normalize.button({\n        ...parts.incrementTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getIncrementTriggerId(state.context),\n        disabled: isIncrementDisabled,\n        \"data-disabled\": dataAttr(isIncrementDisabled),\n        \"aria-label\": translations.incrementLabel,\n        type: \"button\",\n        tabIndex: -1,\n        \"aria-controls\": dom.getInputId(state.context),\n        onPointerDown(event) {\n          if (isIncrementDisabled || !isLeftClick(event)) return;\n          send({ type: \"TRIGGER.PRESS_DOWN\", hint: \"increment\", pointerType: event.pointerType });\n          if (event.pointerType === \"mouse\") {\n            event.preventDefault();\n          }\n          if (event.pointerType === \"touch\") {\n            event.currentTarget?.focus({ preventScroll: true });\n          }\n        },\n        onPointerUp(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType });\n        },\n        onPointerLeave(event) {\n          send({ type: \"TRIGGER.PRESS_UP\", hint: \"increment\", pointerType: event.pointerType });\n        }\n      });\n    },\n    getScrubberProps() {\n      return normalize.element({\n        ...parts.scrubber.attrs,\n        dir: state.context.dir,\n        \"data-disabled\": dataAttr(disabled),\n        id: dom.getScrubberId(state.context),\n        role: \"presentation\",\n        onMouseDown(event) {\n          if (disabled) return;\n          const point = getEventPoint(event);\n          point.x = point.x - roundToDevicePixel(7.5);\n          point.y = point.y - roundToDevicePixel(7.5);\n          send({ type: \"SCRUBBER.PRESS_DOWN\", point });\n          event.preventDefault();\n        },\n        style: {\n          cursor: disabled ? void 0 : \"ew-resize\"\n        }\n      });\n    }\n  };\n}\n\n// src/cursor.ts\nfunction recordCursor(inputEl) {\n  if (inputEl.ownerDocument.activeElement !== inputEl) return;\n  try {\n    const { selectionStart: start, selectionEnd: end, value } = inputEl;\n    const beforeTxt = value.substring(0, start);\n    const afterTxt = value.substring(end);\n    return {\n      start,\n      end,\n      value,\n      beforeTxt,\n      afterTxt\n    };\n  } catch {\n  }\n}\nfunction restoreCursor(inputEl, selection) {\n  if (inputEl.ownerDocument.activeElement !== inputEl) return;\n  if (!selection) {\n    inputEl.setSelectionRange(inputEl.value.length, inputEl.value.length);\n    return;\n  }\n  try {\n    const { value } = inputEl;\n    const { beforeTxt = \"\", afterTxt = \"\", start } = selection;\n    let startPos = value.length;\n    if (value.endsWith(afterTxt)) {\n      startPos = value.length - afterTxt.length;\n    } else if (value.startsWith(beforeTxt)) {\n      startPos = beforeTxt.length;\n    } else if (start != null) {\n      const beforeLastChar = beforeTxt[start - 1];\n      const newIndex = value.indexOf(beforeLastChar, start - 1);\n      if (newIndex !== -1) {\n        startPos = newIndex + 1;\n      }\n    }\n    inputEl.setSelectionRange(startPos, startPos);\n  } catch {\n  }\n}\nvar createFormatter = (locale, options = {}) => {\n  return ref(new Intl.NumberFormat(locale, options));\n};\nvar createParser = (locale, options = {}) => {\n  return ref(new NumberParser(locale, options));\n};\nvar parseValue = (ctx, value) => {\n  if (!ctx.formatOptions) return parseFloat(value);\n  return ctx.parser.parse(String(value));\n};\nvar formatValue = (ctx, value) => {\n  if (Number.isNaN(value)) return \"\";\n  if (!ctx.formatOptions) return value.toString();\n  return ctx.formatter.format(value);\n};\n\n// src/number-input.machine.ts\nvar { not, and } = guards;\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine(\n    {\n      id: \"number-input\",\n      initial: \"idle\",\n      context: {\n        dir: \"ltr\",\n        locale: \"en-US\",\n        focusInputOnChange: true,\n        clampValueOnBlur: true,\n        allowOverflow: false,\n        inputMode: \"decimal\",\n        pattern: \"[0-9]*(.[0-9]+)?\",\n        value: \"\",\n        step: 1,\n        min: Number.MIN_SAFE_INTEGER,\n        max: Number.MAX_SAFE_INTEGER,\n        invalid: false,\n        spinOnPress: true,\n        disabled: false,\n        readOnly: false,\n        ...ctx,\n        hint: null,\n        scrubberCursorPoint: null,\n        fieldsetDisabled: false,\n        formatter: createFormatter(ctx.locale || \"en-US\", ctx.formatOptions),\n        parser: createParser(ctx.locale || \"en-US\", ctx.formatOptions),\n        translations: {\n          incrementLabel: \"increment value\",\n          decrementLabel: \"decrease value\",\n          ...ctx.translations\n        }\n      },\n      computed: {\n        isRtl: (ctx2) => ctx2.dir === \"rtl\",\n        valueAsNumber: (ctx2) => parseValue(ctx2, ctx2.value),\n        formattedValue: (ctx2) => formatValue(ctx2, ctx2.valueAsNumber),\n        isAtMin: (ctx2) => isAtMin(ctx2.valueAsNumber, ctx2),\n        isAtMax: (ctx2) => isAtMax(ctx2.valueAsNumber, ctx2),\n        isOutOfRange: (ctx2) => !isWithinRange(ctx2.valueAsNumber, ctx2),\n        isValueEmpty: (ctx2) => ctx2.value === \"\",\n        isDisabled: (ctx2) => !!ctx2.disabled || ctx2.fieldsetDisabled,\n        canIncrement: (ctx2) => ctx2.allowOverflow || !ctx2.isAtMax,\n        canDecrement: (ctx2) => ctx2.allowOverflow || !ctx2.isAtMin,\n        valueText: (ctx2) => ctx2.translations.valueText?.(ctx2.value)\n      },\n      watch: {\n        formatOptions: [\"setFormatterAndParser\", \"syncInputElement\"],\n        locale: [\"setFormatterAndParser\", \"syncInputElement\"],\n        value: [\"syncInputElement\"],\n        isOutOfRange: [\"invokeOnInvalid\"],\n        scrubberCursorPoint: [\"setVirtualCursorPosition\"]\n      },\n      activities: [\"trackFormControl\"],\n      on: {\n        \"VALUE.SET\": {\n          actions: [\"setRawValue\", \"setHintToSet\"]\n        },\n        \"VALUE.CLEAR\": {\n          actions: [\"clearValue\"]\n        },\n        \"VALUE.INCREMENT\": {\n          actions: [\"increment\"]\n        },\n        \"VALUE.DECREMENT\": {\n          actions: [\"decrement\"]\n        }\n      },\n      states: {\n        idle: {\n          on: {\n            \"TRIGGER.PRESS_DOWN\": [\n              { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n              {\n                target: \"before:spin\",\n                actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\"]\n              }\n            ],\n            \"SCRUBBER.PRESS_DOWN\": {\n              target: \"scrubbing\",\n              actions: [\"focusInput\", \"invokeOnFocus\", \"setHint\", \"setCursorPoint\"]\n            },\n            \"INPUT.FOCUS\": {\n              target: \"focused\",\n              actions: [\"focusInput\", \"invokeOnFocus\"]\n            }\n          }\n        },\n        focused: {\n          tags: \"focus\",\n          activities: \"attachWheelListener\",\n          on: {\n            \"TRIGGER.PRESS_DOWN\": [\n              { guard: \"isTouchPointer\", target: \"before:spin\", actions: [\"setHint\"] },\n              { target: \"before:spin\", actions: [\"focusInput\", \"setHint\"] }\n            ],\n            \"SCRUBBER.PRESS_DOWN\": {\n              target: \"scrubbing\",\n              actions: [\"focusInput\", \"setHint\", \"setCursorPoint\"]\n            },\n            \"INPUT.ARROW_UP\": {\n              actions: \"increment\"\n            },\n            \"INPUT.ARROW_DOWN\": {\n              actions: \"decrement\"\n            },\n            \"INPUT.HOME\": {\n              actions: \"decrementToMin\"\n            },\n            \"INPUT.END\": {\n              actions: \"incrementToMax\"\n            },\n            \"INPUT.CHANGE\": {\n              actions: [\"setValue\", \"setHint\"]\n            },\n            \"INPUT.BLUR\": [\n              {\n                guard: and(\"clampValueOnBlur\", not(\"isInRange\")),\n                target: \"idle\",\n                actions: [\"setClampedValue\", \"clearHint\", \"invokeOnBlur\"]\n              },\n              {\n                target: \"idle\",\n                actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n              }\n            ],\n            \"INPUT.ENTER\": {\n              actions: [\"setFormattedValue\", \"clearHint\", \"invokeOnBlur\"]\n            }\n          }\n        },\n        \"before:spin\": {\n          tags: \"focus\",\n          activities: \"trackButtonDisabled\",\n          entry: choose([\n            { guard: \"isIncrementHint\", actions: \"increment\" },\n            { guard: \"isDecrementHint\", actions: \"decrement\" }\n          ]),\n          after: {\n            CHANGE_DELAY: {\n              target: \"spinning\",\n              guard: and(\"isInRange\", \"spinOnPress\")\n            }\n          },\n          on: {\n            \"TRIGGER.PRESS_UP\": [\n              { guard: \"isTouchPointer\", target: \"focused\", actions: \"clearHint\" },\n              { target: \"focused\", actions: [\"focusInput\", \"clearHint\"] }\n            ]\n          }\n        },\n        spinning: {\n          tags: \"focus\",\n          activities: \"trackButtonDisabled\",\n          every: [\n            {\n              delay: \"CHANGE_INTERVAL\",\n              guard: and(not(\"isAtMin\"), \"isIncrementHint\"),\n              actions: \"increment\"\n            },\n            {\n              delay: \"CHANGE_INTERVAL\",\n              guard: and(not(\"isAtMax\"), \"isDecrementHint\"),\n              actions: \"decrement\"\n            }\n          ],\n          on: {\n            \"TRIGGER.PRESS_UP\": {\n              target: \"focused\",\n              actions: [\"focusInput\", \"clearHint\"]\n            }\n          }\n        },\n        scrubbing: {\n          tags: \"focus\",\n          activities: [\"activatePointerLock\", \"trackMousemove\", \"setupVirtualCursor\", \"preventTextSelection\"],\n          on: {\n            \"SCRUBBER.POINTER_UP\": {\n              target: \"focused\",\n              actions: [\"focusInput\", \"clearCursorPoint\"]\n            },\n            \"SCRUBBER.POINTER_MOVE\": [\n              {\n                guard: \"isIncrementHint\",\n                actions: [\"increment\", \"setCursorPoint\"]\n              },\n              {\n                guard: \"isDecrementHint\",\n                actions: [\"decrement\", \"setCursorPoint\"]\n              }\n            ]\n          }\n        }\n      }\n    },\n    {\n      delays: {\n        CHANGE_INTERVAL: 50,\n        CHANGE_DELAY: 300\n      },\n      guards: {\n        clampValueOnBlur: (ctx2) => ctx2.clampValueOnBlur,\n        isAtMin: (ctx2) => ctx2.isAtMin,\n        spinOnPress: (ctx2) => !!ctx2.spinOnPress,\n        isAtMax: (ctx2) => ctx2.isAtMax,\n        isInRange: (ctx2) => !ctx2.isOutOfRange,\n        isDecrementHint: (ctx2, evt) => (evt.hint ?? ctx2.hint) === \"decrement\",\n        isIncrementHint: (ctx2, evt) => (evt.hint ?? ctx2.hint) === \"increment\",\n        isTouchPointer: (_ctx, evt) => evt.pointerType === \"touch\"\n      },\n      activities: {\n        trackFormControl(ctx2, _evt, { initialContext }) {\n          const inputEl = dom.getInputEl(ctx2);\n          return trackFormControl(inputEl, {\n            onFieldsetDisabledChange(disabled) {\n              ctx2.fieldsetDisabled = disabled;\n            },\n            onFormReset() {\n              set.value(ctx2, initialContext.value);\n            }\n          });\n        },\n        setupVirtualCursor(ctx2) {\n          return dom.setupVirtualCursor(ctx2);\n        },\n        preventTextSelection(ctx2) {\n          return dom.preventTextSelection(ctx2);\n        },\n        trackButtonDisabled(ctx2, _evt, { send }) {\n          const btn = dom.getPressedTriggerEl(ctx2, ctx2.hint);\n          return observeAttributes(btn, {\n            attributes: [\"disabled\"],\n            callback() {\n              send({ type: \"TRIGGER.PRESS_UP\", src: \"attr\" });\n            }\n          });\n        },\n        attachWheelListener(ctx2, _evt, { send }) {\n          const inputEl = dom.getInputEl(ctx2);\n          if (!inputEl || !dom.isActiveElement(ctx2, inputEl) || !ctx2.allowMouseWheel) return;\n          function onWheel(event) {\n            event.preventDefault();\n            const dir = Math.sign(event.deltaY) * -1;\n            if (dir === 1) {\n              send(\"VALUE.INCREMENT\");\n            } else if (dir === -1) {\n              send(\"VALUE.DECREMENT\");\n            }\n          }\n          return addDomEvent(inputEl, \"wheel\", onWheel, { passive: false });\n        },\n        activatePointerLock(ctx2) {\n          if (isSafari()) return;\n          return requestPointerLock(dom.getDoc(ctx2));\n        },\n        trackMousemove(ctx2, _evt, { send }) {\n          const doc = dom.getDoc(ctx2);\n          function onMousemove(event) {\n            if (!ctx2.scrubberCursorPoint) return;\n            const value = dom.getMousementValue(ctx2, event);\n            if (!value.hint) return;\n            send({\n              type: \"SCRUBBER.POINTER_MOVE\",\n              hint: value.hint,\n              point: value.point\n            });\n          }\n          function onMouseup() {\n            send(\"SCRUBBER.POINTER_UP\");\n          }\n          return callAll(\n            addDomEvent(doc, \"mousemove\", onMousemove, false),\n            addDomEvent(doc, \"mouseup\", onMouseup, false)\n          );\n        }\n      },\n      actions: {\n        focusInput(ctx2) {\n          if (!ctx2.focusInputOnChange) return;\n          const inputEl = dom.getInputEl(ctx2);\n          if (dom.isActiveElement(ctx2, inputEl)) return;\n          raf(() => inputEl?.focus({ preventScroll: true }));\n        },\n        increment(ctx2, evt) {\n          const nextValue = increment(ctx2.valueAsNumber, evt.step ?? ctx2.step);\n          const value = formatValue(ctx2, clamp(nextValue, ctx2));\n          set.value(ctx2, value);\n        },\n        decrement(ctx2, evt) {\n          const nextValue = decrement(ctx2.valueAsNumber, evt.step ?? ctx2.step);\n          const value = formatValue(ctx2, clamp(nextValue, ctx2));\n          set.value(ctx2, value);\n        },\n        setClampedValue(ctx2) {\n          const nextValue = clamp(ctx2.valueAsNumber, ctx2);\n          set.value(ctx2, formatValue(ctx2, nextValue));\n        },\n        setRawValue(ctx2, evt) {\n          const parsedValue = parseValue(ctx2, evt.value);\n          const value = formatValue(ctx2, clamp(parsedValue, ctx2));\n          set.value(ctx2, value);\n        },\n        setValue(ctx2, evt) {\n          const value = evt.target?.value ?? evt.value;\n          set.value(ctx2, value);\n        },\n        clearValue(ctx2) {\n          set.value(ctx2, \"\");\n        },\n        incrementToMax(ctx2) {\n          const value = formatValue(ctx2, ctx2.max);\n          set.value(ctx2, value);\n        },\n        decrementToMin(ctx2) {\n          const value = formatValue(ctx2, ctx2.min);\n          set.value(ctx2, value);\n        },\n        setHint(ctx2, evt) {\n          ctx2.hint = evt.hint;\n        },\n        clearHint(ctx2) {\n          ctx2.hint = null;\n        },\n        setHintToSet(ctx2) {\n          ctx2.hint = \"set\";\n        },\n        invokeOnFocus(ctx2) {\n          ctx2.onFocusChange?.({\n            focused: true,\n            value: ctx2.formattedValue,\n            valueAsNumber: ctx2.valueAsNumber\n          });\n        },\n        invokeOnBlur(ctx2) {\n          ctx2.onFocusChange?.({\n            focused: false,\n            value: ctx2.formattedValue,\n            valueAsNumber: ctx2.valueAsNumber\n          });\n        },\n        invokeOnInvalid(ctx2) {\n          if (!ctx2.isOutOfRange) return;\n          const reason = ctx2.valueAsNumber > ctx2.max ? \"rangeOverflow\" : \"rangeUnderflow\";\n          ctx2.onValueInvalid?.({\n            reason,\n            value: ctx2.formattedValue,\n            valueAsNumber: ctx2.valueAsNumber\n          });\n        },\n        syncInputElement(ctx2, evt) {\n          const value = evt.type.endsWith(\"CHANGE\") ? ctx2.value : ctx2.formattedValue;\n          sync.input(ctx2, value);\n        },\n        setFormattedValue(ctx2) {\n          set.value(ctx2, ctx2.formattedValue);\n        },\n        setCursorPoint(ctx2, evt) {\n          ctx2.scrubberCursorPoint = evt.point;\n        },\n        clearCursorPoint(ctx2) {\n          ctx2.scrubberCursorPoint = null;\n        },\n        setVirtualCursorPosition(ctx2) {\n          const cursorEl = dom.getCursorEl(ctx2);\n          if (!cursorEl || !ctx2.scrubberCursorPoint) return;\n          const { x, y } = ctx2.scrubberCursorPoint;\n          cursorEl.style.transform = `translate3d(${x}px, ${y}px, 0px)`;\n        },\n        setFormatterAndParser(ctx2) {\n          if (!ctx2.locale) return;\n          ctx2.formatter = createFormatter(ctx2.locale, ctx2.formatOptions);\n          ctx2.parser = createParser(ctx2.locale, ctx2.formatOptions);\n        }\n      },\n      compareFns: {\n        formatOptions: (a, b) => isEqual(a, b),\n        scrubberCursorPoint: (a, b) => isEqual(a, b)\n      }\n    }\n  );\n}\nvar sync = {\n  input(ctx, value) {\n    const inputEl = dom.getInputEl(ctx);\n    if (!inputEl) return;\n    const sel = recordCursor(inputEl);\n    raf(() => {\n      dom.setValue(inputEl, value);\n      restoreCursor(inputEl, sel);\n    });\n  }\n};\nvar invoke = {\n  onChange: (ctx) => {\n    ctx.onValueChange?.({\n      value: ctx.value,\n      valueAsNumber: ctx.valueAsNumber\n    });\n  }\n};\nvar set = {\n  value: (ctx, value) => {\n    if (isEqual(ctx.value, value)) return;\n    ctx.value = value;\n    invoke.onChange(ctx);\n  }\n};\n\nexport { anatomy, connect, machine };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}