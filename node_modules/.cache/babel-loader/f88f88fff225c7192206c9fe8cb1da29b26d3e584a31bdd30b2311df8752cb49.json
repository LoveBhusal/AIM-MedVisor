{"ast":null,"code":"// src/popover.anatomy.ts\nimport { createAnatomy } from \"@zag-js/anatomy\";\nvar anatomy = createAnatomy(\"popover\").parts(\"arrow\", \"arrowTip\", \"anchor\", \"trigger\", \"indicator\", \"positioner\", \"content\", \"title\", \"description\", \"closeTrigger\");\nvar parts = anatomy.build();\n\n// src/popover.connect.ts\nimport { dataAttr } from \"@zag-js/dom-query\";\nimport { getPlacementStyles } from \"@zag-js/popper\";\n\n// src/popover.dom.ts\nimport { createScope, getFocusables } from \"@zag-js/dom-query\";\nvar dom = createScope({\n  getAnchorId: ctx => ctx.ids?.anchor ?? `popover:${ctx.id}:anchor`,\n  getTriggerId: ctx => ctx.ids?.trigger ?? `popover:${ctx.id}:trigger`,\n  getContentId: ctx => ctx.ids?.content ?? `popover:${ctx.id}:content`,\n  getPositionerId: ctx => ctx.ids?.positioner ?? `popover:${ctx.id}:popper`,\n  getArrowId: ctx => ctx.ids?.arrow ?? `popover:${ctx.id}:arrow`,\n  getTitleId: ctx => ctx.ids?.title ?? `popover:${ctx.id}:title`,\n  getDescriptionId: ctx => ctx.ids?.description ?? `popover:${ctx.id}:desc`,\n  getCloseTriggerId: ctx => ctx.ids?.closeTrigger ?? `popover:${ctx.id}:close`,\n  getAnchorEl: ctx => dom.getById(ctx, dom.getAnchorId(ctx)),\n  getTriggerEl: ctx => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getContentEl: ctx => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: ctx => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getTitleEl: ctx => dom.getById(ctx, dom.getTitleId(ctx)),\n  getDescriptionEl: ctx => dom.getById(ctx, dom.getDescriptionId(ctx)),\n  getFocusableEls: ctx => getFocusables(dom.getContentEl(ctx)),\n  getFirstFocusableEl: ctx => dom.getFocusableEls(ctx)[0]\n});\n\n// src/popover.connect.ts\nfunction connect(state, send, normalize) {\n  const open = state.matches(\"open\");\n  const currentPlacement = state.context.currentPlacement;\n  const portalled = state.context.currentPortalled;\n  const rendered = state.context.renderedElements;\n  const popperStyles = getPlacementStyles({\n    ...state.context.positioning,\n    placement: currentPlacement\n  });\n  return {\n    portalled,\n    open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return;\n      send(nextOpen ? \"OPEN\" : \"CLOSE\");\n    },\n    reposition() {\n      let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      send({\n        type: \"POSITIONING.SET\",\n        options\n      });\n    },\n    getArrowProps() {\n      return normalize.element({\n        id: dom.getArrowId(state.context),\n        ...parts.arrow.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrow\n      });\n    },\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrowTip\n      });\n    },\n    getAnchorProps() {\n      return normalize.element({\n        ...parts.anchor.attrs,\n        dir: state.context.dir,\n        id: dom.getAnchorId(state.context)\n      });\n    },\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: state.context.dir,\n        type: \"button\",\n        \"data-placement\": currentPlacement,\n        id: dom.getTriggerId(state.context),\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": dom.getContentId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"TOGGLE\");\n        },\n        onBlur(event) {\n          send({\n            type: \"TRIGGER_BLUR\",\n            target: event.relatedTarget\n          });\n        }\n      });\n    },\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"data-state\": open ? \"open\" : \"closed\"\n      });\n    },\n    getPositionerProps() {\n      return normalize.element({\n        id: dom.getPositionerId(state.context),\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        style: popperStyles.floating\n      });\n    },\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context),\n        tabIndex: -1,\n        role: \"dialog\",\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-expanded\": dataAttr(open),\n        \"aria-labelledby\": rendered.title ? dom.getTitleId(state.context) : void 0,\n        \"aria-describedby\": rendered.description ? dom.getDescriptionId(state.context) : void 0,\n        \"data-placement\": currentPlacement\n      });\n    },\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        id: dom.getTitleId(state.context),\n        dir: state.context.dir\n      });\n    },\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        id: dom.getDescriptionId(state.context),\n        dir: state.context.dir\n      });\n    },\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getCloseTriggerId(state.context),\n        type: \"button\",\n        \"aria-label\": \"close\",\n        onClick(event) {\n          if (event.defaultPrevented) return;\n          send(\"CLOSE\");\n        }\n      });\n    }\n  };\n}\n\n// src/popover.machine.ts\nimport { ariaHidden } from \"@zag-js/aria-hidden\";\nimport { createMachine } from \"@zag-js/core\";\nimport { trackDismissableElement } from \"@zag-js/dismissable\";\nimport { getInitialFocus, nextTick, proxyTabFocus, raf } from \"@zag-js/dom-query\";\nimport { getPlacement } from \"@zag-js/popper\";\nimport { preventBodyScroll } from \"@zag-js/remove-scroll\";\nimport { compact } from \"@zag-js/utils\";\nimport { createFocusTrap } from \"focus-trap\";\nfunction machine(userContext) {\n  const ctx = compact(userContext);\n  return createMachine({\n    id: \"popover\",\n    initial: ctx.open ? \"open\" : \"closed\",\n    context: {\n      closeOnInteractOutside: true,\n      closeOnEscape: true,\n      autoFocus: true,\n      modal: false,\n      portalled: true,\n      positioning: {\n        placement: \"bottom\",\n        ...ctx.positioning\n      },\n      currentPlacement: void 0,\n      ...ctx,\n      renderedElements: {\n        title: true,\n        description: true\n      }\n    },\n    computed: {\n      currentPortalled: ctx2 => !!ctx2.modal || !!ctx2.portalled\n    },\n    watch: {\n      open: [\"toggleVisibility\"]\n    },\n    entry: [\"checkRenderedElements\"],\n    states: {\n      closed: {\n        on: {\n          \"CONTROLLED.OPEN\": {\n            target: \"open\",\n            actions: [\"setInitialFocus\"]\n          },\n          TOGGLE: [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          }, {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n          }],\n          OPEN: [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnOpen\"]\n          }, {\n            target: \"open\",\n            actions: [\"invokeOnOpen\", \"setInitialFocus\"]\n          }]\n        }\n      },\n      open: {\n        activities: [\"trapFocus\", \"preventScroll\", \"hideContentBelow\", \"trackPositioning\", \"trackDismissableElement\", \"proxyTabFocus\"],\n        on: {\n          \"CONTROLLED.CLOSE\": {\n            target: \"closed\",\n            actions: [\"setFinalFocus\"]\n          },\n          CLOSE: [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          }, {\n            target: \"closed\",\n            actions: [\"invokeOnClose\", \"setFinalFocus\"]\n          }],\n          TOGGLE: [{\n            guard: \"isOpenControlled\",\n            actions: [\"invokeOnClose\"]\n          }, {\n            target: \"closed\",\n            actions: [\"invokeOnClose\"]\n          }],\n          \"POSITIONING.SET\": {\n            actions: \"reposition\"\n          }\n        }\n      }\n    }\n  }, {\n    guards: {\n      isOpenControlled: ctx2 => !!ctx2[\"open.controlled\"]\n    },\n    activities: {\n      trackPositioning(ctx2) {\n        ctx2.currentPlacement = ctx2.positioning.placement;\n        const anchorEl = dom.getAnchorEl(ctx2) ?? dom.getTriggerEl(ctx2);\n        const getPositionerEl = () => dom.getPositionerEl(ctx2);\n        return getPlacement(anchorEl, getPositionerEl, {\n          ...ctx2.positioning,\n          defer: true,\n          onComplete(data) {\n            ctx2.currentPlacement = data.placement;\n          }\n        });\n      },\n      trackDismissableElement(ctx2, _evt, _ref) {\n        let {\n          send\n        } = _ref;\n        const getContentEl = () => dom.getContentEl(ctx2);\n        let restoreFocus = true;\n        return trackDismissableElement(getContentEl, {\n          pointerBlocking: ctx2.modal,\n          exclude: dom.getTriggerEl(ctx2),\n          defer: true,\n          onEscapeKeyDown(event) {\n            ctx2.onEscapeKeyDown?.(event);\n            if (ctx2.closeOnEscape) return;\n            event.preventDefault();\n          },\n          onInteractOutside(event) {\n            ctx2.onInteractOutside?.(event);\n            if (event.defaultPrevented) return;\n            restoreFocus = !(event.detail.focusable || event.detail.contextmenu);\n            if (!ctx2.closeOnInteractOutside) {\n              event.preventDefault();\n            }\n          },\n          onPointerDownOutside: ctx2.onPointerDownOutside,\n          onFocusOutside: ctx2.onFocusOutside,\n          persistentElements: ctx2.persistentElements,\n          onDismiss() {\n            send({\n              type: \"CLOSE\",\n              src: \"interact-outside\",\n              restoreFocus\n            });\n          }\n        });\n      },\n      proxyTabFocus(ctx2) {\n        if (ctx2.modal || !ctx2.portalled) return;\n        const getContentEl = () => dom.getContentEl(ctx2);\n        return proxyTabFocus(getContentEl, {\n          triggerElement: dom.getTriggerEl(ctx2),\n          defer: true,\n          onFocus(el) {\n            el.focus({\n              preventScroll: true\n            });\n          }\n        });\n      },\n      hideContentBelow(ctx2) {\n        if (!ctx2.modal) return;\n        const getElements = () => [dom.getContentEl(ctx2), dom.getTriggerEl(ctx2)];\n        return ariaHidden(getElements, {\n          defer: true\n        });\n      },\n      preventScroll(ctx2) {\n        if (!ctx2.modal) return;\n        return preventBodyScroll(dom.getDoc(ctx2));\n      },\n      trapFocus(ctx2) {\n        if (!ctx2.modal) return;\n        let trap;\n        nextTick(() => {\n          const contentEl = dom.getContentEl(ctx2);\n          if (!contentEl) return;\n          trap = createFocusTrap(contentEl, {\n            escapeDeactivates: false,\n            allowOutsideClick: true,\n            preventScroll: true,\n            returnFocusOnDeactivate: true,\n            document: dom.getDoc(ctx2),\n            fallbackFocus: contentEl,\n            initialFocus: getInitialFocus({\n              root: dom.getContentEl(ctx2),\n              getInitialEl: ctx2.initialFocusEl,\n              enabled: ctx2.autoFocus\n            })\n          });\n          try {\n            trap.activate();\n          } catch {}\n        });\n        return () => trap?.deactivate();\n      }\n    },\n    actions: {\n      reposition(ctx2, evt) {\n        const anchorEl = dom.getAnchorEl(ctx2) ?? dom.getTriggerEl(ctx2);\n        const getPositionerEl = () => dom.getPositionerEl(ctx2);\n        getPlacement(anchorEl, getPositionerEl, {\n          ...ctx2.positioning,\n          ...evt.options,\n          defer: true,\n          listeners: false,\n          onComplete(data) {\n            ctx2.currentPlacement = data.placement;\n          }\n        });\n      },\n      checkRenderedElements(ctx2) {\n        raf(() => {\n          Object.assign(ctx2.renderedElements, {\n            title: !!dom.getTitleEl(ctx2),\n            description: !!dom.getDescriptionEl(ctx2)\n          });\n        });\n      },\n      setInitialFocus(ctx2) {\n        if (ctx2.modal) return;\n        raf(() => {\n          const element = getInitialFocus({\n            root: dom.getContentEl(ctx2),\n            getInitialEl: ctx2.initialFocusEl,\n            enabled: ctx2.autoFocus\n          });\n          element?.focus({\n            preventScroll: true\n          });\n        });\n      },\n      setFinalFocus(ctx2, evt) {\n        if (!evt.restoreFocus) return;\n        raf(() => {\n          const element = dom.getTriggerEl(ctx2);\n          element?.focus({\n            preventScroll: true\n          });\n        });\n      },\n      invokeOnOpen(ctx2) {\n        ctx2.onOpenChange?.({\n          open: true\n        });\n      },\n      invokeOnClose(ctx2) {\n        ctx2.onOpenChange?.({\n          open: false\n        });\n      },\n      toggleVisibility(ctx2, evt, _ref2) {\n        let {\n          send\n        } = _ref2;\n        send({\n          type: ctx2.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\",\n          previousEvent: evt\n        });\n      }\n    }\n  });\n}\n\n// src/popover.props.ts\nimport { createProps } from \"@zag-js/types\";\nimport { createSplitProps } from \"@zag-js/utils\";\nvar props = createProps()([\"autoFocus\", \"closeOnEscape\", \"closeOnInteractOutside\", \"dir\", \"getRootNode\", \"id\", \"ids\", \"initialFocusEl\", \"modal\", \"onEscapeKeyDown\", \"onFocusOutside\", \"onInteractOutside\", \"onOpenChange\", \"onPointerDownOutside\", \"open.controlled\", \"open\", \"persistentElements\", \"portalled\", \"positioning\"]);\nvar splitProps = createSplitProps(props);\nexport { anatomy, connect, machine, props, splitProps };","map":{"version":3,"names":["createAnatomy","anatomy","parts","build","dataAttr","getPlacementStyles","createScope","getFocusables","dom","getAnchorId","ctx","ids","anchor","id","getTriggerId","trigger","getContentId","content","getPositionerId","positioner","getArrowId","arrow","getTitleId","title","getDescriptionId","description","getCloseTriggerId","closeTrigger","getAnchorEl","getById","getTriggerEl","getContentEl","getPositionerEl","getTitleEl","getDescriptionEl","getFocusableEls","getFirstFocusableEl","connect","state","send","normalize","open","matches","currentPlacement","context","portalled","currentPortalled","rendered","renderedElements","popperStyles","positioning","placement","setOpen","nextOpen","reposition","options","arguments","length","undefined","type","getArrowProps","element","attrs","dir","style","getArrowTipProps","arrowTip","getAnchorProps","getTriggerProps","button","onClick","event","defaultPrevented","onBlur","target","relatedTarget","getIndicatorProps","indicator","getPositionerProps","floating","getContentProps","tabIndex","role","hidden","getTitleProps","getDescriptionProps","getCloseTriggerProps","ariaHidden","createMachine","trackDismissableElement","getInitialFocus","nextTick","proxyTabFocus","raf","getPlacement","preventBodyScroll","compact","createFocusTrap","machine","userContext","initial","closeOnInteractOutside","closeOnEscape","autoFocus","modal","computed","ctx2","watch","entry","states","closed","on","actions","TOGGLE","guard","OPEN","activities","CLOSE","guards","isOpenControlled","trackPositioning","anchorEl","defer","onComplete","data","_evt","_ref","restoreFocus","pointerBlocking","exclude","onEscapeKeyDown","preventDefault","onInteractOutside","detail","focusable","contextmenu","onPointerDownOutside","onFocusOutside","persistentElements","onDismiss","src","triggerElement","onFocus","el","focus","preventScroll","hideContentBelow","getElements","getDoc","trapFocus","trap","contentEl","escapeDeactivates","allowOutsideClick","returnFocusOnDeactivate","document","fallbackFocus","initialFocus","root","getInitialEl","initialFocusEl","enabled","activate","deactivate","evt","listeners","checkRenderedElements","Object","assign","setInitialFocus","setFinalFocus","invokeOnOpen","onOpenChange","invokeOnClose","toggleVisibility","_ref2","previousEvent","createProps","createSplitProps","props","splitProps"],"sources":["/Users/rishil/AIM-MedVisor/node_modules/@zag-js/popover/src/popover.anatomy.ts","/Users/rishil/AIM-MedVisor/node_modules/@zag-js/popover/src/popover.connect.ts","/Users/rishil/AIM-MedVisor/node_modules/@zag-js/popover/src/popover.dom.ts","/Users/rishil/AIM-MedVisor/node_modules/@zag-js/popover/src/popover.machine.ts","/Users/rishil/AIM-MedVisor/node_modules/@zag-js/popover/src/popover.props.ts"],"sourcesContent":["import { createAnatomy } from \"@zag-js/anatomy\"\n\nexport const anatomy = createAnatomy(\"popover\").parts(\n  \"arrow\",\n  \"arrowTip\",\n  \"anchor\",\n  \"trigger\",\n  \"indicator\",\n  \"positioner\",\n  \"content\",\n  \"title\",\n  \"description\",\n  \"closeTrigger\",\n)\n\nexport const parts = anatomy.build()\n","import { dataAttr } from \"@zag-js/dom-query\"\nimport { getPlacementStyles } from \"@zag-js/popper\"\nimport type { NormalizeProps, PropTypes } from \"@zag-js/types\"\nimport { parts } from \"./popover.anatomy\"\nimport { dom } from \"./popover.dom\"\nimport type { MachineApi, Send, State } from \"./popover.types\"\n\nexport function connect<T extends PropTypes>(state: State, send: Send, normalize: NormalizeProps<T>): MachineApi<T> {\n  const open = state.matches(\"open\")\n\n  const currentPlacement = state.context.currentPlacement\n  const portalled = state.context.currentPortalled\n  const rendered = state.context.renderedElements\n\n  const popperStyles = getPlacementStyles({\n    ...state.context.positioning,\n    placement: currentPlacement,\n  })\n\n  return {\n    portalled,\n    open: open,\n    setOpen(nextOpen) {\n      if (nextOpen === open) return\n      send(nextOpen ? \"OPEN\" : \"CLOSE\")\n    },\n    reposition(options = {}) {\n      send({ type: \"POSITIONING.SET\", options })\n    },\n\n    getArrowProps() {\n      return normalize.element({\n        id: dom.getArrowId(state.context),\n        ...parts.arrow.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrow,\n      })\n    },\n\n    getArrowTipProps() {\n      return normalize.element({\n        ...parts.arrowTip.attrs,\n        dir: state.context.dir,\n        style: popperStyles.arrowTip,\n      })\n    },\n\n    getAnchorProps() {\n      return normalize.element({\n        ...parts.anchor.attrs,\n        dir: state.context.dir,\n        id: dom.getAnchorId(state.context),\n      })\n    },\n\n    getTriggerProps() {\n      return normalize.button({\n        ...parts.trigger.attrs,\n        dir: state.context.dir,\n        type: \"button\",\n        \"data-placement\": currentPlacement,\n        id: dom.getTriggerId(state.context),\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"aria-controls\": dom.getContentId(state.context),\n        onClick(event) {\n          if (event.defaultPrevented) return\n          send(\"TOGGLE\")\n        },\n        onBlur(event) {\n          send({ type: \"TRIGGER_BLUR\", target: event.relatedTarget })\n        },\n      })\n    },\n\n    getIndicatorProps() {\n      return normalize.element({\n        ...parts.indicator.attrs,\n        dir: state.context.dir,\n        \"data-state\": open ? \"open\" : \"closed\",\n      })\n    },\n\n    getPositionerProps() {\n      return normalize.element({\n        id: dom.getPositionerId(state.context),\n        ...parts.positioner.attrs,\n        dir: state.context.dir,\n        style: popperStyles.floating,\n      })\n    },\n\n    getContentProps() {\n      return normalize.element({\n        ...parts.content.attrs,\n        dir: state.context.dir,\n        id: dom.getContentId(state.context),\n        tabIndex: -1,\n        role: \"dialog\",\n        hidden: !open,\n        \"data-state\": open ? \"open\" : \"closed\",\n        \"data-expanded\": dataAttr(open),\n        \"aria-labelledby\": rendered.title ? dom.getTitleId(state.context) : undefined,\n        \"aria-describedby\": rendered.description ? dom.getDescriptionId(state.context) : undefined,\n        \"data-placement\": currentPlacement,\n      })\n    },\n\n    getTitleProps() {\n      return normalize.element({\n        ...parts.title.attrs,\n        id: dom.getTitleId(state.context),\n        dir: state.context.dir,\n      })\n    },\n\n    getDescriptionProps() {\n      return normalize.element({\n        ...parts.description.attrs,\n        id: dom.getDescriptionId(state.context),\n        dir: state.context.dir,\n      })\n    },\n\n    getCloseTriggerProps() {\n      return normalize.button({\n        ...parts.closeTrigger.attrs,\n        dir: state.context.dir,\n        id: dom.getCloseTriggerId(state.context),\n        type: \"button\",\n        \"aria-label\": \"close\",\n        onClick(event) {\n          if (event.defaultPrevented) return\n          send(\"CLOSE\")\n        },\n      })\n    },\n  }\n}\n","import { createScope, getFocusables } from \"@zag-js/dom-query\"\nimport type { MachineContext as Ctx } from \"./popover.types\"\n\nexport const dom = createScope({\n  getAnchorId: (ctx: Ctx) => ctx.ids?.anchor ?? `popover:${ctx.id}:anchor`,\n  getTriggerId: (ctx: Ctx) => ctx.ids?.trigger ?? `popover:${ctx.id}:trigger`,\n  getContentId: (ctx: Ctx) => ctx.ids?.content ?? `popover:${ctx.id}:content`,\n  getPositionerId: (ctx: Ctx) => ctx.ids?.positioner ?? `popover:${ctx.id}:popper`,\n  getArrowId: (ctx: Ctx) => ctx.ids?.arrow ?? `popover:${ctx.id}:arrow`,\n  getTitleId: (ctx: Ctx) => ctx.ids?.title ?? `popover:${ctx.id}:title`,\n  getDescriptionId: (ctx: Ctx) => ctx.ids?.description ?? `popover:${ctx.id}:desc`,\n  getCloseTriggerId: (ctx: Ctx) => ctx.ids?.closeTrigger ?? `popover:${ctx.id}:close`,\n\n  getAnchorEl: (ctx: Ctx) => dom.getById(ctx, dom.getAnchorId(ctx)),\n  getTriggerEl: (ctx: Ctx) => dom.getById(ctx, dom.getTriggerId(ctx)),\n  getContentEl: (ctx: Ctx) => dom.getById(ctx, dom.getContentId(ctx)),\n  getPositionerEl: (ctx: Ctx) => dom.getById(ctx, dom.getPositionerId(ctx)),\n  getTitleEl: (ctx: Ctx) => dom.getById(ctx, dom.getTitleId(ctx)),\n  getDescriptionEl: (ctx: Ctx) => dom.getById(ctx, dom.getDescriptionId(ctx)),\n\n  getFocusableEls: (ctx: Ctx) => getFocusables(dom.getContentEl(ctx)),\n  getFirstFocusableEl: (ctx: Ctx) => dom.getFocusableEls(ctx)[0],\n})\n","import { ariaHidden } from \"@zag-js/aria-hidden\"\nimport { createMachine } from \"@zag-js/core\"\nimport { trackDismissableElement } from \"@zag-js/dismissable\"\nimport { getInitialFocus, nextTick, proxyTabFocus, raf } from \"@zag-js/dom-query\"\nimport { getPlacement } from \"@zag-js/popper\"\nimport { preventBodyScroll } from \"@zag-js/remove-scroll\"\nimport { compact } from \"@zag-js/utils\"\nimport { createFocusTrap, type FocusTrap } from \"focus-trap\"\nimport { dom } from \"./popover.dom\"\nimport type { MachineContext, MachineState, UserDefinedContext } from \"./popover.types\"\n\nexport function machine(userContext: UserDefinedContext) {\n  const ctx = compact(userContext)\n  return createMachine<MachineContext, MachineState>(\n    {\n      id: \"popover\",\n      initial: ctx.open ? \"open\" : \"closed\",\n      context: {\n        closeOnInteractOutside: true,\n        closeOnEscape: true,\n        autoFocus: true,\n        modal: false,\n        portalled: true,\n        positioning: {\n          placement: \"bottom\",\n          ...ctx.positioning,\n        },\n        currentPlacement: undefined,\n        ...ctx,\n        renderedElements: {\n          title: true,\n          description: true,\n        },\n      },\n\n      computed: {\n        currentPortalled: (ctx) => !!ctx.modal || !!ctx.portalled,\n      },\n\n      watch: {\n        open: [\"toggleVisibility\"],\n      },\n\n      entry: [\"checkRenderedElements\"],\n\n      states: {\n        closed: {\n          on: {\n            \"CONTROLLED.OPEN\": {\n              target: \"open\",\n              actions: [\"setInitialFocus\"],\n            },\n            TOGGLE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"],\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\"],\n              },\n            ],\n            OPEN: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnOpen\"],\n              },\n              {\n                target: \"open\",\n                actions: [\"invokeOnOpen\", \"setInitialFocus\"],\n              },\n            ],\n          },\n        },\n\n        open: {\n          activities: [\n            \"trapFocus\",\n            \"preventScroll\",\n            \"hideContentBelow\",\n            \"trackPositioning\",\n            \"trackDismissableElement\",\n            \"proxyTabFocus\",\n          ],\n          on: {\n            \"CONTROLLED.CLOSE\": {\n              target: \"closed\",\n              actions: [\"setFinalFocus\"],\n            },\n            CLOSE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"],\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\", \"setFinalFocus\"],\n              },\n            ],\n            TOGGLE: [\n              {\n                guard: \"isOpenControlled\",\n                actions: [\"invokeOnClose\"],\n              },\n              {\n                target: \"closed\",\n                actions: [\"invokeOnClose\"],\n              },\n            ],\n            \"POSITIONING.SET\": {\n              actions: \"reposition\",\n            },\n          },\n        },\n      },\n    },\n    {\n      guards: {\n        isOpenControlled: (ctx) => !!ctx[\"open.controlled\"],\n      },\n      activities: {\n        trackPositioning(ctx) {\n          ctx.currentPlacement = ctx.positioning.placement\n          const anchorEl = dom.getAnchorEl(ctx) ?? dom.getTriggerEl(ctx)\n          const getPositionerEl = () => dom.getPositionerEl(ctx)\n          return getPlacement(anchorEl, getPositionerEl, {\n            ...ctx.positioning,\n            defer: true,\n            onComplete(data) {\n              ctx.currentPlacement = data.placement\n            },\n          })\n        },\n        trackDismissableElement(ctx, _evt, { send }) {\n          const getContentEl = () => dom.getContentEl(ctx)\n          let restoreFocus = true\n          return trackDismissableElement(getContentEl, {\n            pointerBlocking: ctx.modal,\n            exclude: dom.getTriggerEl(ctx),\n            defer: true,\n            onEscapeKeyDown(event) {\n              ctx.onEscapeKeyDown?.(event)\n              if (ctx.closeOnEscape) return\n              event.preventDefault()\n            },\n            onInteractOutside(event) {\n              ctx.onInteractOutside?.(event)\n              if (event.defaultPrevented) return\n              restoreFocus = !(event.detail.focusable || event.detail.contextmenu)\n              if (!ctx.closeOnInteractOutside) {\n                event.preventDefault()\n              }\n            },\n            onPointerDownOutside: ctx.onPointerDownOutside,\n            onFocusOutside: ctx.onFocusOutside,\n            persistentElements: ctx.persistentElements,\n            onDismiss() {\n              send({ type: \"CLOSE\", src: \"interact-outside\", restoreFocus })\n            },\n          })\n        },\n        proxyTabFocus(ctx) {\n          if (ctx.modal || !ctx.portalled) return\n          const getContentEl = () => dom.getContentEl(ctx)\n          return proxyTabFocus(getContentEl, {\n            triggerElement: dom.getTriggerEl(ctx),\n            defer: true,\n            onFocus(el) {\n              el.focus({ preventScroll: true })\n            },\n          })\n        },\n        hideContentBelow(ctx) {\n          if (!ctx.modal) return\n          const getElements = () => [dom.getContentEl(ctx), dom.getTriggerEl(ctx)]\n          return ariaHidden(getElements, { defer: true })\n        },\n        preventScroll(ctx) {\n          if (!ctx.modal) return\n          return preventBodyScroll(dom.getDoc(ctx))\n        },\n        trapFocus(ctx) {\n          if (!ctx.modal) return\n          let trap: FocusTrap | undefined\n          nextTick(() => {\n            const contentEl = dom.getContentEl(ctx)\n            if (!contentEl) return\n            trap = createFocusTrap(contentEl, {\n              escapeDeactivates: false,\n              allowOutsideClick: true,\n              preventScroll: true,\n              returnFocusOnDeactivate: true,\n              document: dom.getDoc(ctx),\n              fallbackFocus: contentEl,\n              initialFocus: getInitialFocus({\n                root: dom.getContentEl(ctx),\n                getInitialEl: ctx.initialFocusEl,\n                enabled: ctx.autoFocus,\n              }),\n            })\n\n            try {\n              trap.activate()\n            } catch {}\n          })\n          return () => trap?.deactivate()\n        },\n      },\n      actions: {\n        reposition(ctx, evt) {\n          const anchorEl = dom.getAnchorEl(ctx) ?? dom.getTriggerEl(ctx)\n          const getPositionerEl = () => dom.getPositionerEl(ctx)\n          getPlacement(anchorEl, getPositionerEl, {\n            ...ctx.positioning,\n            ...evt.options,\n            defer: true,\n            listeners: false,\n            onComplete(data) {\n              ctx.currentPlacement = data.placement\n            },\n          })\n        },\n        checkRenderedElements(ctx) {\n          raf(() => {\n            Object.assign(ctx.renderedElements, {\n              title: !!dom.getTitleEl(ctx),\n              description: !!dom.getDescriptionEl(ctx),\n            })\n          })\n        },\n        setInitialFocus(ctx) {\n          // handoff to `trapFocus` activity for initial focus\n          if (ctx.modal) return\n          raf(() => {\n            const element = getInitialFocus({\n              root: dom.getContentEl(ctx),\n              getInitialEl: ctx.initialFocusEl,\n              enabled: ctx.autoFocus,\n            })\n            element?.focus({ preventScroll: true })\n          })\n        },\n        setFinalFocus(ctx, evt) {\n          if (!evt.restoreFocus) return\n          raf(() => {\n            const element = dom.getTriggerEl(ctx)\n            element?.focus({ preventScroll: true })\n          })\n        },\n        invokeOnOpen(ctx) {\n          ctx.onOpenChange?.({ open: true })\n        },\n        invokeOnClose(ctx) {\n          ctx.onOpenChange?.({ open: false })\n        },\n        toggleVisibility(ctx, evt, { send }) {\n          send({ type: ctx.open ? \"CONTROLLED.OPEN\" : \"CONTROLLED.CLOSE\", previousEvent: evt })\n        },\n      },\n    },\n  )\n}\n","import { createProps } from \"@zag-js/types\"\nimport { createSplitProps } from \"@zag-js/utils\"\nimport type { UserDefinedContext } from \"./popover.types\"\n\nexport const props = createProps<UserDefinedContext>()([\n  \"autoFocus\",\n  \"closeOnEscape\",\n  \"closeOnInteractOutside\",\n  \"dir\",\n  \"getRootNode\",\n  \"id\",\n  \"ids\",\n  \"initialFocusEl\",\n  \"modal\",\n  \"onEscapeKeyDown\",\n  \"onFocusOutside\",\n  \"onInteractOutside\",\n  \"onOpenChange\",\n  \"onPointerDownOutside\",\n  \"open.controlled\",\n  \"open\",\n  \"persistentElements\",\n  \"portalled\",\n  \"positioning\",\n])\n\nexport const splitProps = createSplitProps<Partial<UserDefinedContext>>(props)\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}