{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { createContext } from '../create-context.js';\nimport { mergeProps } from '../merge-props.js';\nimport { cx } from '../utils/cx.js';\nimport { EMPTY_SLOT_STYLES } from './empty.js';\nimport { chakra } from './factory.js';\nimport { useSlotRecipe } from './use-slot-recipe.js';\nconst upperFirst = str => str.charAt(0).toUpperCase() + str.slice(1);\nconst createSlotRecipeContext = options => {\n  const {\n    key: recipeKey,\n    recipe: recipeConfig\n  } = options;\n  const contextName = upperFirst(recipeKey || recipeConfig.className || \"Component\");\n  const [StylesProvider, useStyles] = createContext({\n    name: `${contextName}StylesContext`,\n    errorMessage: `use${contextName}Styles returned is 'undefined'. Seems you forgot to wrap the components in \"<${contextName}.Root />\" `\n  });\n  const [ClassNamesProvider, useClassNames] = createContext({\n    name: `${contextName}ClassNameContext`,\n    errorMessage: `use${contextName}ClassNames returned is 'undefined'. Seems you forgot to wrap the components in \"<${contextName}.Root />\" `,\n    strict: false\n  });\n  const [PropsProvider, usePropsContext] = createContext({\n    strict: false,\n    name: `${contextName}PropsContext`,\n    providerName: `${contextName}PropsContext`,\n    defaultValue: {}\n  });\n  function useRecipeResult(props) {\n    const {\n      unstyled,\n      ...restProps\n    } = props;\n    const slotRecipe = useSlotRecipe({\n      key: recipeKey,\n      recipe: restProps.recipe || recipeConfig\n    });\n    const [variantProps, otherProps] = slotRecipe.splitVariantProps(restProps);\n    const styles = unstyled ? EMPTY_SLOT_STYLES : slotRecipe(variantProps);\n    return {\n      styles,\n      classNames: slotRecipe.classNameMap,\n      props: otherProps\n    };\n  }\n  function withRootProvider(Component) {\n    let options2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      defaultProps\n    } = options2;\n    const StyledComponent = inProps => {\n      const props = mergeProps(defaultProps, usePropsContext(), inProps);\n      const {\n        styles,\n        classNames,\n        props: rootProps\n      } = useRecipeResult(props);\n      return /* @__PURE__ */jsx(StylesProvider, {\n        value: styles,\n        children: /* @__PURE__ */jsx(ClassNamesProvider, {\n          value: classNames,\n          children: /* @__PURE__ */jsx(Component, {\n            ...rootProps\n          })\n        })\n      });\n    };\n    StyledComponent.displayName = Component.displayName || Component.name;\n    return StyledComponent;\n  }\n  const withProvider = (Component, slot, options2) => {\n    const {\n      defaultProps,\n      ...restOptions\n    } = options2 ?? {};\n    const SuperComponent = chakra(Component, {}, restOptions);\n    const StyledComponent = forwardRef((inProps, ref) => {\n      const props = mergeProps(defaultProps ?? {}, usePropsContext(), inProps);\n      const {\n        styles,\n        props: rootProps,\n        classNames\n      } = useRecipeResult(props);\n      const className = classNames[slot];\n      const element = /* @__PURE__ */jsx(StylesProvider, {\n        value: styles,\n        children: /* @__PURE__ */jsx(ClassNamesProvider, {\n          value: classNames,\n          children: /* @__PURE__ */jsx(SuperComponent, {\n            ref,\n            ...rootProps,\n            css: [styles[slot], props.css],\n            className: cx(props.className, className)\n          })\n        })\n      });\n      return options2?.wrapElement?.(element, props) ?? element;\n    });\n    StyledComponent.displayName = Component.displayName || Component.name;\n    return StyledComponent;\n  };\n  const withContext = (Component, slot, options2) => {\n    const SuperComponent = chakra(Component, {}, options2);\n    const StyledComponent = forwardRef((props, ref) => {\n      const styles = useStyles();\n      const classNames = useClassNames();\n      const className = classNames?.[slot];\n      return /* @__PURE__ */jsx(SuperComponent, {\n        ...props,\n        css: [slot ? styles[slot] : void 0, props.css],\n        ref,\n        className: cx(props.className, className)\n      });\n    });\n    StyledComponent.displayName = Component.displayName || Component.name;\n    return StyledComponent;\n  };\n  return {\n    StylesProvider,\n    ClassNamesProvider,\n    PropsProvider,\n    usePropsContext,\n    useRecipeResult,\n    withProvider,\n    withContext,\n    withRootProvider,\n    useStyles,\n    useClassNames\n  };\n};\nexport { createSlotRecipeContext };","map":{"version":3,"names":["jsx","forwardRef","createContext","mergeProps","cx","EMPTY_SLOT_STYLES","chakra","useSlotRecipe","upperFirst","str","charAt","toUpperCase","slice","createSlotRecipeContext","options","key","recipeKey","recipe","recipeConfig","contextName","className","StylesProvider","useStyles","name","errorMessage","ClassNamesProvider","useClassNames","strict","PropsProvider","usePropsContext","providerName","defaultValue","useRecipeResult","props","unstyled","restProps","slotRecipe","variantProps","otherProps","splitVariantProps","styles","classNames","classNameMap","withRootProvider","Component","options2","arguments","length","undefined","defaultProps","StyledComponent","inProps","rootProps","value","children","displayName","withProvider","slot","restOptions","SuperComponent","ref","element","css","wrapElement","withContext"],"sources":["/Users/rishil/AIM-MedVisor/node_modules/@chakra-ui/react/dist/esm/styled-system/create-slot-recipe-context.js"],"sourcesContent":["\"use strict\";\n\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { createContext } from '../create-context.js';\nimport { mergeProps } from '../merge-props.js';\nimport { cx } from '../utils/cx.js';\nimport { EMPTY_SLOT_STYLES } from './empty.js';\nimport { chakra } from './factory.js';\nimport { useSlotRecipe } from './use-slot-recipe.js';\n\nconst upperFirst = (str) => str.charAt(0).toUpperCase() + str.slice(1);\nconst createSlotRecipeContext = (options) => {\n  const { key: recipeKey, recipe: recipeConfig } = options;\n  const contextName = upperFirst(\n    recipeKey || recipeConfig.className || \"Component\"\n  );\n  const [StylesProvider, useStyles] = createContext({\n    name: `${contextName}StylesContext`,\n    errorMessage: `use${contextName}Styles returned is 'undefined'. Seems you forgot to wrap the components in \"<${contextName}.Root />\" `\n  });\n  const [ClassNamesProvider, useClassNames] = createContext({\n    name: `${contextName}ClassNameContext`,\n    errorMessage: `use${contextName}ClassNames returned is 'undefined'. Seems you forgot to wrap the components in \"<${contextName}.Root />\" `,\n    strict: false\n  });\n  const [PropsProvider, usePropsContext] = createContext({\n    strict: false,\n    name: `${contextName}PropsContext`,\n    providerName: `${contextName}PropsContext`,\n    defaultValue: {}\n  });\n  function useRecipeResult(props) {\n    const { unstyled, ...restProps } = props;\n    const slotRecipe = useSlotRecipe({\n      key: recipeKey,\n      recipe: restProps.recipe || recipeConfig\n    });\n    const [variantProps, otherProps] = slotRecipe.splitVariantProps(restProps);\n    const styles = unstyled ? EMPTY_SLOT_STYLES : slotRecipe(variantProps);\n    return {\n      styles,\n      classNames: slotRecipe.classNameMap,\n      props: otherProps\n    };\n  }\n  function withRootProvider(Component, options2 = {}) {\n    const { defaultProps } = options2;\n    const StyledComponent = (inProps) => {\n      const props = mergeProps(defaultProps, usePropsContext(), inProps);\n      const { styles, classNames, props: rootProps } = useRecipeResult(props);\n      return /* @__PURE__ */ jsx(StylesProvider, { value: styles, children: /* @__PURE__ */ jsx(ClassNamesProvider, { value: classNames, children: /* @__PURE__ */ jsx(Component, { ...rootProps }) }) });\n    };\n    StyledComponent.displayName = Component.displayName || Component.name;\n    return StyledComponent;\n  }\n  const withProvider = (Component, slot, options2) => {\n    const { defaultProps, ...restOptions } = options2 ?? {};\n    const SuperComponent = chakra(Component, {}, restOptions);\n    const StyledComponent = forwardRef((inProps, ref) => {\n      const props = mergeProps(defaultProps ?? {}, usePropsContext(), inProps);\n      const { styles, props: rootProps, classNames } = useRecipeResult(props);\n      const className = classNames[slot];\n      const element = /* @__PURE__ */ jsx(StylesProvider, { value: styles, children: /* @__PURE__ */ jsx(ClassNamesProvider, { value: classNames, children: /* @__PURE__ */ jsx(\n        SuperComponent,\n        {\n          ref,\n          ...rootProps,\n          css: [styles[slot], props.css],\n          className: cx(props.className, className)\n        }\n      ) }) });\n      return options2?.wrapElement?.(element, props) ?? element;\n    });\n    StyledComponent.displayName = Component.displayName || Component.name;\n    return StyledComponent;\n  };\n  const withContext = (Component, slot, options2) => {\n    const SuperComponent = chakra(Component, {}, options2);\n    const StyledComponent = forwardRef((props, ref) => {\n      const styles = useStyles();\n      const classNames = useClassNames();\n      const className = classNames?.[slot];\n      return /* @__PURE__ */ jsx(\n        SuperComponent,\n        {\n          ...props,\n          css: [slot ? styles[slot] : void 0, props.css],\n          ref,\n          className: cx(props.className, className)\n        }\n      );\n    });\n    StyledComponent.displayName = Component.displayName || Component.name;\n    return StyledComponent;\n  };\n  return {\n    StylesProvider,\n    ClassNamesProvider,\n    PropsProvider,\n    usePropsContext,\n    useRecipeResult,\n    withProvider,\n    withContext,\n    withRootProvider,\n    useStyles,\n    useClassNames\n  };\n};\n\nexport { createSlotRecipeContext };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}